#
# PySNMP MIB module RS-XX9-DVBT2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-DVBT2-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 15:44:04 2024
# On host fv-az973-242 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MibModule, rsXx9DvbT2 = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MibModule", "rsXx9DvbT2")
IndexTransmitter, NotificationMask, SwitchOnOff, NotificationState, IndexAB, NotificationPriority = mibBuilder.importSymbols("RS-XX9-TC-MIB", "IndexTransmitter", "NotificationMask", "SwitchOnOff", "NotificationState", "IndexAB", "NotificationPriority")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, ObjectIdentity, ModuleIdentity, Counter64, Unsigned32, Bits, MibIdentifier, Counter32, Integer32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Counter64", "Unsigned32", "Bits", "MibIdentifier", "Counter32", "Integer32", "IpAddress", "iso")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
rsXx9Dvbt2MibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 5))
rsXx9Dvbt2MibModule.setRevisions(('2015-08-25 11:00', '2014-12-22 16:00', '2014-12-03 11:00', '2014-11-03 16:00', '2014-05-15 15:00', '2014-01-14 17:00', '2011-09-12 12:00',))
if mibBuilder.loadTexts: rsXx9Dvbt2MibModule.setLastUpdated('201508251100Z')
if mibBuilder.loadTexts: rsXx9Dvbt2MibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
class Dvbt2IndividualAddressingSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("dataNotAnnounced", 1), ("viaBroadcast", 2), ("txSpecific", 3))

class Dvbt2ChannelBandwidth(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7))
    namedValues = NamedValues(("mhz1p7", 3), ("mhz5", 4), ("mhz6", 5), ("mhz7", 6), ("mhz8", 7))

class Dvbt2PlpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5))
    namedValues = NamedValues(("common", 3), ("dataType1", 4), ("dataType2", 5))

class Dvbt2Modulation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))
    namedValues = NamedValues(("qpsk", 3), ("qam16", 4), ("qam64", 5), ("qam256", 6))

class Dvbt2CodeRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("oneHalf", 3), ("threeFifth", 4), ("twoThird", 5), ("threeFourth", 6), ("fourFifth", 7), ("fiveSixth", 8), ("oneThird", 9), ("twoFifth", 10))

class Dvbt2FEC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4))
    namedValues = NamedValues(("ldpc16K", 3), ("ldpc64K", 4))

class Dvbt2TimeInterleaverType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4))
    namedValues = NamedValues(("single", 3), ("multi", 4))

class Dvbt2BasebandMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4))
    namedValues = NamedValues(("normal", 3), ("highEfficiency", 4))

class Dvbt2Layer1Modulation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))
    namedValues = NamedValues(("bpsk", 3), ("qpsk", 4), ("qam16", 5), ("qam64", 6))

class Dvbt2Layer1FEC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3))
    namedValues = NamedValues(("ldpc16", 3))

class Dvbt2Layer1CodeRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3))
    namedValues = NamedValues(("oneHalf", 3))

class Dvbt2TransmissionSystem(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7))
    namedValues = NamedValues(("t2SISO", 3), ("t2MISO", 4), ("nonT2", 5), ("t2SISOlite", 6), ("t2MISOlite", 7))

class Dvbt2FftSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("k1", 2), ("k2", 3), ("k4", 4), ("k8", 5), ("k16", 6), ("k32", 7))

class Dvbt2GuardInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("oneDiv32", 2), ("oneDiv16", 3), ("oneDiv8", 4), ("oneDiv4", 5), ("oneDiv128", 6), ("nineteenDiv128", 7), ("nineteenDiv256", 8))

class Dvbt2PilotPattern(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("pp1", 3), ("pp2", 4), ("pp3", 5), ("pp4", 6), ("pp5", 7), ("pp6", 8), ("pp7", 9), ("pp8", 10))

class Dvbt2PaprReduction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))
    namedValues = NamedValues(("none", 3), ("ace", 4), ("tr", 5), ("aceTr", 6))

class Dvbt2CellIdSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("manual", 1), ("l1", 2), ("ia", 3))

class Dvbt2L1FrequencySource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("manual", 1), ("l1", 2))

class Dvbt2TxDelayOffsetSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("ia", 2))

class Dvbt2T2Version(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5))
    namedValues = NamedValues(("v111", 3), ("v121", 4), ("v131", 5))

class Dvbt2OnOff(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 3, 4))
    namedValues = NamedValues(("undefined", 1), ("off", 3), ("on", 4))

rsXx9Dvbt2Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0))
dvbt2L1State = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2L1State.setStatus('current')
dvbt2IaState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2IaState.setStatus('current')
dvbt2ConfigurationValid = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 5)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2ConfigurationValid.setStatus('current')
dvbt2ConfigurationSupported = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 6)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2ConfigurationSupported.setStatus('current')
dvbt2ConfigurationMatched = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 7)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2ConfigurationMatched.setStatus('current')
dvbt2EncoderSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 8)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2EncoderSummary.setStatus('current')
dvbt2Test = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 9)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2Test.setStatus('current')
dvbt2SupportedPlps = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 10)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SupportedPlps.setStatus('current')
dvbt2SupportedTrIterations = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 11)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SupportedTrIterations.setStatus('current')
dvbt2T2MiTimeInterleaverBuffer = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 12)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2T2MiTimeInterleaverBuffer.setStatus('obsolete')
dvbt2CompositeSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 100)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2CompositeSummary.setStatus('current')
dvbt2CompositeProfiles = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 101)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2CompositeProfiles.setStatus('current')
dvbt2CompositeFrameLength = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 102)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2CompositeFrameLength.setStatus('current')
dvbt2SubIaState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 202)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SubIaState.setStatus('current')
dvbt2SubConfigurationValid = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 205)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SubConfigurationValid.setStatus('current')
dvbt2SubConfigurationSupported = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 206)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SubConfigurationSupported.setStatus('current')
dvbt2SubConfigurationMatched = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 0, 207)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"))
if mibBuilder.loadTexts: dvbt2SubConfigurationMatched.setStatus('current')
rsXx9Dvbt2Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1))
dvbt2Status = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1))
dvbt2StatusNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1), )
if mibBuilder.loadTexts: dvbt2StatusNotificationTable.setStatus('current')
dvbt2StatusNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationTxIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationExcIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationIdx"))
if mibBuilder.loadTexts: dvbt2StatusNotificationEntry.setStatus('current')
dvbt2StatusNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dvbt2StatusNotificationTxIdx.setStatus('current')
dvbt2StatusNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dvbt2StatusNotificationExcIdx.setStatus('current')
dvbt2StatusNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: dvbt2StatusNotificationIdx.setStatus('current')
dvbt2StatusNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 100, 101, 102, 202, 205, 206, 207))).clone(namedValues=NamedValues(("dvbt2L1State", 1), ("dvbt2IaState", 2), ("dvbt2ConfigurationValid", 5), ("dvbt2ConfigurationSupported", 6), ("dvbt2ConfigurationMatched", 7), ("dvbt2EncoderSummary", 8), ("dvbt2Test", 9), ("dvbt2SupportedPlps", 10), ("dvbt2SupportedTrIterations", 11), ("dvbt2T2MiTimeInterleaverBuffer", 12), ("dvbt2CompositeSummary", 100), ("dvbt2CompositeProfiles", 101), ("dvbt2CompositeFrameLength", 102), ("dvbt2SubIaState", 202), ("dvbt2SubConfigurationValid", 205), ("dvbt2SubConfigurationSupported", 206), ("dvbt2SubConfigurationMatched", 207)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2StatusNotificationName.setStatus('current')
dvbt2StatusNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2StatusNotificationMask.setStatus('current')
dvbt2StatusNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2StatusNotificationPriority.setStatus('current')
dvbt2StatusNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StatusNotificationState.setStatus('current')
dvbt2StateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2), )
if mibBuilder.loadTexts: dvbt2StateTable.setStatus('current')
dvbt2StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationTxIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationExcIdx"))
if mibBuilder.loadTexts: dvbt2StateEntry.setStatus('current')
dvbt2StInputDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("unlocked", 2), ("internal", 3), ("mpeg", 4), ("t2mi", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StInputDetected.setStatus('current')
dvbt2StInputMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 5))).clone(namedValues=NamedValues(("off", 2), ("no", 4), ("yes", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StInputMatched.setStatus('current')
dvbt2StInputRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("internal", 3), ("mpeg", 4), ("t2mi", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StInputRequired.setStatus('current')
dvbt2StConfigAdaptionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("notUsed", 2), ("wrongConfig", 4), ("ok", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StConfigAdaptionState.setStatus('current')
dvbt2StDejitterBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000, 1000000))).setUnits('mus').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StDejitterBufDelay.setStatus('current')
dvbt2StResidualDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500000))).setUnits('mus').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StResidualDelay.setStatus('current')
dvbt2StConfigurationMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2StConfigurationMsg.setStatus('current')
dvbt2Setup = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2))
dvbt2ConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1), )
if mibBuilder.loadTexts: dvbt2ConfigurationTable.setStatus('current')
dvbt2ConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationTxIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationExcIdx"))
if mibBuilder.loadTexts: dvbt2ConfigurationEntry.setStatus('current')
dvbt2ConfigurationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dvbt2ConfigurationTxIdx.setStatus('current')
dvbt2ConfigurationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dvbt2ConfigurationExcIdx.setStatus('current')
dvbt2ConfigurationT2MiInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("composite", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ConfigurationT2MiInterface.setStatus('current')
dvbt2ConfigurationT2MiPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ConfigurationT2MiPID.setStatus('current')
dvbt2ConfigurationT2MiSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ConfigurationT2MiSID.setStatus('current')
dvbt2ConfigurationT2ConfigAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("staticSinglePLP", 2), ("staticMultiPLP", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ConfigurationT2ConfigAdaption.setStatus('current')
dvbt2ConfigurationT2MiDejitterBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ConfigurationT2MiDejitterBufDelay.setStatus('current')
dvbt2LocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2), )
if mibBuilder.loadTexts: dvbt2LocalizationTable.setStatus('current')
dvbt2LocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2LocalizationEntry"))
dvbt2LocalizationEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2LocalizationEntry.setStatus('current')
dvbt2LocalizationTxIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationTxIdentifier.setStatus('current')
dvbt2LocalizationCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 4), Dvbt2CellIdSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationCellIdSource.setStatus('current')
dvbt2LocalizationCellIdManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationCellIdManual.setStatus('current')
dvbt2LocalizationMisoGroupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationMisoGroupSource.setStatus('current')
dvbt2LocalizationMisoGroupManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("group1", 4), ("group2", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationMisoGroupManual.setStatus('current')
dvbt2LocalizationNetworkIdManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationNetworkIdManual.setStatus('current')
dvbt2LocalizationSystemIdManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationSystemIdManual.setStatus('current')
dvbt2LocalizationL1FrequencySource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 10), Dvbt2L1FrequencySource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationL1FrequencySource.setStatus('current')
dvbt2LocalizationL1FrequencyManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000000))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationL1FrequencyManual.setStatus('current')
dvbt2LocalizationTxDelayOffsetSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 12), Dvbt2TxDelayOffsetSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationTxDelayOffsetSource.setStatus('current')
dvbt2LocalizationPaprTrSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3), ("supported", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2LocalizationPaprTrSource.setStatus('current')
dvbt2IndividualAddressingTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3), )
if mibBuilder.loadTexts: dvbt2IndividualAddressingTable.setStatus('current')
dvbt2IndividualAddressingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2IndividualAddressingEntry"))
dvbt2IndividualAddressingEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2IndividualAddressingEntry.setStatus('current')
dvbt2IaTimeOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2IaTimeOffset.setStatus('current')
dvbt2IaTimeOffsetSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 4), Dvbt2IndividualAddressingSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2IaTimeOffsetSource.setStatus('current')
dvbt2IaFrequencyOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 5), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2IaFrequencyOffset.setStatus('current')
dvbt2IaFrequencyOffsetSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 6), Dvbt2IndividualAddressingSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2IaFrequencyOffsetSource.setStatus('current')
dvbt2IaCellID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2IaCellID.setStatus('current')
dvbt2IaCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 3, 1, 8), Dvbt2IndividualAddressingSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2IaCellIdSource.setStatus('current')
dvbt2ChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4), )
if mibBuilder.loadTexts: dvbt2ChannelTable.setStatus('current')
dvbt2ChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2ChannelEntry"))
dvbt2ChannelEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2ChannelEntry.setStatus('current')
dvbt2ChnTransmissionSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("t2SISO", 3), ("t2MISO", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnTransmissionSystem.setStatus('current')
dvbt2ChnBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 4), Dvbt2ChannelBandwidth()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnBandwidth.setStatus('current')
dvbt2ChnFFT = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 5), Dvbt2FftSize()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnFFT.setStatus('current')
dvbt2ChnFftExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 6), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnFftExtended.setStatus('current')
dvbt2ChnGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 7), Dvbt2GuardInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnGuardInterval.setStatus('current')
dvbt2ChnPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 8), Dvbt2PilotPattern()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnPilotPattern.setStatus('current')
dvbt2ChnPaprReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 4, 1, 9), Dvbt2PaprReduction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2ChnPaprReduction.setStatus('current')
dvbt2FrameStructureTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 5), )
if mibBuilder.loadTexts: dvbt2FrameStructureTable.setStatus('current')
dvbt2FrameStructureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 5, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2FrameStructureEntry"))
dvbt2FrameStructureEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2FrameStructureEntry.setStatus('current')
dvbt2FsDataSymbolsPerT2Frame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2FsDataSymbolsPerT2Frame.setStatus('current')
dvbt2FsT2FramesPerSuperFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2FsT2FramesPerSuperFrame.setStatus('current')
dvbt2FsT2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 5, 1, 5), Dvbt2T2Version()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2FsT2Version.setStatus('current')
dvbt2L1Table = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6), )
if mibBuilder.loadTexts: dvbt2L1Table.setStatus('current')
dvbt2L1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2L1Entry"))
dvbt2L1Entry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2L1Entry.setStatus('current')
dvbt2L1Modulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6, 1, 3), Dvbt2Layer1Modulation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2L1Modulation.setStatus('current')
dvbt2L1CodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6, 1, 4), Dvbt2Layer1CodeRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2L1CodeRate.setStatus('current')
dvbt2L1FEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6, 1, 5), Dvbt2Layer1FEC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2L1FEC.setStatus('current')
dvbt2L1Repetition = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 6, 1, 6), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2L1Repetition.setStatus('current')
dvbt2Plp1Table = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7), )
if mibBuilder.loadTexts: dvbt2Plp1Table.setStatus('current')
dvbt2Plp1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2Plp1Entry"))
dvbt2Plp1Entry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2Plp1Entry.setStatus('current')
dvbt2Plp1ID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1ID.setStatus('current')
dvbt2Plp1GroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1GroupID.setStatus('current')
dvbt2Plp1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 5), Dvbt2PlpType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1Type.setStatus('current')
dvbt2Plp1Constellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 6), Dvbt2Modulation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1Constellation.setStatus('current')
dvbt2Plp1Rotation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 7), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1Rotation.setStatus('current')
dvbt2Plp1CodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 8), Dvbt2CodeRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1CodeRate.setStatus('current')
dvbt2Plp1FEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 9), Dvbt2FEC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1FEC.setStatus('current')
dvbt2Plp1TimeInterleaverType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 10), Dvbt2TimeInterleaverType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1TimeInterleaverType.setStatus('current')
dvbt2Plp1TimeInterleaverLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1TimeInterleaverLength.setStatus('current')
dvbt2Plp1BasebandMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 7, 1, 12), Dvbt2BasebandMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2Plp1BasebandMode.setStatus('current')
dvbt2TestTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 9), )
if mibBuilder.loadTexts: dvbt2TestTable.setStatus('current')
dvbt2TestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 9, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2TestEntry"))
dvbt2TestEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2TestEntry.setStatus('current')
dvbt2TestGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 9, 1, 3), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2TestGeneration.setStatus('obsolete')
dvbt2TestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6))).clone(namedValues=NamedValues(("off", 1), ("prbs", 2), ("singleCarrier", 3), ("mute1P1SymOfSuperFrame", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2TestMode.setStatus('current')
dvbt2Output = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3))
dvbt2OutLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2), )
if mibBuilder.loadTexts: dvbt2OutLocalizationTable.setStatus('current')
dvbt2OutLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationEntry"))
dvbt2OutLocalizationEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutLocalizationEntry.setStatus('current')
dvbt2OutLocalizationCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 1), Dvbt2CellIdSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationCellIdSource.setStatus('current')
dvbt2OutLocalizationCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationCellId.setStatus('current')
dvbt2OutLocalizationMisoGroupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationMisoGroupSource.setStatus('current')
dvbt2OutLocalizationMisoGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("unused", 3), ("group1", 4), ("group2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationMisoGroup.setStatus('current')
dvbt2OutLocalizationNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationNetworkId.setStatus('current')
dvbt2OutLocalizationSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationSystemId.setStatus('current')
dvbt2OutLocalizationL1FrequencySource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 8), Dvbt2L1FrequencySource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationL1FrequencySource.setStatus('current')
dvbt2OutLocalizationL1Frequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 9), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationL1Frequency.setStatus('current')
dvbt2OutLocalizationTxDelayOffsetSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 10), Dvbt2TxDelayOffsetSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationTxDelayOffsetSource.setStatus('current')
dvbt2OutLocalizationTxDelayOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 11), Integer32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutLocalizationTxDelayOffset.setStatus('current')
dvbt2OutLocalizationPaprTrSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3), ("supported", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2OutLocalizationPaprTrSource.setStatus('current')
dvbt2OutChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4), )
if mibBuilder.loadTexts: dvbt2OutChannelTable.setStatus('current')
dvbt2OutChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutChannelEntry"))
dvbt2OutChannelEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutChannelEntry.setStatus('current')
dvbt2OutChnTransmissionSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 3), Dvbt2TransmissionSystem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnTransmissionSystem.setStatus('current')
dvbt2OutChnBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 4), Dvbt2ChannelBandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnBandwidth.setStatus('current')
dvbt2OutChnFFT = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 5), Dvbt2FftSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnFFT.setStatus('current')
dvbt2OutChnFftExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 6), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnFftExtended.setStatus('current')
dvbt2OutChnGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 7), Dvbt2GuardInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnGuardInterval.setStatus('current')
dvbt2OutChnPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 8), Dvbt2PilotPattern()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnPilotPattern.setStatus('current')
dvbt2OutChnPaprReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 9), Dvbt2PaprReduction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnPaprReduction.setStatus('current')
dvbt2OutChnT2BaseLite = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 10), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnT2BaseLite.setStatus('current')
dvbt2OutChnPreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("undefined", 1), ("notMixed", 3), ("mixed", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2OutChnPreamble.setStatus('current')
dvbt2OutChnInputStreamTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("tsOnly", 3), ("gsOnly", 4), ("tsAndGs", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnInputStreamTypes.setStatus('current')
dvbt2OutChnRegenerationFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnRegenerationFlag.setStatus('current')
dvbt2OutChnT2Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("base", 3), ("baseLite", 4), ("lite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutChnT2Profile.setStatus('current')
dvbt2OutFrameStructureTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5), )
if mibBuilder.loadTexts: dvbt2OutFrameStructureTable.setStatus('current')
dvbt2OutFrameStructureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutFrameStructureEntry"))
dvbt2OutFrameStructureEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutFrameStructureEntry.setStatus('current')
dvbt2OutFsDataSymbolsPerT2Frame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsDataSymbolsPerT2Frame.setStatus('current')
dvbt2OutFsT2FramesPerSuperFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsT2FramesPerSuperFrame.setStatus('current')
dvbt2OutFsT2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 5), Dvbt2T2Version()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsT2Version.setStatus('current')
dvbt2OutFsSubSlicesPerFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsSubSlicesPerFrame.setStatus('current')
dvbt2OutFsNumOfPLP = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsNumOfPLP.setStatus('current')
dvbt2OutFsNumOfAux = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFsNumOfAux.setStatus('current')
dvbt2OutL1Table = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6), )
if mibBuilder.loadTexts: dvbt2OutL1Table.setStatus('current')
dvbt2OutL1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutL1Entry"))
dvbt2OutL1Entry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutL1Entry.setStatus('current')
dvbt2OutL1Modulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 3), Dvbt2Layer1Modulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1Modulation.setStatus('current')
dvbt2OutL1CodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 4), Dvbt2Layer1CodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1CodeRate.setStatus('current')
dvbt2OutL1FEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 5), Dvbt2Layer1FEC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1FEC.setStatus('current')
dvbt2OutL1Repetition = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 6), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1Repetition.setStatus('current')
dvbt2OutL1PostScrambled = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 7), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1PostScrambled.setStatus('current')
dvbt2OutL1PostExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 6, 1, 8), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutL1PostExtension.setStatus('current')
dvbt2OutPlpTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7), )
if mibBuilder.loadTexts: dvbt2OutPlpTable.setStatus('current')
dvbt2OutPlpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1), ).setIndexNames((0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationTxIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationExcIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2OutPlpIdx"))
if mibBuilder.loadTexts: dvbt2OutPlpEntry.setStatus('current')
dvbt2OutPlpIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: dvbt2OutPlpIdx.setStatus('current')
dvbt2OutPlpID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpID.setStatus('current')
dvbt2OutPlpGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpGroupID.setStatus('current')
dvbt2OutPlpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 5), Dvbt2PlpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpType.setStatus('current')
dvbt2OutPlpPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reserved", 2), ("gfps", 3), ("gcs", 4), ("gse", 5), ("ts", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpPayloadType.setStatus('current')
dvbt2OutPlpConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 7), Dvbt2Modulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpConstellation.setStatus('current')
dvbt2OutPlpRotation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 8), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpRotation.setStatus('current')
dvbt2OutPlpCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 9), Dvbt2CodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpCodeRate.setStatus('current')
dvbt2OutPlpFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 10), Dvbt2FEC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpFEC.setStatus('current')
dvbt2OutPlpFecBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpFecBlocks.setStatus('obsolete')
dvbt2OutPlpTimeInterleaverType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 12), Dvbt2TimeInterleaverType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpTimeInterleaverType.setStatus('current')
dvbt2OutPlpTimeInterleaverLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpTimeInterleaverLength.setStatus('current')
dvbt2OutPlpBasebandMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 14), Dvbt2BasebandMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpBasebandMode.setStatus('current')
dvbt2OutPlpFrameInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpFrameInterval.setStatus('current')
dvbt2OutPlpBasebandPayloadPadding = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 16), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpBasebandPayloadPadding.setStatus('current')
dvbt2OutPlpNullPacketDeletion = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 17), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpNullPacketDeletion.setStatus('current')
dvbt2OutPlpNumOfOtherPlpInBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpNumOfOtherPlpInBand.setStatus('current')
dvbt2OutPlpCmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("undefined", 1), ("aCM", 3), ("cCM", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpCmType.setStatus('current')
dvbt2OutPlpISSY = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("off", 3), ("short", 4), ("long", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpISSY.setStatus('obsolete')
dvbt2OutPlpInBandFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 21), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpInBandFlag.setStatus('current')
dvbt2OutPlpInBandASig = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 22), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpInBandASig.setStatus('current')
dvbt2OutPlpInBandBSig = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 7, 1, 23), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPlpInBandBSig.setStatus('current')
dvbt2OutPaprTrTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8), )
if mibBuilder.loadTexts: dvbt2OutPaprTrTable.setStatus('current')
dvbt2OutPaprTrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrEntry"))
dvbt2OutPaprTrEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutPaprTrEntry.setStatus('current')
dvbt2OutPaprTrIterations = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrIterations.setStatus('current')
dvbt2OutPaprTrClippingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrClippingThreshold.setStatus('current')
dvbt2OutPaprTrIterationsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrIterationsSupported.setStatus('current')
dvbt2OutPaprTrIterationsIA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrIterationsIA.setStatus('current')
dvbt2OutPaprTrIterationsReduced = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrIterationsReduced.setStatus('current')
dvbt2OutPaprTrIterationsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutPaprTrIterationsActive.setStatus('current')
dvbt2OutFefTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9), )
if mibBuilder.loadTexts: dvbt2OutFefTable.setStatus('current')
dvbt2OutFefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2OutFefEntry"))
dvbt2OutFefEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2OutFefEntry.setStatus('current')
dvbt2OutFefOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9, 1, 1), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFefOn.setStatus('current')
dvbt2OutFefType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFefType.setStatus('current')
dvbt2OutFefLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFefLength.setStatus('current')
dvbt2OutFefInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 3, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2OutFefInterval.setStatus('current')
dvbt2CoderSub = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10))
dvbt2SubStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1))
dvbt2SubStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1, 2), )
if mibBuilder.loadTexts: dvbt2SubStateTable.setStatus('current')
dvbt2SubStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1, 2, 1), )
dvbt2StateEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubStateEntry"))
dvbt2SubStateEntry.setIndexNames(*dvbt2StateEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubStateEntry.setStatus('current')
dvbt2SubStInputDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("unlocked", 2), ("internal", 3), ("mpeg", 4), ("t2mi", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubStInputDetected.setStatus('current')
dvbt2SubStInputMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 5))).clone(namedValues=NamedValues(("off", 2), ("no", 4), ("yes", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubStInputMatched.setStatus('current')
dvbt2SubStConfigurationMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubStConfigurationMsg.setStatus('current')
dvbt2SubSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2))
dvbt2SubConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 1), )
if mibBuilder.loadTexts: dvbt2SubConfigurationTable.setStatus('current')
dvbt2SubConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 1, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationEntry"))
dvbt2SubConfigurationEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubConfigurationEntry.setStatus('current')
dvbt2SubConfigurationT2MiInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("composite", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubConfigurationT2MiInterface.setStatus('current')
dvbt2SubConfigurationT2MiPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubConfigurationT2MiPID.setStatus('current')
dvbt2SubConfigurationT2MiSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubConfigurationT2MiSID.setStatus('current')
dvbt2SubLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2), )
if mibBuilder.loadTexts: dvbt2SubLocalizationTable.setStatus('current')
dvbt2SubLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationEntry"))
dvbt2SubLocalizationEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubLocalizationEntry.setStatus('current')
dvbt2SubLocalizationTxIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationTxIdentifier.setStatus('current')
dvbt2SubLocalizationCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 4), Dvbt2CellIdSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationCellIdSource.setStatus('current')
dvbt2SubLocalizationCellIdManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationCellIdManual.setStatus('current')
dvbt2SubLocalizationMisoGroupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationMisoGroupSource.setStatus('current')
dvbt2SubLocalizationMisoGroupManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("group1", 4), ("group2", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationMisoGroupManual.setStatus('current')
dvbt2SubLocalizationL1FrequencySource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 10), Dvbt2L1FrequencySource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationL1FrequencySource.setStatus('current')
dvbt2SubLocalizationL1FrequencyManual = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 2, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000000))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubLocalizationL1FrequencyManual.setStatus('current')
dvbt2SubOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3))
dvbt2SubOutLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2), )
if mibBuilder.loadTexts: dvbt2SubOutLocalizationTable.setStatus('current')
dvbt2SubOutLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationEntry"))
dvbt2SubOutLocalizationEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutLocalizationEntry.setStatus('current')
dvbt2SubOutLocalizationCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 1), Dvbt2CellIdSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationCellIdSource.setStatus('current')
dvbt2SubOutLocalizationCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationCellId.setStatus('current')
dvbt2SubOutLocalizationMisoGroupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationMisoGroupSource.setStatus('current')
dvbt2SubOutLocalizationMisoGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("unused", 3), ("group1", 4), ("group2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationMisoGroup.setStatus('current')
dvbt2SubOutLocalizationNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationNetworkId.setStatus('current')
dvbt2SubOutLocalizationSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationSystemId.setStatus('current')
dvbt2SubOutLocalizationL1Frequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 9), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationL1Frequency.setStatus('current')
dvbt2SubOutLocalizationPaprTrSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("ia", 3), ("supported", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbt2SubOutLocalizationPaprTrSource.setStatus('current')
dvbt2SubOutChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4), )
if mibBuilder.loadTexts: dvbt2SubOutChannelTable.setStatus('current')
dvbt2SubOutChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutChannelEntry"))
dvbt2SubOutChannelEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutChannelEntry.setStatus('current')
dvbt2SubOutChnTransmissionSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 3), Dvbt2TransmissionSystem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnTransmissionSystem.setStatus('current')
dvbt2SubOutChnBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 4), Dvbt2ChannelBandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnBandwidth.setStatus('current')
dvbt2SubOutChnFFT = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 5), Dvbt2FftSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnFFT.setStatus('current')
dvbt2SubOutChnFftExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 6), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnFftExtended.setStatus('current')
dvbt2SubOutChnGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 7), Dvbt2GuardInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnGuardInterval.setStatus('current')
dvbt2SubOutChnPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 8), Dvbt2PilotPattern()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnPilotPattern.setStatus('current')
dvbt2SubOutChnPaprReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 9), Dvbt2PaprReduction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnPaprReduction.setStatus('current')
dvbt2SubOutChnT2Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("base", 3), ("baseLite", 4), ("lite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutChnT2Profile.setStatus('current')
dvbt2SubOutFrameStructureTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5), )
if mibBuilder.loadTexts: dvbt2SubOutFrameStructureTable.setStatus('current')
dvbt2SubOutFrameStructureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutFrameStructureEntry"))
dvbt2SubOutFrameStructureEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutFrameStructureEntry.setStatus('current')
dvbt2SubOutFsDataSymbolsPerT2Frame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFsDataSymbolsPerT2Frame.setStatus('current')
dvbt2SubOutFsT2FramesPerSuperFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFsT2FramesPerSuperFrame.setStatus('current')
dvbt2SubOutFsT2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1, 5), Dvbt2T2Version()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFsT2Version.setStatus('current')
dvbt2SubOutFsNumOfPLP = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFsNumOfPLP.setStatus('current')
dvbt2SubOutFsNumOfAux = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFsNumOfAux.setStatus('current')
dvbt2SubOutL1Table = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6), )
if mibBuilder.loadTexts: dvbt2SubOutL1Table.setStatus('current')
dvbt2SubOutL1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutL1Entry"))
dvbt2SubOutL1Entry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutL1Entry.setStatus('current')
dvbt2SubOutL1Modulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6, 1, 3), Dvbt2Layer1Modulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutL1Modulation.setStatus('current')
dvbt2SubOutL1CodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6, 1, 4), Dvbt2Layer1CodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutL1CodeRate.setStatus('current')
dvbt2SubOutL1Repetition = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6, 1, 6), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutL1Repetition.setStatus('current')
dvbt2SubOutL1PostScrambled = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 6, 1, 7), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutL1PostScrambled.setStatus('current')
dvbt2SubOutPlpTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7), )
if mibBuilder.loadTexts: dvbt2SubOutPlpTable.setStatus('current')
dvbt2SubOutPlpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1), ).setIndexNames((0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationTxIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2ConfigurationExcIdx"), (0, "RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpIdx"))
if mibBuilder.loadTexts: dvbt2SubOutPlpEntry.setStatus('current')
dvbt2SubOutPlpIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: dvbt2SubOutPlpIdx.setStatus('current')
dvbt2SubOutPlpID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpID.setStatus('current')
dvbt2SubOutPlpGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpGroupID.setStatus('current')
dvbt2SubOutPlpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 5), Dvbt2PlpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpType.setStatus('current')
dvbt2SubOutPlpPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reserved", 2), ("gfps", 3), ("gcs", 4), ("gse", 5), ("ts", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpPayloadType.setStatus('current')
dvbt2SubOutPlpConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 7), Dvbt2Modulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpConstellation.setStatus('current')
dvbt2SubOutPlpRotation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 8), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpRotation.setStatus('current')
dvbt2SubOutPlpCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 9), Dvbt2CodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpCodeRate.setStatus('current')
dvbt2SubOutPlpFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 10), Dvbt2FEC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpFEC.setStatus('current')
dvbt2SubOutPlpTimeInterleaverType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 12), Dvbt2TimeInterleaverType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpTimeInterleaverType.setStatus('current')
dvbt2SubOutPlpTimeInterleaverLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpTimeInterleaverLength.setStatus('current')
dvbt2SubOutPlpBasebandMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 7, 1, 14), Dvbt2BasebandMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPlpBasebandMode.setStatus('current')
dvbt2SubOutPaprTrTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8), )
if mibBuilder.loadTexts: dvbt2SubOutPaprTrTable.setStatus('current')
dvbt2SubOutPaprTrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrEntry"))
dvbt2SubOutPaprTrEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutPaprTrEntry.setStatus('current')
dvbt2SubOutPaprTrIterations = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrIterations.setStatus('current')
dvbt2SubOutPaprTrClippingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrClippingThreshold.setStatus('current')
dvbt2SubOutPaprTrIterationsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrIterationsSupported.setStatus('current')
dvbt2SubOutPaprTrIterationsIA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrIterationsIA.setStatus('current')
dvbt2SubOutPaprTrIterationsReduced = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrIterationsReduced.setStatus('current')
dvbt2SubOutPaprTrIterationsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutPaprTrIterationsActive.setStatus('current')
dvbt2SubOutFefTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9), )
if mibBuilder.loadTexts: dvbt2SubOutFefTable.setStatus('current')
dvbt2SubOutFefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9, 1), )
dvbt2ConfigurationEntry.registerAugmentions(("RS-XX9-DVBT2-MIB", "dvbt2SubOutFefEntry"))
dvbt2SubOutFefEntry.setIndexNames(*dvbt2ConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbt2SubOutFefEntry.setStatus('current')
dvbt2SubOutFefOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9, 1, 1), Dvbt2OnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFefOn.setStatus('current')
dvbt2SubOutFefType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFefType.setStatus('current')
dvbt2SubOutFefLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFefLength.setStatus('current')
dvbt2SubOutFefInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 1, 10, 3, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbt2SubOutFefInterval.setStatus('current')
rsXx9Dvbt2Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2))
rsXx9Dvbt2Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 1))
dvbt2BasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 1, 1)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2ObjBasic"), ("RS-XX9-DVBT2-MIB", "dvbt2NotifyBasic"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2BasicCompliance = dvbt2BasicCompliance.setStatus('current')
rsXx9Dvbt2Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2))
dvbt2ObjBasic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 1)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationName"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationMask"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationPriority"), ("RS-XX9-DVBT2-MIB", "dvbt2StatusNotificationState"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationT2MiInterface"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationT2MiPID"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationTxIdentifier"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationCellIdSource"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationCellIdManual"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationMisoGroupSource"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationMisoGroupManual"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationNetworkIdManual"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationSystemIdManual"), ("RS-XX9-DVBT2-MIB", "dvbt2IaTimeOffset"), ("RS-XX9-DVBT2-MIB", "dvbt2IaTimeOffsetSource"), ("RS-XX9-DVBT2-MIB", "dvbt2IaFrequencyOffset"), ("RS-XX9-DVBT2-MIB", "dvbt2IaFrequencyOffsetSource"), ("RS-XX9-DVBT2-MIB", "dvbt2IaCellID"), ("RS-XX9-DVBT2-MIB", "dvbt2IaCellIdSource"), ("RS-XX9-DVBT2-MIB", "dvbt2FsDataSymbolsPerT2Frame"), ("RS-XX9-DVBT2-MIB", "dvbt2FsT2FramesPerSuperFrame"), ("RS-XX9-DVBT2-MIB", "dvbt2L1Modulation"), ("RS-XX9-DVBT2-MIB", "dvbt2L1CodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2L1FEC"), ("RS-XX9-DVBT2-MIB", "dvbt2L1Repetition"), ("RS-XX9-DVBT2-MIB", "dvbt2StInputDetected"), ("RS-XX9-DVBT2-MIB", "dvbt2StInputMatched"), ("RS-XX9-DVBT2-MIB", "dvbt2StInputRequired"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1ID"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1GroupID"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1Type"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1Constellation"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1Rotation"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1CodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1FEC"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1TimeInterleaverType"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1TimeInterleaverLength"), ("RS-XX9-DVBT2-MIB", "dvbt2Plp1BasebandMode"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpBasebandMode"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpTimeInterleaverLength"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpTimeInterleaverType"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpFEC"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpCodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpRotation"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpConstellation"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpPayloadType"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpType"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpGroupID"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpID"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1Repetition"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1FEC"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1CodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1Modulation"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationL1FrequencyManual"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationCellId"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationMisoGroup"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationNetworkId"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationSystemId"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationL1Frequency"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsT2Version"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationL1FrequencySource"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationMisoGroupSource"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationCellIdSource"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationL1FrequencySource"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsT2FramesPerSuperFrame"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationTxDelayOffsetSource"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationTxDelayOffsetSource"), ("RS-XX9-DVBT2-MIB", "dvbt2FsT2Version"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationTxDelayOffset"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpFrameInterval"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpBasebandPayloadPadding"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpNullPacketDeletion"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpCmType"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpInBandFlag"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpInBandASig"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpInBandBSig"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationT2MiSID"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnT2BaseLite"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnInputStreamTypes"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnRegenerationFlag"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsSubSlicesPerFrame"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsNumOfPLP"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsNumOfAux"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1PostScrambled"), ("RS-XX9-DVBT2-MIB", "dvbt2OutL1PostExtension"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnPreamble"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpNumOfOtherPlpInBand"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrIterations"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrClippingThreshold"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFefOn"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFefType"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFefLength"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFefInterval"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnT2Profile"), ("RS-XX9-DVBT2-MIB", "dvbt2TestMode"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrIterationsSupported"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrIterationsIA"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrIterationsReduced"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPaprTrIterationsActive"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationT2ConfigAdaption"), ("RS-XX9-DVBT2-MIB", "dvbt2StConfigAdaptionState"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationT2MiDejitterBufDelay"), ("RS-XX9-DVBT2-MIB", "dvbt2OutLocalizationPaprTrSource"), ("RS-XX9-DVBT2-MIB", "dvbt2LocalizationPaprTrSource"), ("RS-XX9-DVBT2-MIB", "dvbt2StResidualDelay"), ("RS-XX9-DVBT2-MIB", "dvbt2StDejitterBufDelay"), ("RS-XX9-DVBT2-MIB", "dvbt2StConfigurationMsg"), ("RS-XX9-DVBT2-MIB", "dvbt2OutFsDataSymbolsPerT2Frame"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnTransmissionSystem"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnBandwidth"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnFFT"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnFftExtended"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnGuardInterval"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnPilotPattern"), ("RS-XX9-DVBT2-MIB", "dvbt2ChnPaprReduction"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnTransmissionSystem"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnBandwidth"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnFFT"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnFftExtended"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnGuardInterval"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnPilotPattern"), ("RS-XX9-DVBT2-MIB", "dvbt2OutChnPaprReduction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2ObjBasic = dvbt2ObjBasic.setStatus('current')
dvbt2NotifyBasic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 2)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2L1State"), ("RS-XX9-DVBT2-MIB", "dvbt2IaState"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationValid"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationSupported"), ("RS-XX9-DVBT2-MIB", "dvbt2ConfigurationMatched"), ("RS-XX9-DVBT2-MIB", "dvbt2EncoderSummary"), ("RS-XX9-DVBT2-MIB", "dvbt2Test"), ("RS-XX9-DVBT2-MIB", "dvbt2SupportedPlps"), ("RS-XX9-DVBT2-MIB", "dvbt2SupportedTrIterations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2NotifyBasic = dvbt2NotifyBasic.setStatus('current')
dvbt2ObjObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 3)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2TestGeneration"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpFecBlocks"), ("RS-XX9-DVBT2-MIB", "dvbt2OutPlpISSY"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2ObjObsoleted = dvbt2ObjObsoleted.setStatus('obsolete')
dvbt2ObjSubBasic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 4)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2SubStInputDetected"), ("RS-XX9-DVBT2-MIB", "dvbt2SubStInputMatched"), ("RS-XX9-DVBT2-MIB", "dvbt2SubStConfigurationMsg"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationT2MiInterface"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationT2MiPID"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationT2MiSID"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationTxIdentifier"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationCellIdSource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationCellIdManual"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationMisoGroupSource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationMisoGroupManual"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationL1FrequencySource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubLocalizationL1FrequencyManual"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationCellIdSource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationCellId"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationMisoGroupSource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationMisoGroup"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationNetworkId"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationSystemId"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationL1Frequency"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutLocalizationPaprTrSource"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnTransmissionSystem"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnBandwidth"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnFFT"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnFftExtended"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnGuardInterval"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnPilotPattern"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnPaprReduction"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutChnT2Profile"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFsDataSymbolsPerT2Frame"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFsT2FramesPerSuperFrame"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFsT2Version"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFsNumOfPLP"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFsNumOfAux"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutL1Modulation"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutL1CodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutL1Repetition"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutL1PostScrambled"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpID"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpGroupID"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpType"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpPayloadType"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpConstellation"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpRotation"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpCodeRate"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpFEC"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpTimeInterleaverType"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpTimeInterleaverLength"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPlpBasebandMode"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrIterations"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrClippingThreshold"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrIterationsSupported"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrIterationsIA"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrIterationsReduced"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutPaprTrIterationsActive"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFefOn"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFefType"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFefLength"), ("RS-XX9-DVBT2-MIB", "dvbt2SubOutFefInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2ObjSubBasic = dvbt2ObjSubBasic.setStatus('current')
dvbt2NotifySubBasic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 5)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2CompositeSummary"), ("RS-XX9-DVBT2-MIB", "dvbt2CompositeProfiles"), ("RS-XX9-DVBT2-MIB", "dvbt2CompositeFrameLength"), ("RS-XX9-DVBT2-MIB", "dvbt2SubIaState"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationValid"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationSupported"), ("RS-XX9-DVBT2-MIB", "dvbt2SubConfigurationMatched"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2NotifySubBasic = dvbt2NotifySubBasic.setStatus('current')
dvbt2NotifObsoleted = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5, 2, 2, 6)).setObjects(("RS-XX9-DVBT2-MIB", "dvbt2T2MiTimeInterleaverBuffer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbt2NotifObsoleted = dvbt2NotifObsoleted.setStatus('obsolete')
mibBuilder.exportSymbols("RS-XX9-DVBT2-MIB", dvbt2OutLocalizationTable=dvbt2OutLocalizationTable, dvbt2IaFrequencyOffset=dvbt2IaFrequencyOffset, dvbt2SubStInputMatched=dvbt2SubStInputMatched, dvbt2SubOutFefType=dvbt2SubOutFefType, dvbt2StatusNotificationPriority=dvbt2StatusNotificationPriority, dvbt2IaState=dvbt2IaState, dvbt2OutChnBandwidth=dvbt2OutChnBandwidth, dvbt2OutPaprTrIterationsSupported=dvbt2OutPaprTrIterationsSupported, dvbt2Plp1BasebandMode=dvbt2Plp1BasebandMode, dvbt2OutFrameStructureEntry=dvbt2OutFrameStructureEntry, dvbt2TestMode=dvbt2TestMode, dvbt2OutPaprTrIterationsIA=dvbt2OutPaprTrIterationsIA, dvbt2SubOutChnFFT=dvbt2SubOutChnFFT, dvbt2StatusNotificationName=dvbt2StatusNotificationName, dvbt2OutL1Table=dvbt2OutL1Table, dvbt2SubOutChannelTable=dvbt2SubOutChannelTable, dvbt2L1State=dvbt2L1State, Dvbt2CodeRate=Dvbt2CodeRate, Dvbt2Modulation=Dvbt2Modulation, Dvbt2PilotPattern=Dvbt2PilotPattern, dvbt2NotifySubBasic=dvbt2NotifySubBasic, dvbt2OutPlpInBandBSig=dvbt2OutPlpInBandBSig, dvbt2SubOutLocalizationCellId=dvbt2SubOutLocalizationCellId, dvbt2OutLocalizationMisoGroup=dvbt2OutLocalizationMisoGroup, dvbt2OutFefType=dvbt2OutFefType, Dvbt2T2Version=Dvbt2T2Version, dvbt2SubConfigurationT2MiInterface=dvbt2SubConfigurationT2MiInterface, dvbt2L1Entry=dvbt2L1Entry, dvbt2Plp1TimeInterleaverLength=dvbt2Plp1TimeInterleaverLength, dvbt2OutChnFftExtended=dvbt2OutChnFftExtended, dvbt2SubOutChnBandwidth=dvbt2SubOutChnBandwidth, dvbt2Setup=dvbt2Setup, dvbt2SubStInputDetected=dvbt2SubStInputDetected, dvbt2SubLocalizationL1FrequencyManual=dvbt2SubLocalizationL1FrequencyManual, dvbt2SubOutLocalizationL1Frequency=dvbt2SubOutLocalizationL1Frequency, dvbt2Output=dvbt2Output, dvbt2OutFrameStructureTable=dvbt2OutFrameStructureTable, dvbt2SubOutput=dvbt2SubOutput, dvbt2Plp1TimeInterleaverType=dvbt2Plp1TimeInterleaverType, Dvbt2Layer1Modulation=Dvbt2Layer1Modulation, Dvbt2TransmissionSystem=Dvbt2TransmissionSystem, dvbt2OutPlpTimeInterleaverLength=dvbt2OutPlpTimeInterleaverLength, dvbt2SubStateTable=dvbt2SubStateTable, dvbt2SubOutL1PostScrambled=dvbt2SubOutL1PostScrambled, dvbt2ChnBandwidth=dvbt2ChnBandwidth, dvbt2OutLocalizationNetworkId=dvbt2OutLocalizationNetworkId, dvbt2OutLocalizationTxDelayOffset=dvbt2OutLocalizationTxDelayOffset, dvbt2Plp1CodeRate=dvbt2Plp1CodeRate, dvbt2OutL1Repetition=dvbt2OutL1Repetition, dvbt2OutLocalizationMisoGroupSource=dvbt2OutLocalizationMisoGroupSource, dvbt2SubOutPlpEntry=dvbt2SubOutPlpEntry, rsXx9Dvbt2Compliances=rsXx9Dvbt2Compliances, dvbt2SubOutL1Table=dvbt2SubOutL1Table, dvbt2L1Modulation=dvbt2L1Modulation, dvbt2SubStatus=dvbt2SubStatus, rsXx9Dvbt2Conformance=rsXx9Dvbt2Conformance, dvbt2StResidualDelay=dvbt2StResidualDelay, dvbt2ChannelTable=dvbt2ChannelTable, dvbt2SubOutPaprTrIterations=dvbt2SubOutPaprTrIterations, dvbt2SubOutPaprTrIterationsActive=dvbt2SubOutPaprTrIterationsActive, dvbt2ConfigurationT2MiSID=dvbt2ConfigurationT2MiSID, dvbt2SubOutLocalizationCellIdSource=dvbt2SubOutLocalizationCellIdSource, dvbt2SubLocalizationEntry=dvbt2SubLocalizationEntry, dvbt2SubOutPaprTrIterationsIA=dvbt2SubOutPaprTrIterationsIA, Dvbt2FEC=Dvbt2FEC, Dvbt2GuardInterval=Dvbt2GuardInterval, dvbt2SubOutFsNumOfPLP=dvbt2SubOutFsNumOfPLP, dvbt2ChnTransmissionSystem=dvbt2ChnTransmissionSystem, dvbt2OutFefInterval=dvbt2OutFefInterval, dvbt2LocalizationMisoGroupSource=dvbt2LocalizationMisoGroupSource, Dvbt2BasebandMode=Dvbt2BasebandMode, dvbt2SubLocalizationTable=dvbt2SubLocalizationTable, dvbt2OutLocalizationSystemId=dvbt2OutLocalizationSystemId, dvbt2SubOutPlpGroupID=dvbt2SubOutPlpGroupID, dvbt2OutPaprTrTable=dvbt2OutPaprTrTable, dvbt2SubOutL1Entry=dvbt2SubOutL1Entry, dvbt2SubOutL1CodeRate=dvbt2SubOutL1CodeRate, dvbt2SubOutPlpID=dvbt2SubOutPlpID, dvbt2OutChannelEntry=dvbt2OutChannelEntry, dvbt2SubOutChnFftExtended=dvbt2SubOutChnFftExtended, dvbt2Plp1Type=dvbt2Plp1Type, dvbt2TestGeneration=dvbt2TestGeneration, dvbt2OutChnTransmissionSystem=dvbt2OutChnTransmissionSystem, dvbt2SubOutPlpTable=dvbt2SubOutPlpTable, dvbt2OutFsT2FramesPerSuperFrame=dvbt2OutFsT2FramesPerSuperFrame, dvbt2SubLocalizationMisoGroupManual=dvbt2SubLocalizationMisoGroupManual, dvbt2SubSetup=dvbt2SubSetup, dvbt2SubConfigurationEntry=dvbt2SubConfigurationEntry, dvbt2LocalizationNetworkIdManual=dvbt2LocalizationNetworkIdManual, dvbt2FrameStructureTable=dvbt2FrameStructureTable, dvbt2StateTable=dvbt2StateTable, dvbt2SubOutPlpCodeRate=dvbt2SubOutPlpCodeRate, dvbt2SupportedPlps=dvbt2SupportedPlps, dvbt2OutFefOn=dvbt2OutFefOn, dvbt2ObjSubBasic=dvbt2ObjSubBasic, dvbt2SubOutPlpType=dvbt2SubOutPlpType, dvbt2ChnFFT=dvbt2ChnFFT, dvbt2OutLocalizationL1Frequency=dvbt2OutLocalizationL1Frequency, rsXx9Dvbt2Objects=rsXx9Dvbt2Objects, dvbt2FsDataSymbolsPerT2Frame=dvbt2FsDataSymbolsPerT2Frame, dvbt2BasicCompliance=dvbt2BasicCompliance, dvbt2OutPlpBasebandPayloadPadding=dvbt2OutPlpBasebandPayloadPadding, dvbt2CompositeFrameLength=dvbt2CompositeFrameLength, dvbt2OutPaprTrIterations=dvbt2OutPaprTrIterations, dvbt2OutLocalizationTxDelayOffsetSource=dvbt2OutLocalizationTxDelayOffsetSource, dvbt2StatusNotificationMask=dvbt2StatusNotificationMask, dvbt2SubOutFrameStructureEntry=dvbt2SubOutFrameStructureEntry, dvbt2SubOutPlpRotation=dvbt2SubOutPlpRotation, dvbt2LocalizationCellIdManual=dvbt2LocalizationCellIdManual, dvbt2StatusNotificationExcIdx=dvbt2StatusNotificationExcIdx, dvbt2SubOutPlpTimeInterleaverLength=dvbt2SubOutPlpTimeInterleaverLength, dvbt2StInputDetected=dvbt2StInputDetected, dvbt2ConfigurationT2MiInterface=dvbt2ConfigurationT2MiInterface, dvbt2SubOutPaprTrIterationsReduced=dvbt2SubOutPaprTrIterationsReduced, dvbt2SubLocalizationL1FrequencySource=dvbt2SubLocalizationL1FrequencySource, dvbt2SubOutL1Modulation=dvbt2SubOutL1Modulation, dvbt2SubOutPlpConstellation=dvbt2SubOutPlpConstellation, dvbt2LocalizationTxDelayOffsetSource=dvbt2LocalizationTxDelayOffsetSource, dvbt2OutChnRegenerationFlag=dvbt2OutChnRegenerationFlag, dvbt2SubOutChannelEntry=dvbt2SubOutChannelEntry, dvbt2Plp1ID=dvbt2Plp1ID, dvbt2SubOutChnT2Profile=dvbt2SubOutChnT2Profile, dvbt2ConfigurationMatched=dvbt2ConfigurationMatched, dvbt2Plp1GroupID=dvbt2Plp1GroupID, dvbt2OutLocalizationL1FrequencySource=dvbt2OutLocalizationL1FrequencySource, dvbt2OutPlpCodeRate=dvbt2OutPlpCodeRate, dvbt2SubOutPlpTimeInterleaverType=dvbt2SubOutPlpTimeInterleaverType, PYSNMP_MODULE_ID=rsXx9Dvbt2MibModule, dvbt2StDejitterBufDelay=dvbt2StDejitterBufDelay, dvbt2LocalizationCellIdSource=dvbt2LocalizationCellIdSource, dvbt2LocalizationL1FrequencyManual=dvbt2LocalizationL1FrequencyManual, dvbt2TestEntry=dvbt2TestEntry, dvbt2OutPlpBasebandMode=dvbt2OutPlpBasebandMode, dvbt2OutChannelTable=dvbt2OutChannelTable, Dvbt2FftSize=Dvbt2FftSize, dvbt2OutFsNumOfPLP=dvbt2OutFsNumOfPLP, Dvbt2PlpType=Dvbt2PlpType, dvbt2OutPaprTrIterationsActive=dvbt2OutPaprTrIterationsActive, dvbt2SubOutChnPaprReduction=dvbt2SubOutChnPaprReduction, dvbt2LocalizationPaprTrSource=dvbt2LocalizationPaprTrSource, dvbt2Plp1FEC=dvbt2Plp1FEC, dvbt2OutL1Modulation=dvbt2OutL1Modulation, dvbt2OutL1PostScrambled=dvbt2OutL1PostScrambled, dvbt2OutPlpISSY=dvbt2OutPlpISSY, dvbt2SubOutPaprTrIterationsSupported=dvbt2SubOutPaprTrIterationsSupported, dvbt2FsT2Version=dvbt2FsT2Version, dvbt2OutChnT2BaseLite=dvbt2OutChnT2BaseLite, dvbt2LocalizationL1FrequencySource=dvbt2LocalizationL1FrequencySource, dvbt2OutFefEntry=dvbt2OutFefEntry, dvbt2SubLocalizationMisoGroupSource=dvbt2SubLocalizationMisoGroupSource, dvbt2ConfigurationTable=dvbt2ConfigurationTable, dvbt2OutPaprTrClippingThreshold=dvbt2OutPaprTrClippingThreshold, dvbt2OutPlpFrameInterval=dvbt2OutPlpFrameInterval, dvbt2L1CodeRate=dvbt2L1CodeRate, dvbt2OutChnPreamble=dvbt2OutChnPreamble, dvbt2SupportedTrIterations=dvbt2SupportedTrIterations, dvbt2SubOutLocalizationMisoGroup=dvbt2SubOutLocalizationMisoGroup, dvbt2ConfigurationT2MiPID=dvbt2ConfigurationT2MiPID, dvbt2OutFefLength=dvbt2OutFefLength, dvbt2SubLocalizationTxIdentifier=dvbt2SubLocalizationTxIdentifier, dvbt2SubOutFsT2FramesPerSuperFrame=dvbt2SubOutFsT2FramesPerSuperFrame, dvbt2Status=dvbt2Status, dvbt2OutPlpPayloadType=dvbt2OutPlpPayloadType, dvbt2SubOutPlpPayloadType=dvbt2SubOutPlpPayloadType, dvbt2ConfigurationValid=dvbt2ConfigurationValid, dvbt2StConfigurationMsg=dvbt2StConfigurationMsg, dvbt2IaTimeOffsetSource=dvbt2IaTimeOffsetSource, dvbt2SubOutLocalizationTable=dvbt2SubOutLocalizationTable, dvbt2ConfigurationT2MiDejitterBufDelay=dvbt2ConfigurationT2MiDejitterBufDelay, dvbt2OutChnPaprReduction=dvbt2OutChnPaprReduction, dvbt2SubOutChnPilotPattern=dvbt2SubOutChnPilotPattern, dvbt2IaCellID=dvbt2IaCellID, dvbt2StateEntry=dvbt2StateEntry, dvbt2OutPaprTrEntry=dvbt2OutPaprTrEntry, dvbt2SubConfigurationSupported=dvbt2SubConfigurationSupported, dvbt2OutPlpInBandFlag=dvbt2OutPlpInBandFlag, dvbt2LocalizationSystemIdManual=dvbt2LocalizationSystemIdManual, dvbt2OutFsDataSymbolsPerT2Frame=dvbt2OutFsDataSymbolsPerT2Frame, dvbt2OutPlpConstellation=dvbt2OutPlpConstellation, dvbt2L1Repetition=dvbt2L1Repetition, dvbt2SubOutFefTable=dvbt2SubOutFefTable, dvbt2OutL1Entry=dvbt2OutL1Entry, dvbt2T2MiTimeInterleaverBuffer=dvbt2T2MiTimeInterleaverBuffer, dvbt2IaTimeOffset=dvbt2IaTimeOffset, Dvbt2Layer1FEC=Dvbt2Layer1FEC, dvbt2ConfigurationT2ConfigAdaption=dvbt2ConfigurationT2ConfigAdaption, dvbt2IaFrequencyOffsetSource=dvbt2IaFrequencyOffsetSource, Dvbt2Layer1CodeRate=Dvbt2Layer1CodeRate, dvbt2OutLocalizationEntry=dvbt2OutLocalizationEntry, rsXx9Dvbt2Notifications=rsXx9Dvbt2Notifications, dvbt2IndividualAddressingEntry=dvbt2IndividualAddressingEntry, dvbt2LocalizationMisoGroupManual=dvbt2LocalizationMisoGroupManual, dvbt2OutLocalizationCellId=dvbt2OutLocalizationCellId, dvbt2OutFefTable=dvbt2OutFefTable, dvbt2SubOutLocalizationSystemId=dvbt2SubOutLocalizationSystemId, dvbt2ObjBasic=dvbt2ObjBasic, dvbt2SubOutPlpFEC=dvbt2SubOutPlpFEC, Dvbt2TimeInterleaverType=Dvbt2TimeInterleaverType, dvbt2FrameStructureEntry=dvbt2FrameStructureEntry, dvbt2OutPlpCmType=dvbt2OutPlpCmType, dvbt2SubOutLocalizationEntry=dvbt2SubOutLocalizationEntry, dvbt2SubOutPaprTrEntry=dvbt2SubOutPaprTrEntry, dvbt2OutChnPilotPattern=dvbt2OutChnPilotPattern, dvbt2OutPlpInBandASig=dvbt2OutPlpInBandASig, dvbt2SubOutPaprTrClippingThreshold=dvbt2SubOutPaprTrClippingThreshold, dvbt2ChnPaprReduction=dvbt2ChnPaprReduction, Dvbt2IndividualAddressingSource=Dvbt2IndividualAddressingSource, dvbt2TestTable=dvbt2TestTable, dvbt2EncoderSummary=dvbt2EncoderSummary, dvbt2StConfigAdaptionState=dvbt2StConfigAdaptionState, dvbt2SubConfigurationT2MiPID=dvbt2SubConfigurationT2MiPID, dvbt2OutFsT2Version=dvbt2OutFsT2Version, dvbt2ObjObsoleted=dvbt2ObjObsoleted, dvbt2ConfigurationSupported=dvbt2ConfigurationSupported, dvbt2OutPlpEntry=dvbt2OutPlpEntry, dvbt2SubStateEntry=dvbt2SubStateEntry, dvbt2Plp1Table=dvbt2Plp1Table, dvbt2Plp1Rotation=dvbt2Plp1Rotation, dvbt2OutPlpNumOfOtherPlpInBand=dvbt2OutPlpNumOfOtherPlpInBand, dvbt2OutChnGuardInterval=dvbt2OutChnGuardInterval, dvbt2SubOutFefEntry=dvbt2SubOutFefEntry, dvbt2SubOutLocalizationPaprTrSource=dvbt2SubOutLocalizationPaprTrSource, Dvbt2OnOff=Dvbt2OnOff, dvbt2ChnFftExtended=dvbt2ChnFftExtended, dvbt2Plp1Constellation=dvbt2Plp1Constellation, dvbt2OutLocalizationPaprTrSource=dvbt2OutLocalizationPaprTrSource, dvbt2SubConfigurationMatched=dvbt2SubConfigurationMatched, dvbt2ChannelEntry=dvbt2ChannelEntry, dvbt2OutChnT2Profile=dvbt2OutChnT2Profile, dvbt2StatusNotificationIdx=dvbt2StatusNotificationIdx, dvbt2L1FEC=dvbt2L1FEC, dvbt2OutPlpNullPacketDeletion=dvbt2OutPlpNullPacketDeletion, dvbt2StatusNotificationState=dvbt2StatusNotificationState, dvbt2SubOutPlpIdx=dvbt2SubOutPlpIdx, dvbt2SubOutLocalizationMisoGroupSource=dvbt2SubOutLocalizationMisoGroupSource, dvbt2SubOutFsDataSymbolsPerT2Frame=dvbt2SubOutFsDataSymbolsPerT2Frame, dvbt2OutFsNumOfAux=dvbt2OutFsNumOfAux, rsXx9Dvbt2Groups=rsXx9Dvbt2Groups, dvbt2StatusNotificationEntry=dvbt2StatusNotificationEntry, dvbt2OutChnInputStreamTypes=dvbt2OutChnInputStreamTypes, dvbt2LocalizationTable=dvbt2LocalizationTable, dvbt2ChnPilotPattern=dvbt2ChnPilotPattern, dvbt2OutPaprTrIterationsReduced=dvbt2OutPaprTrIterationsReduced, dvbt2OutPlpRotation=dvbt2OutPlpRotation, Dvbt2L1FrequencySource=Dvbt2L1FrequencySource, dvbt2ConfigurationTxIdx=dvbt2ConfigurationTxIdx, dvbt2Plp1Entry=dvbt2Plp1Entry, Dvbt2ChannelBandwidth=Dvbt2ChannelBandwidth, dvbt2L1Table=dvbt2L1Table, dvbt2SubOutPlpBasebandMode=dvbt2SubOutPlpBasebandMode, dvbt2StInputMatched=dvbt2StInputMatched, dvbt2StatusNotificationTable=dvbt2StatusNotificationTable, dvbt2ChnGuardInterval=dvbt2ChnGuardInterval, dvbt2OutFsSubSlicesPerFrame=dvbt2OutFsSubSlicesPerFrame)
mibBuilder.exportSymbols("RS-XX9-DVBT2-MIB", dvbt2Test=dvbt2Test, dvbt2OutPlpTable=dvbt2OutPlpTable, dvbt2OutL1PostExtension=dvbt2OutL1PostExtension, dvbt2SubOutFrameStructureTable=dvbt2SubOutFrameStructureTable, dvbt2ConfigurationEntry=dvbt2ConfigurationEntry, Dvbt2CellIdSource=Dvbt2CellIdSource, dvbt2StatusNotificationTxIdx=dvbt2StatusNotificationTxIdx, dvbt2OutPlpFecBlocks=dvbt2OutPlpFecBlocks, dvbt2SubConfigurationTable=dvbt2SubConfigurationTable, dvbt2SubOutFsT2Version=dvbt2SubOutFsT2Version, dvbt2NotifObsoleted=dvbt2NotifObsoleted, dvbt2CompositeSummary=dvbt2CompositeSummary, dvbt2SubConfigurationT2MiSID=dvbt2SubConfigurationT2MiSID, dvbt2SubOutFefLength=dvbt2SubOutFefLength, dvbt2ConfigurationExcIdx=dvbt2ConfigurationExcIdx, dvbt2SubOutLocalizationNetworkId=dvbt2SubOutLocalizationNetworkId, dvbt2SubLocalizationCellIdSource=dvbt2SubLocalizationCellIdSource, rsXx9Dvbt2MibModule=rsXx9Dvbt2MibModule, dvbt2SubLocalizationCellIdManual=dvbt2SubLocalizationCellIdManual, Dvbt2PaprReduction=Dvbt2PaprReduction, dvbt2OutL1CodeRate=dvbt2OutL1CodeRate, dvbt2OutPlpID=dvbt2OutPlpID, dvbt2CoderSub=dvbt2CoderSub, dvbt2OutChnFFT=dvbt2OutChnFFT, dvbt2OutPlpGroupID=dvbt2OutPlpGroupID, dvbt2FsT2FramesPerSuperFrame=dvbt2FsT2FramesPerSuperFrame, Dvbt2TxDelayOffsetSource=Dvbt2TxDelayOffsetSource, dvbt2SubOutFsNumOfAux=dvbt2SubOutFsNumOfAux, dvbt2OutPlpType=dvbt2OutPlpType, dvbt2NotifyBasic=dvbt2NotifyBasic, dvbt2SubIaState=dvbt2SubIaState, dvbt2OutPlpFEC=dvbt2OutPlpFEC, dvbt2SubOutFefInterval=dvbt2SubOutFefInterval, dvbt2IndividualAddressingTable=dvbt2IndividualAddressingTable, dvbt2LocalizationTxIdentifier=dvbt2LocalizationTxIdentifier, dvbt2SubConfigurationValid=dvbt2SubConfigurationValid, dvbt2CompositeProfiles=dvbt2CompositeProfiles, dvbt2IaCellIdSource=dvbt2IaCellIdSource, dvbt2StInputRequired=dvbt2StInputRequired, dvbt2SubStConfigurationMsg=dvbt2SubStConfigurationMsg, dvbt2OutPlpTimeInterleaverType=dvbt2OutPlpTimeInterleaverType, dvbt2SubOutChnGuardInterval=dvbt2SubOutChnGuardInterval, dvbt2SubOutPaprTrTable=dvbt2SubOutPaprTrTable, dvbt2SubOutFefOn=dvbt2SubOutFefOn, dvbt2OutL1FEC=dvbt2OutL1FEC, dvbt2SubOutL1Repetition=dvbt2SubOutL1Repetition, dvbt2OutLocalizationCellIdSource=dvbt2OutLocalizationCellIdSource, dvbt2SubOutChnTransmissionSystem=dvbt2SubOutChnTransmissionSystem, dvbt2OutPlpIdx=dvbt2OutPlpIdx, dvbt2LocalizationEntry=dvbt2LocalizationEntry)
