#
# PySNMP MIB module WISI-GTMODULES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/wisi/WISI-GTMODULES-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 09:48:27 2024
# On host fv-az566-8 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Counter64, Bits, iso, TimeTicks, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, ModuleIdentity, Integer32, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Bits", "iso", "TimeTicks", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "ModuleIdentity", "Integer32", "Unsigned32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
gtUnit, = mibBuilder.importSymbols("WISI-TANGRAM-MIB", "gtUnit")
gtModulesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2))
gtModulesMIB.setRevisions(('2016-09-08 00:00', '2016-06-08 00:00', '2015-06-16 00:00', '2013-07-29 00:00', '2013-06-26 00:00', '2012-10-31 00:00', '2011-12-13 00:00', '2011-09-08 00:00', '2011-04-01 00:00',))
if mibBuilder.loadTexts: gtModulesMIB.setLastUpdated('201609080000Z')
if mibBuilder.loadTexts: gtModulesMIB.setOrganization('WISI Communications GmbH & Co. KG')
gtModulesNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0))
gtModulesObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1))
gtModulesConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2))
gtModulesCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 1))
gtModulesGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2))
gtModulesNotifyPlugin = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 1))
if mibBuilder.loadTexts: gtModulesNotifyPlugin.setStatus('current')
gtModulesNotifyPlugout = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 2))
if mibBuilder.loadTexts: gtModulesNotifyPlugout.setStatus('current')
gtModulesNotifyFailure = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 3))
if mibBuilder.loadTexts: gtModulesNotifyFailure.setStatus('current')
gtModulesNotifyRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 4))
if mibBuilder.loadTexts: gtModulesNotifyRedundancy.setStatus('current')
gtModulesNotifyRedundancyClear = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 5))
if mibBuilder.loadTexts: gtModulesNotifyRedundancyClear.setStatus('current')
gtModulesNotifyFailureClear = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 0, 6))
if mibBuilder.loadTexts: gtModulesNotifyFailureClear.setStatus('current')
gtThisModuleSlot = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtThisModuleSlot.setStatus('current')
gtNumModules = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNumModules.setStatus('current')
gtModulesTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3), )
if mibBuilder.loadTexts: gtModulesTable.setStatus('current')
gtModulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtModulesEntry.setStatus('current')
gtModule = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)))
if mibBuilder.loadTexts: gtModule.setStatus('current')
gtModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleName.setStatus('current')
gtModuleHWID = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleHWID.setStatus('current')
gtModuleFWID = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleFWID.setStatus('current')
gtModuleSerNo = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleSerNo.setStatus('current')
gtModuleUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 6), Counter32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleUptime.setStatus('current')
gtModuleLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 7), Counter32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleLifetime.setStatus('current')
gtModulePower = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtModulePower.setStatus('current')
gtModuleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleMode.setStatus('current')
gtModuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleStatus.setStatus('current')
gtModuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleSlot.setStatus('deprecated')
gtModuleFWIDUploaded = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleFWIDUploaded.setStatus('current')
gtModuleReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("running", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtModuleReboot.setStatus('current')
gtNumCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNumCapabilities.setStatus('current')
gtCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 5), )
if mibBuilder.loadTexts: gtCapabilitiesTable.setStatus('current')
gtCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 5, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTMODULES-MIB", "gtChannel"), (0, "WISI-GTMODULES-MIB", "gtCapability"))
if mibBuilder.loadTexts: gtCapabilitiesEntry.setStatus('current')
gtChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: gtChannel.setStatus('current')
gtCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtCapability.setStatus('current')
gtInputsTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 7), )
if mibBuilder.loadTexts: gtInputsTable.setStatus('current')
gtInputsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 7, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTMODULES-MIB", "gtInputsTableIdx"))
if mibBuilder.loadTexts: gtInputsEntry.setStatus('current')
gtInputsTableIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: gtInputsTableIdx.setStatus('current')
gtInputChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 7, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtInputChannel.setStatus('current')
gtInputName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtInputName.setStatus('current')
gtOutputsTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 8), )
if mibBuilder.loadTexts: gtOutputsTable.setStatus('current')
gtOutputsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 8, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTMODULES-MIB", "gtOutputsTableIdx"))
if mibBuilder.loadTexts: gtOutputsEntry.setStatus('current')
gtOutputsTableIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: gtOutputsTableIdx.setStatus('current')
gtOutputChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 8, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtOutputChannel.setStatus('current')
gtOutputName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 1, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtOutputName.setStatus('current')
gtModulesMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 1, 1)).setObjects(("WISI-GTMODULES-MIB", "gtModulesV1Group"), ("WISI-GTMODULES-MIB", "gtModulesSystemGroup"), ("WISI-GTMODULES-MIB", "gtModulesStatsGroup"), ("WISI-GTMODULES-MIB", "gtModulesTrapGroup"), ("WISI-GTMODULES-MIB", "gtModulesSetGroup"), ("WISI-GTMODULES-MIB", "gtModulesBasicNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gtModulesMIBCompliance = gtModulesMIBCompliance.setStatus('current')
gtModulesV1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 1)).setObjects(("WISI-GTMODULES-MIB", "gtThisModuleSlot"), ("WISI-GTMODULES-MIB", "gtNumModules"), ("WISI-GTMODULES-MIB", "gtModuleName"), ("WISI-GTMODULES-MIB", "gtModuleHWID"), ("WISI-GTMODULES-MIB", "gtModuleFWID"), ("WISI-GTMODULES-MIB", "gtModuleSerNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gtModulesV1Group = gtModulesV1Group.setStatus('current')
gtModulesSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 2)).setObjects(("WISI-GTMODULES-MIB", "gtThisModuleSlot"), ("WISI-GTMODULES-MIB", "gtNumModules"), ("WISI-GTMODULES-MIB", "gtModuleName"), ("WISI-GTMODULES-MIB", "gtModuleHWID"), ("WISI-GTMODULES-MIB", "gtModuleFWID"), ("WISI-GTMODULES-MIB", "gtModuleSerNo"), ("WISI-GTMODULES-MIB", "gtCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gtModulesSystemGroup = gtModulesSystemGroup.setStatus('current')
gtModulesStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 3)).setObjects(("WISI-GTMODULES-MIB", "gtNumModules"), ("WISI-GTMODULES-MIB", "gtModuleUptime"), ("WISI-GTMODULES-MIB", "gtModuleLifetime"), ("WISI-GTMODULES-MIB", "gtNumCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gtModulesStatsGroup = gtModulesStatsGroup.setStatus('current')
gtModulesTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 4))
gtModulesSetGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 5))
gtModulesBasicNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 2, 2, 2, 6)).setObjects(("WISI-GTMODULES-MIB", "gtModulesNotifyPlugin"), ("WISI-GTMODULES-MIB", "gtModulesNotifyPlugout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gtModulesBasicNotificationsGroup = gtModulesBasicNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("WISI-GTMODULES-MIB", gtModulePower=gtModulePower, gtNumCapabilities=gtNumCapabilities, gtNumModules=gtNumModules, gtModulesNotifyRedundancy=gtModulesNotifyRedundancy, gtChannel=gtChannel, gtModuleReboot=gtModuleReboot, gtModulesBasicNotificationsGroup=gtModulesBasicNotificationsGroup, PYSNMP_MODULE_ID=gtModulesMIB, gtModulesNotifyFailure=gtModulesNotifyFailure, gtModuleHWID=gtModuleHWID, gtModuleMode=gtModuleMode, gtInputName=gtInputName, gtModulesMIB=gtModulesMIB, gtModuleSerNo=gtModuleSerNo, gtModuleFWID=gtModuleFWID, gtModuleUptime=gtModuleUptime, gtModulesStatsGroup=gtModulesStatsGroup, gtModule=gtModule, gtModulesMIBCompliance=gtModulesMIBCompliance, gtModulesSetGroup=gtModulesSetGroup, gtThisModuleSlot=gtThisModuleSlot, gtModuleSlot=gtModuleSlot, gtModulesCompliances=gtModulesCompliances, gtModulesNotifyFailureClear=gtModulesNotifyFailureClear, gtCapability=gtCapability, gtModulesNotifyPlugin=gtModulesNotifyPlugin, gtModulesNotifications=gtModulesNotifications, gtInputChannel=gtInputChannel, gtOutputChannel=gtOutputChannel, gtModulesConformance=gtModulesConformance, gtModulesSystemGroup=gtModulesSystemGroup, gtModuleStatus=gtModuleStatus, gtModulesNotifyPlugout=gtModulesNotifyPlugout, gtModulesGroups=gtModulesGroups, gtModulesV1Group=gtModulesV1Group, gtCapabilitiesTable=gtCapabilitiesTable, gtInputsEntry=gtInputsEntry, gtModuleLifetime=gtModuleLifetime, gtModulesTable=gtModulesTable, gtModulesTrapGroup=gtModulesTrapGroup, gtOutputsTableIdx=gtOutputsTableIdx, gtModulesNotifyRedundancyClear=gtModulesNotifyRedundancyClear, gtModuleFWIDUploaded=gtModuleFWIDUploaded, gtCapabilitiesEntry=gtCapabilitiesEntry, gtInputsTableIdx=gtInputsTableIdx, gtOutputsEntry=gtOutputsEntry, gtOutputsTable=gtOutputsTable, gtModuleName=gtModuleName, gtModulesObjects=gtModulesObjects, gtOutputName=gtOutputName, gtInputsTable=gtInputsTable, gtModulesEntry=gtModulesEntry)
