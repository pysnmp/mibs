#
# PySNMP MIB module CTRON-SFPS-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-SFPS-POLICY-MIB
# Produced by pysmi-1.1.12 at Thu May 30 02:15:58 2024
# On host fv-az1567-87 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
sfpsVlanMatrix, sfpsVlanMatrixApi, sfpsISPPolicy, sfpsVMMatrix = mibBuilder.importSymbols("CTRON-SFPS-INCLUDE-MIB", "sfpsVlanMatrix", "sfpsVlanMatrixApi", "sfpsISPPolicy", "sfpsVMMatrix")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ObjectIdentity, MibIdentifier, TimeTicks, iso, NotificationType, Gauge32, Integer32, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "MibIdentifier", "TimeTicks", "iso", "NotificationType", "Gauge32", "Integer32", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class HexInteger(Integer32):
    pass

sfpsServiceCenterPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1), )
if mibBuilder.loadTexts: sfpsServiceCenterPolicyTable.setStatus('mandatory')
sfpsServiceCenterPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-POLICY-MIB", "sfpsServiceCenterPolicyHashLeaf"))
if mibBuilder.loadTexts: sfpsServiceCenterPolicyEntry.setStatus('mandatory')
sfpsServiceCenterPolicyHashLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 1), HexInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyHashLeaf.setStatus('mandatory')
sfpsServiceCenterPolicyMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyMetric.setStatus('mandatory')
sfpsServiceCenterPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyName.setStatus('mandatory')
sfpsServiceCenterPolicyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyOperStatus.setStatus('mandatory')
sfpsServiceCenterPolicyAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyAdminStatus.setStatus('mandatory')
sfpsServiceCenterPolicyStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyStatusTime.setStatus('mandatory')
sfpsServiceCenterPolicyRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyRequests.setStatus('mandatory')
sfpsServiceCenterPolicyResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsServiceCenterPolicyResponses.setStatus('mandatory')
sfpsMatrixTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1), )
if mibBuilder.loadTexts: sfpsMatrixTable.setStatus('mandatory')
sfpsMatrixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-POLICY-MIB", "sfpsMatrixRowId"), (0, "CTRON-SFPS-POLICY-MIB", "sfpsMatrixColId"))
if mibBuilder.loadTexts: sfpsMatrixEntry.setStatus('mandatory')
sfpsMatrixRowId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixRowId.setStatus('mandatory')
sfpsMatrixColId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixColId.setStatus('mandatory')
sfpsMatrixUser1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixUser1Type.setStatus('mandatory')
sfpsMatrixUser1Load = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixUser1Load.setStatus('mandatory')
sfpsMatrixUser2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixUser2Type.setStatus('mandatory')
sfpsMatrixUser2Load = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixUser2Load.setStatus('mandatory')
sfpsMatrixConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixConnect.setStatus('mandatory')
sfpsMatrixFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixFlood.setStatus('mandatory')
sfpsMatrixInfoTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2), )
if mibBuilder.loadTexts: sfpsMatrixInfoTable.setStatus('mandatory')
sfpsMatrixInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1), ).setIndexNames((0, "CTRON-SFPS-POLICY-MIB", "sfpsMatrixInfoAddrType"), (0, "CTRON-SFPS-POLICY-MIB", "sfpsMatrixInfoAddrHash"), (0, "CTRON-SFPS-POLICY-MIB", "sfpsMatrixInfoHashIndex"))
if mibBuilder.loadTexts: sfpsMatrixInfoEntry.setStatus('mandatory')
sfpsMatrixInfoAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoAddrType.setStatus('mandatory')
sfpsMatrixInfoAddrHash = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoAddrHash.setStatus('mandatory')
sfpsMatrixInfoHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoHashIndex.setStatus('mandatory')
sfpsMatrixInfoAddrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoAddrValue.setStatus('mandatory')
sfpsMatrixInfoTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoTableIndex.setStatus('mandatory')
sfpsMatrixInfoDefConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoDefConnect.setStatus('mandatory')
sfpsMatrixInfoDefFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMatrixInfoDefFlood.setStatus('mandatory')
sfpsMatrixInfoVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("addEntry", 2), ("deleteEntry", 3), ("setFlagValue", 4), ("clearFlagValue", 5), ("setFlagGlobal", 6), ("clearFlagGlobal", 7), ("setDefaults", 8), ("resetToDefaults", 9), ("setFilter1", 10), ("setFilter2", 11), ("clearFilter1", 12), ("clearFitler2", 13), ("clearTable", 14)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoVerb.setStatus('mandatory')
sfpsMatrixInfoIndex1Tag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoIndex1Tag.setStatus('mandatory')
sfpsMatrixInfoIndex1Load = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoIndex1Load.setStatus('mandatory')
sfpsMatrixInfoIndex2Tag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoIndex2Tag.setStatus('mandatory')
sfpsMatrixInfoIndex2Load = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoIndex2Load.setStatus('mandatory')
sfpsMatrixInfoMatrixFlag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connect", 1), ("flood", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoMatrixFlag.setStatus('mandatory')
sfpsMatrixInfoFlagMask = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 7), HexInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoFlagMask.setStatus('mandatory')
sfpsMatrixInfoFilter1Tag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoFilter1Tag.setStatus('mandatory')
sfpsMatrixInfoFilter1Load = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoFilter1Load.setStatus('mandatory')
sfpsMatrixInfoFilter2Tag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoFilter2Tag.setStatus('mandatory')
sfpsMatrixInfoFilter2Load = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 3, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMatrixInfoFilter2Load.setStatus('mandatory')
sfpsVMMatrixRowIndex = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVMMatrixRowIndex.setStatus('mandatory')
sfpsVMMatrixCellIndexMask = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 4, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVMMatrixCellIndexMask.setStatus('mandatory')
sfpsVMMatrixAction = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 2, 4, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVMMatrixAction.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-SFPS-POLICY-MIB", sfpsMatrixColId=sfpsMatrixColId, sfpsMatrixInfoIndex1Tag=sfpsMatrixInfoIndex1Tag, sfpsServiceCenterPolicyResponses=sfpsServiceCenterPolicyResponses, sfpsMatrixRowId=sfpsMatrixRowId, sfpsServiceCenterPolicyStatusTime=sfpsServiceCenterPolicyStatusTime, sfpsMatrixInfoEntry=sfpsMatrixInfoEntry, sfpsMatrixInfoIndex2Tag=sfpsMatrixInfoIndex2Tag, sfpsMatrixInfoFilter1Tag=sfpsMatrixInfoFilter1Tag, sfpsServiceCenterPolicyEntry=sfpsServiceCenterPolicyEntry, sfpsVMMatrixAction=sfpsVMMatrixAction, sfpsMatrixInfoDefConnect=sfpsMatrixInfoDefConnect, sfpsMatrixInfoAddrHash=sfpsMatrixInfoAddrHash, sfpsMatrixInfoFilter2Load=sfpsMatrixInfoFilter2Load, sfpsMatrixInfoFilter1Load=sfpsMatrixInfoFilter1Load, sfpsMatrixInfoVerb=sfpsMatrixInfoVerb, sfpsServiceCenterPolicyAdminStatus=sfpsServiceCenterPolicyAdminStatus, sfpsMatrixFlood=sfpsMatrixFlood, sfpsMatrixInfoFlagMask=sfpsMatrixInfoFlagMask, sfpsMatrixUser2Type=sfpsMatrixUser2Type, sfpsMatrixInfoAddrValue=sfpsMatrixInfoAddrValue, sfpsMatrixInfoTableIndex=sfpsMatrixInfoTableIndex, sfpsServiceCenterPolicyName=sfpsServiceCenterPolicyName, sfpsServiceCenterPolicyRequests=sfpsServiceCenterPolicyRequests, sfpsMatrixTable=sfpsMatrixTable, sfpsMatrixInfoHashIndex=sfpsMatrixInfoHashIndex, sfpsMatrixInfoDefFlood=sfpsMatrixInfoDefFlood, sfpsVMMatrixRowIndex=sfpsVMMatrixRowIndex, sfpsServiceCenterPolicyTable=sfpsServiceCenterPolicyTable, sfpsMatrixEntry=sfpsMatrixEntry, sfpsMatrixUser2Load=sfpsMatrixUser2Load, sfpsMatrixInfoIndex1Load=sfpsMatrixInfoIndex1Load, HexInteger=HexInteger, sfpsMatrixConnect=sfpsMatrixConnect, sfpsServiceCenterPolicyHashLeaf=sfpsServiceCenterPolicyHashLeaf, sfpsMatrixInfoIndex2Load=sfpsMatrixInfoIndex2Load, sfpsMatrixInfoMatrixFlag=sfpsMatrixInfoMatrixFlag, sfpsVMMatrixCellIndexMask=sfpsVMMatrixCellIndexMask, sfpsMatrixInfoFilter2Tag=sfpsMatrixInfoFilter2Tag, sfpsMatrixInfoTable=sfpsMatrixInfoTable, sfpsMatrixUser1Load=sfpsMatrixUser1Load, sfpsMatrixInfoAddrType=sfpsMatrixInfoAddrType, sfpsMatrixUser1Type=sfpsMatrixUser1Type, sfpsServiceCenterPolicyMetric=sfpsServiceCenterPolicyMetric, sfpsServiceCenterPolicyOperStatus=sfpsServiceCenterPolicyOperStatus)
