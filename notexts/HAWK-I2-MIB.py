#
# PySNMP MIB module HAWK-I2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sinetica/HAWK-I2-MIB
# Produced by pysmi-1.1.12 at Thu Nov 28 03:03:08 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, MibIdentifier, Bits, Unsigned32, NotificationType, Counter64, enterprises, ObjectIdentity, Integer32, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "MibIdentifier", "Bits", "Unsigned32", "NotificationType", "Counter64", "enterprises", "ObjectIdentity", "Integer32", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress")
MacAddress, TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
hawki2MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3711, 24))
hawki2MIB.setRevisions(('2006-06-27 12:00', '2006-03-07 12:00',))
if mibBuilder.loadTexts: hawki2MIB.setLastUpdated('200606271200Z')
if mibBuilder.loadTexts: hawki2MIB.setOrganization('Sinetica Corporation')
class DisplayString(OctetString):
    pass

class ContactState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("open", 1), ("closed", 2))

class InputContactState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("open", 1), ("closed", 2), ("armed", 3), ("triggered", 4))

class RelayState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("off", 2))

class OutputControlState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("activate", 1), ("deactivate", 2), ("logic", 3))

class EnableState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class InputDataType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 255))
    namedValues = NamedValues(("autodetect", 1), ("temperature", 2), ("humidity", 3), ("analogue", 4), ("contact", 5), ("inactive", 255))

sinetica = MibIdentifier((1, 3, 6, 1, 4, 1, 3711))
v1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1))
objects = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 0))
inputs = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1))
outputs = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2))
keypads = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4))
acus = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5))
access = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6))
pdus = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7))
inventory = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99))
trapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 100))
ipCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 1))
ipTHA = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2))
ipContact = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3))
ipEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 1, 1))
ipSelect = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSelect.setStatus('current')
ipInsert = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 1, 1, 2), InputDataType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipInsert.setStatus('current')
ipTempScaleFlag = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("celsius", 1), ("fahrenheit", 2), ("kelvin", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTempScaleFlag.setStatus('current')
ipTHATable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: ipTHATable.setStatus('current')
ipTHAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "ipTHAChan"))
if mibBuilder.loadTexts: ipTHAEntry.setStatus('current')
ipTHAChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHAChan.setStatus('current')
ipTHARS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHARS.setStatus('current')
ipTHAName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAName.setStatus('current')
ipTHALocn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHALocn.setStatus('current')
ipTHAAutoDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAAutoDetect.setStatus('current')
ipTHAType = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 6), InputDataType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAType.setStatus('current')
ipTHAValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHAValue.setStatus('current')
ipTHAScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAScaling.setStatus('current')
ipTHAOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAOffset.setStatus('current')
ipTHAHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAHysteresis.setStatus('current')
ipTHATrapsCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3))
ipTHAThreshTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1), )
if mibBuilder.loadTexts: ipTHAThreshTable.setStatus('current')
ipTHAThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1), ).setIndexNames((0, "HAWK-I2-MIB", "ipTHAThreshChan"))
if mibBuilder.loadTexts: ipTHAThreshEntry.setStatus('current')
ipTHAThreshChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHAThreshChan.setStatus('current')
ipTHAThreshRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHAThreshRS.setStatus('current')
ipTHAUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAUCL.setStatus('current')
ipTHAUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAUWL.setStatus('current')
ipTHALWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHALWL.setStatus('current')
ipTHALCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHALCL.setStatus('current')
ipTHATrapEnTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: ipTHATrapEnTable.setStatus('current')
ipTHATrapEnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "ipTHATrapEnChan"))
if mibBuilder.loadTexts: ipTHATrapEnEntry.setStatus('current')
ipTHATrapEnChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHATrapEnChan.setStatus('current')
ipTHATrapEnRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHATrapEnRS.setStatus('current')
ipTHAUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAUCLTrapEn.setStatus('current')
ipTHAUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHAUWLTrapEn.setStatus('current')
ipTHALWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHALWLTrapEn.setStatus('current')
ipTHALCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHALCLTrapEn.setStatus('current')
ipTHATrapPerTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3), )
if mibBuilder.loadTexts: ipTHATrapPerTable.setStatus('current')
ipTHATrapPerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1), ).setIndexNames((0, "HAWK-I2-MIB", "ipTHATrapPerChan"))
if mibBuilder.loadTexts: ipTHATrapPerEntry.setStatus('current')
ipTHATrapPerChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHATrapPerChan.setStatus('current')
ipTHATrapPerRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTHATrapPerRS.setStatus('current')
ipTHATrapUCLPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHATrapUCLPer.setStatus('current')
ipTHATrapUWLPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHATrapUWLPer.setStatus('current')
ipTHATrapLWLPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHATrapLWLPer.setStatus('current')
ipTHATrapLCLPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 2, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTHATrapLCLPer.setStatus('current')
ipContTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1), )
if mibBuilder.loadTexts: ipContTable.setStatus('current')
ipContEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1), ).setIndexNames((0, "HAWK-I2-MIB", "ipContChan"))
if mibBuilder.loadTexts: ipContEntry.setStatus('current')
ipContChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipContChan.setStatus('current')
ipContRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipContRS.setStatus('current')
ipContName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContName.setStatus('current')
ipContLocn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipContLocn.setStatus('current')
ipContAutoDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContAutoDetect.setStatus('current')
ipContNormState = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 6), ContactState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContNormState.setStatus('current')
ipContCurrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 7), InputContactState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipContCurrState.setStatus('current')
ipContTrigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("positiveEdge", 1), ("negativeEdge", 2), ("level", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContTrigMode.setStatus('current')
ipContReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContReset.setStatus('current')
ipContTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("critical", 1), ("warning", 2), ("information", 3), ("disabled", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContTrapEn.setStatus('current')
ipContTrapPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipContTrapPeriod.setStatus('current')
opEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 1))
opSelect = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opSelect.setStatus('current')
opInsert = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 1, 2), EnableState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opInsert.setStatus('current')
opTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2), )
if mibBuilder.loadTexts: opTable.setStatus('current')
opEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "opChan"))
if mibBuilder.loadTexts: opEntry.setStatus('current')
opChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opChan.setStatus('current')
opRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opRS.setStatus('current')
opName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opName.setStatus('current')
opLocn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opLocn.setStatus('current')
opNormState = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 5), RelayState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opNormState.setStatus('current')
opCurrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 6), RelayState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opCurrState.setStatus('current')
opOnDelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opOnDelTime.setStatus('current')
opOffDelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opOffDelTime.setStatus('current')
opBooleanEqn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opBooleanEqn.setStatus('current')
opTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("critical", 1), ("warning", 2), ("information", 3), ("disabled", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opTrapEn.setStatus('current')
opTrapPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opTrapPeriod.setStatus('current')
opControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 2, 2, 1, 12), OutputControlState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opControlState.setStatus('current')
kpEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 1))
kpSelect = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpSelect.setStatus('current')
kpInsert = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 1, 2), EnableState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpInsert.setStatus('current')
kpCtlTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2), )
if mibBuilder.loadTexts: kpCtlTable.setStatus('current')
kpCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "kpNumber"))
if mibBuilder.loadTexts: kpCtlEntry.setStatus('current')
kpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kpNumber.setStatus('current')
kpRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kpRS.setStatus('current')
kpManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpManufacturer.setStatus('current')
kpName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpName.setStatus('current')
kpDoorLatchTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpDoorLatchTimeOut.setStatus('current')
kpRtnToStndbyTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpRtnToStndbyTimeOut.setStatus('current')
kpEntryCodeValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kpEntryCodeValid.setStatus('current')
kpDoorOpenTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpDoorOpenTimeOut.setStatus('current')
kpRemoteDoorOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpRemoteDoorOpen.setStatus('current')
kpInUseTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("critical", 1), ("warning", 2), ("information", 3), ("disabled", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kpInUseTrapEn.setStatus('current')
acuEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 1))
acuSelect = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSelect.setStatus('current')
acuInsert = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 1, 2), EnableState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuInsert.setStatus('current')
acuCtlTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2), )
if mibBuilder.loadTexts: acuCtlTable.setStatus('current')
acuCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "acuNumber"))
if mibBuilder.loadTexts: acuCtlEntry.setStatus('current')
acuNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acuNumber.setStatus('current')
acuCtlRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acuCtlRS.setStatus('current')
acuManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuManufacturer.setStatus('current')
acuName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuName.setStatus('current')
acuDoorLatchTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuDoorLatchTimeOut.setStatus('current')
acuRtnToStndbyTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuRtnToStndbyTimeOut.setStatus('current')
acuEntryCodeValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acuEntryCodeValid.setStatus('current')
acuDoorOpenTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuDoorOpenTimeOut.setStatus('current')
acuRemoteDoorOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuRemoteDoorOpen.setStatus('current')
acuInUseTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("critical", 1), ("warning", 2), ("information", 3), ("disabled", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuInUseTrapEn.setStatus('current')
accUserCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1))
accUserInstance = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserInstance.setStatus('current')
accUserTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2), )
if mibBuilder.loadTexts: accUserTable.setStatus('current')
accUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "accUserNumber"))
if mibBuilder.loadTexts: accUserEntry.setStatus('current')
accUserNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accUserNumber.setStatus('current')
accUserRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: accUserRS.setStatus('current')
accUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserName.setStatus('current')
accUserCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserCode.setStatus('current')
accUserPrivileges = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserPrivileges.setStatus('current')
accUserExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserExpires.setStatus('current')
accUserSetup = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 6, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accUserSetup.setStatus('current')
pduCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1))
pduOutlets = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2))
pduMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3))
pdusEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 1))
pduSelect = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduSelect.setStatus('current')
pduInsert = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 1, 2), EnableState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduInsert.setStatus('current')
pduTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2), )
if mibBuilder.loadTexts: pduTable.setStatus('current')
pduEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduNumber"))
if mibBuilder.loadTexts: pduEntry.setStatus('current')
pduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduNumber.setStatus('current')
pduRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduRS.setStatus('current')
pduName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduName.setStatus('current')
pduOutEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutEn.setStatus('current')
pduMonEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMonEn.setStatus('current')
pduCommsFail = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commsGood", 1), ("commsFailed", 2), ("commsBadData", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduCommsFail.setStatus('current')
pduOutAll = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1))
pduOutCycleAll = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycleAll.setStatus('current')
pduOutCycleAllPwd = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycleAllPwd.setStatus('current')
pduOutCycleAllAbort = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycleAllAbort.setStatus('current')
pduOutGlobalCycleDelay = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutGlobalCycleDelay.setStatus('current')
pduOutGlobalRebootTime = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutGlobalRebootTime.setStatus('current')
pduOutGlobalCycleAbortTime = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutGlobalCycleAbortTime.setStatus('current')
pduOutCmnTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2), )
if mibBuilder.loadTexts: pduOutCmnTable.setStatus('current')
pduOutCmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduOutCmnPduNumber"))
if mibBuilder.loadTexts: pduOutCmnEntry.setStatus('current')
pduOutCmnPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutCmnPduNumber.setStatus('current')
pduOutCmnRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutCmnRS.setStatus('current')
pduNumOfOutlets = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduNumOfOutlets.setStatus('current')
pduOutCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycle.setStatus('current')
pduOutCyclePwd = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCyclePwd.setStatus('current')
pduOutCycleAbortTask = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycleAbortTask.setStatus('current')
pduOutCycleAbortTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutCycleAbortTime.setStatus('current')
pduOutTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3), )
if mibBuilder.loadTexts: pduOutTable.setStatus('current')
pduOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduOutPduNumber"), (0, "HAWK-I2-MIB", "pduOutNumber"))
if mibBuilder.loadTexts: pduOutEntry.setStatus('current')
pduOutPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutPduNumber.setStatus('current')
pduOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutNumber.setStatus('current')
pduOutRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutRS.setStatus('current')
pduOutName = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutName.setStatus('current')
pduOutOn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("reboot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutOn.setStatus('current')
pduOutPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduOutPwd.setStatus('current')
pduOutCycleDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutCycleDelay.setStatus('current')
pduOutRebootPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 2, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduOutRebootPeriod.setStatus('current')
pduMonTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1), )
if mibBuilder.loadTexts: pduMonTable.setStatus('current')
pduMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduMonPduNumber"))
if mibBuilder.loadTexts: pduMonEntry.setStatus('current')
pduMonPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduMonPduNumber.setStatus('current')
pduMonRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduMonRS.setStatus('current')
pduRMSVoltsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduRMSVoltsValue.setStatus('current')
pduRMSAmpsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduRMSAmpsValue.setStatus('current')
pduTotalEnergyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTotalEnergyValue.setStatus('current')
pduMeanKVAValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduMeanKVAValue.setStatus('current')
pduMeanKWattsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduMeanKWattsValue.setStatus('current')
pduPwrFactorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduPwrFactorValue.setStatus('current')
pduTrapThreshTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2), )
if mibBuilder.loadTexts: pduTrapThreshTable.setStatus('current')
pduTrapThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduTrapThreshPduNumber"))
if mibBuilder.loadTexts: pduTrapThreshEntry.setStatus('current')
pduTrapThreshPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapThreshPduNumber.setStatus('current')
pduTrapThreshRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapThreshRS.setStatus('current')
pduRMSVoltsUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUCL.setStatus('current')
pduRMSVoltsUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUWL.setStatus('current')
pduRMSVoltsLWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLWL.setStatus('current')
pduRMSVoltsLCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLCL.setStatus('current')
pduRMSAmpsUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUCL.setStatus('current')
pduRMSAmpsUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUWL.setStatus('current')
pduRMSAmpsLWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLWL.setStatus('current')
pduRMSAmpsLCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLCL.setStatus('current')
pduEnergyUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUCL.setStatus('current')
pduEnergyUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUWL.setStatus('current')
pduMeanKVAUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUCL.setStatus('current')
pduMeanKVAUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUWL.setStatus('current')
pduMeanKVALWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALWL.setStatus('current')
pduMeanKVALCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALCL.setStatus('current')
pduMeanKWattsUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUCL.setStatus('current')
pduMeanKWattsUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUWL.setStatus('current')
pduMeanKWattsLWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLWL.setStatus('current')
pduMeanKWattsLCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLCL.setStatus('current')
pduPwrFactorUCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUCL.setStatus('current')
pduPwrFactorUWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUWL.setStatus('current')
pduPwrFactorLWL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLWL.setStatus('current')
pduPwrFactorLCL = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLCL.setStatus('current')
pduTrapEnTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3), )
if mibBuilder.loadTexts: pduTrapEnTable.setStatus('current')
pduTrapEnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduTrapEnPduNumber"))
if mibBuilder.loadTexts: pduTrapEnEntry.setStatus('current')
pduTrapEnPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapEnPduNumber.setStatus('current')
pduTrapEnRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapEnRS.setStatus('current')
pduRMSVoltsUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUCLTrapEn.setStatus('current')
pduRMSVoltsUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUWLTrapEn.setStatus('current')
pduRMSVoltsLWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLWLTrapEn.setStatus('current')
pduRMSVoltsLCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLCLTrapEn.setStatus('current')
pduRMSAmpsUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUCLTrapEn.setStatus('current')
pduRMSAmpsUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUWLTrapEn.setStatus('current')
pduRMSAmpsLWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLWLTrapEn.setStatus('current')
pduRMSAmpsLCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLCLTrapEn.setStatus('current')
pduEnergyUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUCLTrapEn.setStatus('current')
pduEnergyUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUWLTrapEn.setStatus('current')
pduMeanKVAUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUCLTrapEn.setStatus('current')
pduMeanKVAUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUWLTrapEn.setStatus('current')
pduMeanKVALWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALWLTrapEn.setStatus('current')
pduMeanKVALCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALCLTrapEn.setStatus('current')
pduMeanKWattsUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUCLTrapEn.setStatus('current')
pduMeanKWattsUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUWLTrapEn.setStatus('current')
pduMeanKWattsLWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLWLTrapEn.setStatus('current')
pduMeanKWattsLCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLCLTrapEn.setStatus('current')
pduPwrFactorUCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUCLTrapEn.setStatus('current')
pduPwrFactorUWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUWLTrapEn.setStatus('current')
pduPwrFactorLWLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLWLTrapEn.setStatus('current')
pduPwrFactorLCLTrapEn = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 3, 1, 24), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLCLTrapEn.setStatus('current')
pduTrapPerTable = MibTable((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4), )
if mibBuilder.loadTexts: pduTrapPerTable.setStatus('current')
pduTrapPerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1), ).setIndexNames((0, "HAWK-I2-MIB", "pduTrapPduNumber"))
if mibBuilder.loadTexts: pduTrapPerEntry.setStatus('current')
pduTrapPduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapPduNumber.setStatus('current')
pduTrapPerRS = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pduTrapPerRS.setStatus('current')
pduRMSVoltsUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUCLTrapPer.setStatus('current')
pduRMSVoltsUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsUWLTrapPer.setStatus('current')
pduRMSVoltsLWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLWLTrapPer.setStatus('current')
pduRMSVoltsLCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSVoltsLCLTrapPer.setStatus('current')
pduRMSAmpsUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUCLTrapPer.setStatus('current')
pduRMSAmpsUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsUWLTrapPer.setStatus('current')
pduRMSAmpsLWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLWLTrapPer.setStatus('current')
pduRMSAmpsLCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduRMSAmpsLCLTrapPer.setStatus('current')
pduEnergyUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUCLTrapPer.setStatus('current')
pduEnergyUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduEnergyUWLTrapPer.setStatus('current')
pduMeanKVAUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUCLTrapPer.setStatus('current')
pduMeanKVAUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVAUWLTrapPer.setStatus('current')
pduMeanKVALWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALWLTrapPer.setStatus('current')
pduMeanKVALCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKVALCLTrapPer.setStatus('current')
pduMeanKWattsUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUCLTrapPer.setStatus('current')
pduMeanKWattsUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsUWLTrapPer.setStatus('current')
pduMeanKWattsLWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLWLTrapPer.setStatus('current')
pduMeanKWattsLCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduMeanKWattsLCLTrapPer.setStatus('current')
pduPwrFactorUCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUCLTrapPer.setStatus('current')
pduPwrFactorUWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorUWLTrapPer.setStatus('current')
pduPwrFactorLWLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLWLTrapPer.setStatus('current')
pduPwrFactorLCLTrapPer = MibTableColumn((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 7, 3, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduPwrFactorLCLTrapPer.setStatus('current')
invProdSignature = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invProdSignature.setStatus('current')
invProdFormatVer = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invProdFormatVer.setStatus('current')
invManufCode = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invManufCode.setStatus('current')
invOrderNum = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invOrderNum.setStatus('current')
invBatchNum = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invBatchNum.setStatus('current')
invProdTestTime = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invProdTestTime.setStatus('current')
invUnitName = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invUnitName.setStatus('current')
invUnitPartNum = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invUnitPartNum.setStatus('current')
invHwRevision = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invHwRevision.setStatus('current')
invFwRevision = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invFwRevision.setStatus('current')
invSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invSerialNum.setStatus('current')
invDefaultIPAddrType = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invDefaultIPAddrType.setStatus('current')
invDefaultIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invDefaultIPAddr.setStatus('current')
invDefaultSubNetMask = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invDefaultSubNetMask.setStatus('current')
invDefaultGWAddr = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invDefaultGWAddr.setStatus('current')
invMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 16), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invMacAddr.setStatus('current')
invOk = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: invOk.setStatus('current')
invInputCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invInputCount.setStatus('current')
invOutputCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invOutputCount.setStatus('current')
invKeypadCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invKeypadCount.setStatus('current')
invAcuCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invAcuCount.setStatus('current')
invAccessUserCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invAccessUserCount.setStatus('current')
invPduCount = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 99, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: invPduCount.setStatus('current')
trapCode = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 100, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCode.setStatus('current')
trapDescription = MibScalar((1, 3, 6, 1, 4, 1, 3711, 24, 1, 1, 100, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapDescription.setStatus('current')
alarmCritical = NotificationType((1, 3, 6, 1, 4, 1, 3711, 24, 0, 1)).setObjects(("HAWK-I2-MIB", "trapCode"), ("HAWK-I2-MIB", "trapDescription"))
if mibBuilder.loadTexts: alarmCritical.setStatus('current')
alarmWarning = NotificationType((1, 3, 6, 1, 4, 1, 3711, 24, 0, 2)).setObjects(("HAWK-I2-MIB", "trapCode"), ("HAWK-I2-MIB", "trapDescription"))
if mibBuilder.loadTexts: alarmWarning.setStatus('current')
alarmInformation = NotificationType((1, 3, 6, 1, 4, 1, 3711, 24, 0, 3)).setObjects(("HAWK-I2-MIB", "trapCode"), ("HAWK-I2-MIB", "trapDescription"))
if mibBuilder.loadTexts: alarmInformation.setStatus('current')
alarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 3711, 24, 0, 4)).setObjects(("HAWK-I2-MIB", "trapCode"), ("HAWK-I2-MIB", "trapDescription"))
if mibBuilder.loadTexts: alarmCleared.setStatus('current')
mibBuilder.exportSymbols("HAWK-I2-MIB", pduRMSVoltsLCLTrapPer=pduRMSVoltsLCLTrapPer, ipSelect=ipSelect, pduEnergyUCLTrapPer=pduEnergyUCLTrapPer, invDefaultIPAddr=invDefaultIPAddr, ipTHATrapEnTable=ipTHATrapEnTable, ipCommon=ipCommon, opOffDelTime=opOffDelTime, opTable=opTable, pduMeanKWattsUCL=pduMeanKWattsUCL, pduOutCmnEntry=pduOutCmnEntry, InputDataType=InputDataType, pduRMSVoltsUWL=pduRMSVoltsUWL, acuSelect=acuSelect, pduCommon=pduCommon, opCurrState=opCurrState, pduMeanKWattsUWLTrapEn=pduMeanKWattsUWLTrapEn, kpDoorLatchTimeOut=kpDoorLatchTimeOut, pduTable=pduTable, pduRMSAmpsUCLTrapPer=pduRMSAmpsUCLTrapPer, invProdSignature=invProdSignature, invUnitPartNum=invUnitPartNum, pduOutCycleAbortTask=pduOutCycleAbortTask, invAccessUserCount=invAccessUserCount, ipTHAUWLTrapEn=ipTHAUWLTrapEn, pduOutOn=pduOutOn, alarmCleared=alarmCleared, pduPwrFactorLCLTrapEn=pduPwrFactorLCLTrapEn, pduOutCycleAllPwd=pduOutCycleAllPwd, ipTHAType=ipTHAType, kpInUseTrapEn=kpInUseTrapEn, acuEntryCodeValid=acuEntryCodeValid, acuDoorOpenTimeOut=acuDoorOpenTimeOut, pduOutPwd=pduOutPwd, pduOutCmnPduNumber=pduOutCmnPduNumber, pduTotalEnergyValue=pduTotalEnergyValue, ipTHATrapUWLPer=ipTHATrapUWLPer, invFwRevision=invFwRevision, pduMeanKWattsLWLTrapEn=pduMeanKWattsLWLTrapEn, ipContLocn=ipContLocn, pduMeanKWattsLWLTrapPer=pduMeanKWattsLWLTrapPer, keypads=keypads, ipTHATrapsCfg=ipTHATrapsCfg, kpRemoteDoorOpen=kpRemoteDoorOpen, pduPwrFactorUCLTrapEn=pduPwrFactorUCLTrapEn, invOk=invOk, alarmCritical=alarmCritical, ipContTrapEn=ipContTrapEn, opRS=opRS, accUserSetup=accUserSetup, pduRMSVoltsUCL=pduRMSVoltsUCL, pduOutPduNumber=pduOutPduNumber, DisplayString=DisplayString, inventory=inventory, ipTHAOffset=ipTHAOffset, ipTHATable=ipTHATable, ipTHATrapPerTable=ipTHATrapPerTable, accUserTable=accUserTable, pduMeanKVALCL=pduMeanKVALCL, pduTrapEnEntry=pduTrapEnEntry, pduRMSAmpsUCLTrapEn=pduRMSAmpsUCLTrapEn, pduRMSAmpsUWLTrapEn=pduRMSAmpsUWLTrapEn, pduMeanKWattsLCLTrapEn=pduMeanKWattsLCLTrapEn, invDefaultSubNetMask=invDefaultSubNetMask, pduOutCyclePwd=pduOutCyclePwd, pduRMSAmpsUCL=pduRMSAmpsUCL, ipContEntry=ipContEntry, pduRMSAmpsUWL=pduRMSAmpsUWL, pduTrapPerEntry=pduTrapPerEntry, pduMonPduNumber=pduMonPduNumber, inputs=inputs, pduMeanKVALWLTrapEn=pduMeanKVALWLTrapEn, invDefaultGWAddr=invDefaultGWAddr, accUserName=accUserName, pduEnergyUWLTrapEn=pduEnergyUWLTrapEn, ipContTrapPeriod=ipContTrapPeriod, pduPwrFactorUWL=pduPwrFactorUWL, pduRMSVoltsUWLTrapEn=pduRMSVoltsUWLTrapEn, pduRMSVoltsValue=pduRMSVoltsValue, pduPwrFactorLCLTrapPer=pduPwrFactorLCLTrapPer, pduPwrFactorUWLTrapPer=pduPwrFactorUWLTrapPer, acuCtlRS=acuCtlRS, ipContReset=ipContReset, PYSNMP_MODULE_ID=hawki2MIB, ipTHAUCL=ipTHAUCL, pduOutlets=pduOutlets, pduRMSAmpsUWLTrapPer=pduRMSAmpsUWLTrapPer, pduMonEn=pduMonEn, acuDoorLatchTimeOut=acuDoorLatchTimeOut, pduPwrFactorUCL=pduPwrFactorUCL, kpInsert=kpInsert, acuInsert=acuInsert, pduMonitor=pduMonitor, pduRMSAmpsLWLTrapPer=pduRMSAmpsLWLTrapPer, acuRtnToStndbyTimeOut=acuRtnToStndbyTimeOut, alarmWarning=alarmWarning, ipTHAThreshEntry=ipTHAThreshEntry, invOrderNum=invOrderNum, traps=traps, ipTHATrapEnEntry=ipTHATrapEnEntry, pduPwrFactorLWLTrapPer=pduPwrFactorLWLTrapPer, pduMeanKVAUWLTrapEn=pduMeanKVAUWLTrapEn, ipContTrigMode=ipContTrigMode, acuEnable=acuEnable, pduMeanKVAUCLTrapEn=pduMeanKVAUCLTrapEn, pduMeanKVAUCL=pduMeanKVAUCL, pduRMSAmpsLCL=pduRMSAmpsLCL, pduTrapEnRS=pduTrapEnRS, opSelect=opSelect, opNormState=opNormState, pduMeanKVALWL=pduMeanKVALWL, accUserExpires=accUserExpires, opChan=opChan, ipTHAEntry=ipTHAEntry, kpRtnToStndbyTimeOut=kpRtnToStndbyTimeOut, pduOutCmnRS=pduOutCmnRS, invKeypadCount=invKeypadCount, kpName=kpName, kpSelect=kpSelect, ipContact=ipContact, ipTHAUWL=ipTHAUWL, pduRMSVoltsLWLTrapPer=pduRMSVoltsLWLTrapPer, pduMeanKVAUCLTrapPer=pduMeanKVAUCLTrapPer, pduOutCycleAll=pduOutCycleAll, pduRMSAmpsLWL=pduRMSAmpsLWL, OutputControlState=OutputControlState, ipTHALCLTrapEn=ipTHALCLTrapEn, opInsert=opInsert, invPduCount=invPduCount, ipTHAThreshChan=ipTHAThreshChan, opOnDelTime=opOnDelTime, ipTHALWL=ipTHALWL, kpEntryCodeValid=kpEntryCodeValid, RelayState=RelayState, pduOutEn=pduOutEn, pduOutCycleAllAbort=pduOutCycleAllAbort, pduMeanKWattsLCLTrapPer=pduMeanKWattsLCLTrapPer, pduEnergyUCLTrapEn=pduEnergyUCLTrapEn, acuNumber=acuNumber, pduMeanKWattsLCL=pduMeanKWattsLCL, pduRMSVoltsLCLTrapEn=pduRMSVoltsLCLTrapEn, invDefaultIPAddrType=invDefaultIPAddrType, pduRMSAmpsLWLTrapEn=pduRMSAmpsLWLTrapEn, pduOutName=pduOutName, alarmInformation=alarmInformation, ipTempScaleFlag=ipTempScaleFlag, InputContactState=InputContactState, invProdFormatVer=invProdFormatVer, pduSelect=pduSelect, pduOutTable=pduOutTable, pduTrapEnTable=pduTrapEnTable, ipTHATrapPerRS=ipTHATrapPerRS, ipContChan=ipContChan, ipTHAUCLTrapEn=ipTHAUCLTrapEn, acuRemoteDoorOpen=acuRemoteDoorOpen, outputs=outputs, ipTHAName=ipTHAName, pduOutAll=pduOutAll, pduMonTable=pduMonTable, ipTHATrapPerEntry=ipTHATrapPerEntry, ipContCurrState=ipContCurrState, pduTrapPduNumber=pduTrapPduNumber, opEnable=opEnable, pduPwrFactorLWLTrapEn=pduPwrFactorLWLTrapEn, pdusEnable=pdusEnable, ipTHATrapUCLPer=ipTHATrapUCLPer, ipTHAScaling=ipTHAScaling, pduNumOfOutlets=pduNumOfOutlets, pduMeanKWattsUWL=pduMeanKWattsUWL, accUserEntry=accUserEntry, pduPwrFactorLWL=pduPwrFactorLWL, v1=v1, invUnitName=invUnitName, pduRMSAmpsLCLTrapEn=pduRMSAmpsLCLTrapEn, pduTrapThreshEntry=pduTrapThreshEntry, invProdTestTime=invProdTestTime, pduPwrFactorLCL=pduPwrFactorLCL, accUserCode=accUserCode, pduOutCycleAbortTime=pduOutCycleAbortTime, trapInfo=trapInfo, accUserNumber=accUserNumber, accUserPrivileges=accUserPrivileges, pduMeanKWattsUWLTrapPer=pduMeanKWattsUWLTrapPer, pduNumber=pduNumber, hawki2MIB=hawki2MIB, pduPwrFactorUCLTrapPer=pduPwrFactorUCLTrapPer, pduMeanKWattsUCLTrapPer=pduMeanKWattsUCLTrapPer, invBatchNum=invBatchNum, opLocn=opLocn, pduOutCycleDelay=pduOutCycleDelay, accUserCtl=accUserCtl, pduMonEntry=pduMonEntry, pduOutCycle=pduOutCycle, ipContRS=ipContRS, trapCode=trapCode, kpRS=kpRS, pduMeanKVAValue=pduMeanKVAValue, pduMeanKWattsValue=pduMeanKWattsValue, pduRMSVoltsLWL=pduRMSVoltsLWL, ipTHAValue=ipTHAValue, pduOutGlobalCycleDelay=pduOutGlobalCycleDelay, pduOutEntry=pduOutEntry, invOutputCount=invOutputCount, ipContTable=ipContTable, pduMeanKVALCLTrapEn=pduMeanKVALCLTrapEn, ipTHAChan=ipTHAChan, pduMonRS=pduMonRS, ipTHAThreshTable=ipTHAThreshTable, kpCtlTable=kpCtlTable, pduTrapPerRS=pduTrapPerRS, opEntry=opEntry, pduInsert=pduInsert, pduOutRebootPeriod=pduOutRebootPeriod, ipTHATrapLWLPer=ipTHATrapLWLPer, acus=acus, pduRMSVoltsUCLTrapPer=pduRMSVoltsUCLTrapPer, pduOutCmnTable=pduOutCmnTable, ipTHAHysteresis=ipTHAHysteresis, EnableState=EnableState, ipTHAThreshRS=ipTHAThreshRS, accUserRS=accUserRS, pduOutGlobalCycleAbortTime=pduOutGlobalCycleAbortTime, pduTrapThreshPduNumber=pduTrapThreshPduNumber, access=access, ipTHAAutoDetect=ipTHAAutoDetect, pduName=pduName, pduTrapPerTable=pduTrapPerTable, invManufCode=invManufCode, pduCommsFail=pduCommsFail, invMacAddr=invMacAddr, pduMeanKVAUWL=pduMeanKVAUWL, ipTHA=ipTHA, pduPwrFactorValue=pduPwrFactorValue, pduRMSVoltsLWLTrapEn=pduRMSVoltsLWLTrapEn, pduOutNumber=pduOutNumber, pduMeanKVALCLTrapPer=pduMeanKVALCLTrapPer, ipTHATrapEnRS=ipTHATrapEnRS, opBooleanEqn=opBooleanEqn, pduTrapThreshRS=pduTrapThreshRS, ipTHATrapPerChan=ipTHATrapPerChan, trapDescription=trapDescription, pduOutRS=pduOutRS, acuInUseTrapEn=acuInUseTrapEn, accUserInstance=accUserInstance, ContactState=ContactState, pduRMSVoltsLCL=pduRMSVoltsLCL, kpCtlEntry=kpCtlEntry, objects=objects, pduRMSAmpsValue=pduRMSAmpsValue, opName=opName, pduEnergyUWL=pduEnergyUWL, pduMeanKVAUWLTrapPer=pduMeanKVAUWLTrapPer, pduMeanKWattsUCLTrapEn=pduMeanKWattsUCLTrapEn, pduRMSAmpsLCLTrapPer=pduRMSAmpsLCLTrapPer, acuName=acuName)
mibBuilder.exportSymbols("HAWK-I2-MIB", sinetica=sinetica, ipEnable=ipEnable, ipTHALCL=ipTHALCL, invInputCount=invInputCount, kpEnable=kpEnable, pduTrapEnPduNumber=pduTrapEnPduNumber, kpManufacturer=kpManufacturer, pdus=pdus, ipTHALocn=ipTHALocn, pduPwrFactorUWLTrapEn=pduPwrFactorUWLTrapEn, ipTHATrapLCLPer=ipTHATrapLCLPer, acuManufacturer=acuManufacturer, ipContNormState=ipContNormState, ipTHARS=ipTHARS, acuCtlTable=acuCtlTable, pduOutGlobalRebootTime=pduOutGlobalRebootTime, pduRS=pduRS, acuCtlEntry=acuCtlEntry, ipTHALWLTrapEn=ipTHALWLTrapEn, ipContName=ipContName, pduTrapThreshTable=pduTrapThreshTable, invAcuCount=invAcuCount, kpDoorOpenTimeOut=kpDoorOpenTimeOut, invHwRevision=invHwRevision, ipContAutoDetect=ipContAutoDetect, invSerialNum=invSerialNum, ipTHATrapEnChan=ipTHATrapEnChan, pduEntry=pduEntry, pduEnergyUWLTrapPer=pduEnergyUWLTrapPer, opControlState=opControlState, pduEnergyUCL=pduEnergyUCL, pduRMSVoltsUWLTrapPer=pduRMSVoltsUWLTrapPer, opTrapEn=opTrapEn, opTrapPeriod=opTrapPeriod, kpNumber=kpNumber, pduMeanKVALWLTrapPer=pduMeanKVALWLTrapPer, ipInsert=ipInsert, pduMeanKWattsLWL=pduMeanKWattsLWL, pduRMSVoltsUCLTrapEn=pduRMSVoltsUCLTrapEn)
