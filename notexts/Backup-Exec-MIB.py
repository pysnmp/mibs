#
# PySNMP MIB module Backup-Exec-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/veritas/Backup-Exec-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 09:36:13 2024
# On host fv-az1146-179 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, iso, Integer32, IpAddress, Unsigned32, NotificationType, ModuleIdentity, Gauge32, Bits, MibIdentifier, enterprises, TimeTicks, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "iso", "Integer32", "IpAddress", "Unsigned32", "NotificationType", "ModuleIdentity", "Gauge32", "Bits", "MibIdentifier", "enterprises", "TimeTicks", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
veritassoftware = MibIdentifier((1, 3, 6, 1, 4, 1, 1302))
backupExecNetWare = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 1))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3))
backupexec = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1))
devices = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 2))
trapvars = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 3))
beconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1))
bejobs = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2))
beinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3))
bemodules = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4))
nonspecifictraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5))
loader = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 2, 4))
tape = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 2, 5))
labs = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 1))
disasterrecovery = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 2))
openfileoption = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 3))
pvldevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1))
pvlmedia = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2))
catalog = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 3))
tapealert = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 4))
databasemaint = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 5))
softwareupdate = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 6))
install = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 7))
serverName = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverName.setStatus('mandatory')
appInfo = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appInfo.setStatus('mandatory')
jobName = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobName.setStatus('mandatory')
operatorName = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatorName.setStatus('mandatory')
messageText = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageText.setStatus('mandatory')
additionalText = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: additionalText.setStatus('mandatory')
backupExecNTGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1, 9))
beNTLoaded = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1, 9) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "appInfo"))
beNTUnloaded = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1, 9) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "appInfo"))
beNTSystemError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1, 9) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "additionalText"))
beNTGeneralInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 1, 9) + (0,4)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "additionalText"))
backupExecNTJobs = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8))
jobFailure = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
jobAborted = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "operatorName"))
jobSuccess = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
jobSuccessExcept = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,4)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
jobStarted = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,5)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
jobNoData = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,6)).setObjects(("Backup-Exec-MIB", "messageText"))
jobWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 2, 8) + (0,7)).setObjects(("Backup-Exec-MIB", "messageText"))
beName = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: beName.setStatus('mandatory')
revMajor = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: revMajor.setStatus('mandatory')
revMinor = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: revMinor.setStatus('mandatory')
beBuild = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: beBuild.setStatus('mandatory')
beSerial = MibScalar((1, 3, 6, 1, 4, 1, 1302, 3, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: beSerial.setStatus('mandatory')
backupExecOptLABS = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 1, 1))
multipleTapesNeeded = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 1, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
retriedAutomatically = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 1, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
backupExecOptIDR = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 2, 1))
copyDRFile = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 2, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
fullBackupComplete = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 2, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
backupExecOptOFO = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 3, 1))
ofoFailed = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 3, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
ofoCouldNotInit = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 4, 3, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
backupExecPVLDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1, 1))
pvlDeviceError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlDeviceWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlDeviceInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1, 1) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlDeviceAttn = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 1, 1) + (0,4)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecPVLMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2, 1))
pvlMediaError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlMediaWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlMediaInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2, 1) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"))
pvlMediaAttn = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 2, 1) + (0,4)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecCatalog = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 3, 1))
catalogFailed = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 3, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecTapeAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 4, 1))
tapeAlertError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 4, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
tapeAlertWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 4, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
tapeAlertInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 4, 1) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecDatabaseMaintenance = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 5, 1))
databaseMaintenanceError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 5, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
databaseMaintenanceInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 5, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecSoftwareUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 6, 1))
softwareUpdateError = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 6, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
softwareUpdateWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 6, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
softwareUpdateInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 6, 1) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecInstall = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 7, 1))
installWarning = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 7, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageText"))
installInfo = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 1, 5, 7, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageText"))
backupExecNTLoader = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 2, 4, 3))
loaderNeedsAttention = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 2, 4, 3) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
backupExecNTTapeDrive = MibIdentifier((1, 3, 6, 1, 4, 1, 1302, 3, 2, 5, 3))
driveNeedsAttention = NotificationType((1, 3, 6, 1, 4, 1, 1302, 3, 2, 5, 3) + (0,3)).setObjects(("Backup-Exec-MIB", "messageText"), ("Backup-Exec-MIB", "serverName"), ("Backup-Exec-MIB", "jobName"), ("Backup-Exec-MIB", "additionalText"))
messageobject = MibScalar((1, 3, 6, 1, 4, 1, 1302, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageobject.setStatus('mandatory')
blockingerrormsg = NotificationType((1, 3, 6, 1, 4, 1, 1302, 1) + (0,1)).setObjects(("Backup-Exec-MIB", "messageobject"))
errormessage = NotificationType((1, 3, 6, 1, 4, 1, 1302, 1) + (0,2)).setObjects(("Backup-Exec-MIB", "messageobject"))
blockingmessage = NotificationType((1, 3, 6, 1, 4, 1, 1302, 1) + (0,3)).setObjects(("Backup-Exec-MIB", "messageobject"))
warningmessage = NotificationType((1, 3, 6, 1, 4, 1, 1302, 1) + (0,4)).setObjects(("Backup-Exec-MIB", "messageobject"))
informationmessage = NotificationType((1, 3, 6, 1, 4, 1, 1302, 1) + (0,5)).setObjects(("Backup-Exec-MIB", "messageobject"))
mibBuilder.exportSymbols("Backup-Exec-MIB", backupExecSoftwareUpdate=backupExecSoftwareUpdate, softwareUpdateWarning=softwareUpdateWarning, revMajor=revMajor, installWarning=installWarning, beconfig=beconfig, backupExecOptIDR=backupExecOptIDR, bejobs=bejobs, beSerial=beSerial, softwareUpdateError=softwareUpdateError, nonspecifictraps=nonspecifictraps, products=products, jobName=jobName, devices=devices, tapealert=tapealert, backupExecNTJobs=backupExecNTJobs, jobAborted=jobAborted, ofoFailed=ofoFailed, backupExecPVLDevice=backupExecPVLDevice, labs=labs, catalog=catalog, serverName=serverName, jobWarning=jobWarning, pvlDeviceError=pvlDeviceError, beNTUnloaded=beNTUnloaded, pvlMediaError=pvlMediaError, databaseMaintenanceInfo=databaseMaintenanceInfo, pvldevice=pvldevice, backupExecNTLoader=backupExecNTLoader, beinfo=beinfo, beNTGeneralInfo=beNTGeneralInfo, pvlMediaWarning=pvlMediaWarning, tapeAlertInfo=tapeAlertInfo, databaseMaintenanceError=databaseMaintenanceError, revMinor=revMinor, openfileoption=openfileoption, pvlMediaAttn=pvlMediaAttn, messageText=messageText, beNTSystemError=beNTSystemError, catalogFailed=catalogFailed, messageobject=messageobject, informationmessage=informationmessage, backupExecDatabaseMaintenance=backupExecDatabaseMaintenance, pvlmedia=pvlmedia, backupExecNetWare=backupExecNetWare, tape=tape, beName=beName, softwareUpdateInfo=softwareUpdateInfo, jobStarted=jobStarted, jobSuccess=jobSuccess, backupExecInstall=backupExecInstall, veritassoftware=veritassoftware, trapvars=trapvars, bemodules=bemodules, appInfo=appInfo, multipleTapesNeeded=multipleTapesNeeded, operatorName=operatorName, retriedAutomatically=retriedAutomatically, backupExecTapeAlert=backupExecTapeAlert, backupExecPVLMedia=backupExecPVLMedia, jobSuccessExcept=jobSuccessExcept, installInfo=installInfo, blockingmessage=blockingmessage, beNTLoaded=beNTLoaded, backupExecNTGeneral=backupExecNTGeneral, pvlMediaInfo=pvlMediaInfo, backupExecCatalog=backupExecCatalog, backupExecOptLABS=backupExecOptLABS, tapeAlertWarning=tapeAlertWarning, loaderNeedsAttention=loaderNeedsAttention, tapeAlertError=tapeAlertError, softwareupdate=softwareupdate, backupExecOptOFO=backupExecOptOFO, disasterrecovery=disasterrecovery, warningmessage=warningmessage, jobFailure=jobFailure, copyDRFile=copyDRFile, loader=loader, blockingerrormsg=blockingerrormsg, ofoCouldNotInit=ofoCouldNotInit, pvlDeviceInfo=pvlDeviceInfo, pvlDeviceAttn=pvlDeviceAttn, fullBackupComplete=fullBackupComplete, backupexec=backupexec, pvlDeviceWarning=pvlDeviceWarning, driveNeedsAttention=driveNeedsAttention, jobNoData=jobNoData, backupExecNTTapeDrive=backupExecNTTapeDrive, databasemaint=databasemaint, beBuild=beBuild, additionalText=additionalText, install=install, errormessage=errormessage)
