#
# PySNMP MIB module COLUBRIS-DEVICE-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hpmsm/COLUBRIS-DEVICE-IF-MIB.my
# Produced by pysmi-1.1.12 at Tue Dec  3 10:07:11 2024
# On host fv-az575-513 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
coDevDisIndex, = mibBuilder.importSymbols("COLUBRIS-DEVICE-MIB", "coDevDisIndex")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, MibIdentifier, TimeTicks, Counter64, iso, Bits, Gauge32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "MibIdentifier", "TimeTicks", "Counter64", "iso", "Bits", "Gauge32", "Integer32", "Counter32")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
colubrisDeviceIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 24))
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setLastUpdated('200607050000Z')
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setOrganization('Colubris Networks, Inc.')
colubrisDeviceIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1))
coDeviceIfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1))
coDeviceIfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2))
coDeviceIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1), )
if mibBuilder.loadTexts: coDeviceIfStatusTable.setStatus('current')
coDeviceIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1), ).setIndexNames((0, "COLUBRIS-DEVICE-MIB", "coDevDisIndex"), (0, "COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIfIndex"))
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setStatus('current')
coDevIfStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevIfStaIfIndex.setStatus('current')
coDevIfStaFriendlyInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setStatus('current')
coDevIfStaType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("l2vlan", 3), ("bridge", 4), ("ieee80211", 5), ("ieee80211Wds", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaType.setStatus('current')
coDevIfStaVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaVLAN.setStatus('current')
coDevIfStaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaIpAddress.setStatus('current')
coDevIfStaNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setStatus('current')
coDevIfStaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaMACAddress.setStatus('current')
coDevIfStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaState.setStatus('current')
coDeviceIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceIfStatsTable.setStatus('current')
coDeviceIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1), )
coDeviceIfStatusEntry.registerAugmentions(("COLUBRIS-DEVICE-IF-MIB", "coDeviceIfStatsEntry"))
coDeviceIfStatsEntry.setIndexNames(*coDeviceIfStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setStatus('current')
coDevIfStsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxBytes.setStatus('current')
coDevIfStsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxPackets.setStatus('current')
coDevIfStsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxErrors.setStatus('current')
coDevIfStsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxBytes.setStatus('current')
coDevIfStsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxPackets.setStatus('current')
coDevIfStsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxErrors.setStatus('current')
colubrisDeviceIfMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2))
colubrisDeviceIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2, 0))
colubrisDeviceIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3))
colubrisDeviceIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1))
colubrisDeviceIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2))
colubrisDeviceIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatusMIBGroup"), ("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfMIBCompliance = colubrisDeviceIfMIBCompliance.setStatus('current')
colubrisDeviceIfStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaFriendlyInterfaceName"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaType"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaVLAN"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIpAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaNetworkMask"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaMACAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatusMIBGroup = colubrisDeviceIfStatusMIBGroup.setStatus('current')
colubrisDeviceIfStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 2)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxErrors"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatsMIBGroup = colubrisDeviceIfStatsMIBGroup.setStatus('current')
mibBuilder.exportSymbols("COLUBRIS-DEVICE-IF-MIB", coDevIfStsTxPackets=coDevIfStsTxPackets, coDeviceIfStatsGroup=coDeviceIfStatsGroup, coDevIfStsTxErrors=coDevIfStsTxErrors, coDeviceIfStatsTable=coDeviceIfStatsTable, colubrisDeviceIfMIB=colubrisDeviceIfMIB, colubrisDeviceIfMIBCompliance=colubrisDeviceIfMIBCompliance, coDevIfStaMACAddress=coDevIfStaMACAddress, colubrisDeviceIfStatusMIBGroup=colubrisDeviceIfStatusMIBGroup, coDeviceIfStatusEntry=coDeviceIfStatusEntry, colubrisDeviceIfStatsMIBGroup=colubrisDeviceIfStatsMIBGroup, colubrisDeviceIfMIBConformance=colubrisDeviceIfMIBConformance, coDevIfStaType=coDevIfStaType, colubrisDeviceIfMIBGroups=colubrisDeviceIfMIBGroups, coDeviceIfStatusGroup=coDeviceIfStatusGroup, colubrisDeviceIfMIBObjects=colubrisDeviceIfMIBObjects, coDevIfStaState=coDevIfStaState, coDevIfStaFriendlyInterfaceName=coDevIfStaFriendlyInterfaceName, coDevIfStaIpAddress=coDevIfStaIpAddress, coDevIfStaVLAN=coDevIfStaVLAN, coDevIfStaNetworkMask=coDevIfStaNetworkMask, coDeviceIfStatsEntry=coDeviceIfStatsEntry, coDevIfStsRxBytes=coDevIfStsRxBytes, coDevIfStsTxBytes=coDevIfStsTxBytes, coDeviceIfStatusTable=coDeviceIfStatusTable, colubrisDeviceIfMIBNotifications=colubrisDeviceIfMIBNotifications, colubrisDeviceIfMIBNotificationPrefix=colubrisDeviceIfMIBNotificationPrefix, coDevIfStaIfIndex=coDevIfStaIfIndex, coDevIfStsRxPackets=coDevIfStsRxPackets, coDevIfStsRxErrors=coDevIfStsRxErrors, PYSNMP_MODULE_ID=colubrisDeviceIfMIB, colubrisDeviceIfMIBCompliances=colubrisDeviceIfMIBCompliances)
