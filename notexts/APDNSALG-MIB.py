#
# PySNMP MIB module APDNSALG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APDNSALG-MIB
# Produced by pysmi-1.1.12 at Wed Jun 26 13:37:46 2024
# On host fv-az1984-994 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ApTransportType, ApHardwareModuleFamily, ApRedundancyState = mibBuilder.importSymbols("ACMEPACKET-TC", "ApTransportType", "ApHardwareModuleFamily", "ApRedundancyState")
SysMgmtPercentage, = mibBuilder.importSymbols("APSYSMGMT-MIB", "SysMgmtPercentage")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "InterfaceIndexOrZero")
InetAddressPrefixLength, InetZoneIndex, InetAddress, InetAddressType, InetVersion = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetZoneIndex", "InetAddress", "InetAddressType", "InetVersion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, ModuleIdentity, NotificationType, MibIdentifier, Counter64, ObjectIdentity, Unsigned32, Gauge32, IpAddress, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "NotificationType", "MibIdentifier", "Counter64", "ObjectIdentity", "Unsigned32", "Gauge32", "IpAddress", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
apDNSALGModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 14))
apDNSALGModule.setRevisions(('2014-06-26 00:00',))
if mibBuilder.loadTexts: apDNSALGModule.setLastUpdated('201406260000Z')
if mibBuilder.loadTexts: apDNSALGModule.setOrganization('Oracle Communications')
apDNSALGMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1))
apDNSALGMIBGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 1))
apDNSALGMIBTabularObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2))
apDNSALGNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2))
apDNSALGNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 1))
apDNSALGNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2))
apDNSALGNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0))
apDNSALGConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3))
apDNSALGObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 1))
apDNSALGNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 2))
apDNSALGServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1), )
if mibBuilder.loadTexts: apDNSALGServerStatusTable.setStatus('current')
apDNSALGServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1), ).setIndexNames((0, "APDNSALG-MIB", "apDNSALGConfigIndex"), (0, "APDNSALG-MIB", "apDNSALGServerIndex"), (0, "APDNSALG-MIB", "apDNSALGServerIpAddress"))
if mibBuilder.loadTexts: apDNSALGServerStatusEntry.setStatus('current')
apDNSALGConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDNSALGConfigIndex.setStatus('current')
apDNSALGServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDNSALGServerIndex.setStatus('current')
apDNSALGConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDNSALGConfigName.setStatus('current')
apDNSALGServerRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDNSALGServerRealm.setStatus('current')
apDNSALGDomainSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDNSALGDomainSuffix.setStatus('current')
apDNSALGServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDNSALGServerIpAddress.setStatus('current')
apDNSALGServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inservice", 0), ("lowerpriority", 1), ("oosunreachable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDNSALGServerStatus.setStatus('current')
apDNSALGStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2), )
if mibBuilder.loadTexts: apDNSALGStatsTable.setStatus('current')
apDnsALGStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1), ).setIndexNames((0, "APDNSALG-MIB", "apDnsAlgClientRealmIndex"))
if mibBuilder.loadTexts: apDnsALGStatsEntry.setStatus('current')
apDnsAlgClientRealmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDnsAlgClientRealmIndex.setStatus('current')
apDnsAlgClientRealmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgClientRealmName.setStatus('current')
apDnsAlgCurrentQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentQueries.setStatus('current')
apDnsAlgTotalQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalQueries.setStatus('current')
apDnsAlgCurrentSucess = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentSucess.setStatus('current')
apDnsAlgTotalSucess = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalSucess.setStatus('current')
apDnsAlgCurrentNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentNotFound.setStatus('current')
apDnsAlgTotalNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalNotFound.setStatus('current')
apDnsAlgCurrentTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentTimeOut.setStatus('current')
apDnsAlgTotalTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalTimeOut.setStatus('current')
apDnsAlgCurrentBadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentBadStatus.setStatus('current')
apDnsAlgTotalBadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalBadStatus.setStatus('current')
apDnsAlgCurrentOtherFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgCurrentOtherFailures.setStatus('current')
apDnsAlgTotalOtherFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgTotalOtherFailures.setStatus('current')
apDnsAlgAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgAvgLatency.setStatus('current')
apDnsAlgMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgMaxLatency.setStatus('current')
apDnsAlgMaxBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgMaxBurstRate.setStatus('current')
apDnsAlgConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 3), )
if mibBuilder.loadTexts: apDnsAlgConfigTable.setStatus('current')
apDnsAlgConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 3, 1), ).setIndexNames((0, "APDNSALG-MIB", "apDnsAlgConfigIndex"))
if mibBuilder.loadTexts: apDnsAlgConfigEntry.setStatus('current')
apDnsAlgConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apDnsAlgConfigIndex.setStatus('current')
apDnsAlgConfigClientRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgConfigClientRealm.setStatus('current')
apDnsAlgServerTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 4), )
if mibBuilder.loadTexts: apDnsAlgServerTable.setStatus('current')
apDnsAlgServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 4, 1), ).setIndexNames((0, "APDNSALG-MIB", "apDnsAlgConfigIndex"), (0, "APDNSALG-MIB", "apDnsAlgServerIndex"))
if mibBuilder.loadTexts: apDnsAlgServerEntry.setStatus('current')
apDnsAlgServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apDnsAlgServerIndex.setStatus('current')
apDnsAlgServerRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRealm.setStatus('current')
apDnsAlgServerRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5), )
if mibBuilder.loadTexts: apDnsAlgServerRateStatsTable.setStatus('current')
apDnsAlgServerRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1), ).setIndexNames((0, "APDNSALG-MIB", "apDnsAlgConfigIndex"), (0, "APDNSALG-MIB", "apDnsAlgServerIndex"), (0, "APDNSALG-MIB", "apDnsAlgServerInetAddressType"), (0, "APDNSALG-MIB", "apDnsAlgServerInetAddress"))
if mibBuilder.loadTexts: apDnsAlgServerRateStatsEntry.setStatus('current')
apDnsAlgServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerInetAddressType.setStatus('current')
apDnsAlgServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerInetAddress.setStatus('current')
apDnsAlgServerRateMsgRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 5), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateMsgRcvd.setStatus('current')
apDnsAlgServerRateMsgSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 6), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateMsgSent.setStatus('current')
apDnsAlgServerRateReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 7), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateReqRcvd.setStatus('current')
apDnsAlgServerRateReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 8), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateReqSent.setStatus('current')
apDnsAlgServerRateRspRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 9), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateRspRcvd.setStatus('current')
apDnsAlgServerRateRspSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 14, 1, 2, 5, 1, 10), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnsAlgServerRateRspSent.setStatus('current')
apDNSALGConstraintsStatus = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inservice", 0), ("constraintsExceeded", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDNSALGConstraintsStatus.setStatus('current')
apDnsAlgStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 1)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGServerRealm"), ("APDNSALG-MIB", "apDNSALGServerIpAddress"), ("APDNSALG-MIB", "apDNSALGServerStatus"))
if mibBuilder.loadTexts: apDnsAlgStatusChangeTrap.setStatus('current')
apDnsAlgStatusChangeClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 2)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGServerRealm"), ("APDNSALG-MIB", "apDNSALGServerIpAddress"), ("APDNSALG-MIB", "apDNSALGServerStatus"))
if mibBuilder.loadTexts: apDnsAlgStatusChangeClearTrap.setStatus('current')
apDnsAlgConstraintStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 3)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGConstraintsStatus"))
if mibBuilder.loadTexts: apDnsAlgConstraintStateChangeTrap.setStatus('current')
apDnsAlgConstraintStateChangeClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 4)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGConstraintsStatus"))
if mibBuilder.loadTexts: apDnsAlgConstraintStateChangeClearTrap.setStatus('current')
apDnsAlgSvrConstraintStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 5)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGServerRealm"), ("APDNSALG-MIB", "apDNSALGServerIpAddress"), ("APDNSALG-MIB", "apDNSALGConstraintsStatus"))
if mibBuilder.loadTexts: apDnsAlgSvrConstraintStateChangeTrap.setStatus('current')
apDnsAlgSvrConstraintStateChangeClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 14, 2, 2, 0, 6)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGServerRealm"), ("APDNSALG-MIB", "apDNSALGServerIpAddress"), ("APDNSALG-MIB", "apDNSALGConstraintsStatus"))
if mibBuilder.loadTexts: apDnsAlgSvrConstraintStateChangeClearTrap.setStatus('current')
apDnsAlgServerStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 1, 1)).setObjects(("APDNSALG-MIB", "apDNSALGConfigName"), ("APDNSALG-MIB", "apDNSALGServerRealm"), ("APDNSALG-MIB", "apDNSALGDomainSuffix"), ("APDNSALG-MIB", "apDNSALGServerIpAddress"), ("APDNSALG-MIB", "apDNSALGServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDnsAlgServerStatusGroup = apDnsAlgServerStatusGroup.setStatus('current')
apDnsAlgStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 1, 2)).setObjects(("APDNSALG-MIB", "apDnsAlgClientRealmIndex"), ("APDNSALG-MIB", "apDnsAlgClientRealmName"), ("APDNSALG-MIB", "apDnsAlgCurrentQueries"), ("APDNSALG-MIB", "apDnsAlgTotalQueries"), ("APDNSALG-MIB", "apDnsAlgCurrentSucess"), ("APDNSALG-MIB", "apDnsAlgTotalSucess"), ("APDNSALG-MIB", "apDnsAlgCurrentNotFound"), ("APDNSALG-MIB", "apDnsAlgTotalNotFound"), ("APDNSALG-MIB", "apDnsAlgCurrentTimeOut"), ("APDNSALG-MIB", "apDnsAlgTotalTimeOut"), ("APDNSALG-MIB", "apDnsAlgCurrentBadStatus"), ("APDNSALG-MIB", "apDnsAlgTotalBadStatus"), ("APDNSALG-MIB", "apDnsAlgCurrentOtherFailures"), ("APDNSALG-MIB", "apDnsAlgTotalOtherFailures"), ("APDNSALG-MIB", "apDnsAlgAvgLatency"), ("APDNSALG-MIB", "apDnsAlgMaxLatency"), ("APDNSALG-MIB", "apDnsAlgMaxBurstRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDnsAlgStatsGroup = apDnsAlgStatsGroup.setStatus('current')
apDnsAlgServerRateStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 1, 3)).setObjects(("APDNSALG-MIB", "apDnsAlgServerInetAddressType"), ("APDNSALG-MIB", "apDnsAlgServerInetAddress"), ("APDNSALG-MIB", "apDnsAlgConfigClientRealm"), ("APDNSALG-MIB", "apDnsAlgServerRealm"), ("APDNSALG-MIB", "apDnsAlgServerRateMsgRcvd"), ("APDNSALG-MIB", "apDnsAlgServerRateMsgSent"), ("APDNSALG-MIB", "apDnsAlgServerRateReqRcvd"), ("APDNSALG-MIB", "apDnsAlgServerRateReqSent"), ("APDNSALG-MIB", "apDnsAlgServerRateRspRcvd"), ("APDNSALG-MIB", "apDnsAlgServerRateRspSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDnsAlgServerRateStatsGroup = apDnsAlgServerRateStatsGroup.setStatus('current')
apDNSALGNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 14, 3, 2, 1)).setObjects(("APDNSALG-MIB", "apDnsAlgStatusChangeTrap"), ("APDNSALG-MIB", "apDnsAlgStatusChangeClearTrap"), ("APDNSALG-MIB", "apDnsAlgConstraintStateChangeTrap"), ("APDNSALG-MIB", "apDnsAlgConstraintStateChangeClearTrap"), ("APDNSALG-MIB", "apDnsAlgSvrConstraintStateChangeTrap"), ("APDNSALG-MIB", "apDnsAlgSvrConstraintStateChangeClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDNSALGNotificationsGroup = apDNSALGNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("APDNSALG-MIB", apDnsAlgCurrentOtherFailures=apDnsAlgCurrentOtherFailures, apDnsAlgTotalOtherFailures=apDnsAlgTotalOtherFailures, apDnsAlgMaxBurstRate=apDnsAlgMaxBurstRate, apDnsAlgCurrentNotFound=apDnsAlgCurrentNotFound, apDnsAlgCurrentQueries=apDnsAlgCurrentQueries, apDNSALGConformance=apDNSALGConformance, apDnsAlgTotalTimeOut=apDnsAlgTotalTimeOut, apDnsAlgConfigIndex=apDnsAlgConfigIndex, apDNSALGConstraintsStatus=apDNSALGConstraintsStatus, apDNSALGNotificationsGroup=apDNSALGNotificationsGroup, apDnsAlgServerStatusGroup=apDnsAlgServerStatusGroup, apDnsAlgAvgLatency=apDnsAlgAvgLatency, apDnsAlgConfigEntry=apDnsAlgConfigEntry, apDnsAlgMaxLatency=apDnsAlgMaxLatency, apDNSALGDomainSuffix=apDNSALGDomainSuffix, apDnsAlgTotalBadStatus=apDnsAlgTotalBadStatus, apDNSALGNotifications=apDNSALGNotifications, apDnsAlgServerRateStatsGroup=apDnsAlgServerRateStatsGroup, apDnsAlgServerRateMsgSent=apDnsAlgServerRateMsgSent, apDNSALGModule=apDNSALGModule, apDnsAlgServerRateReqSent=apDnsAlgServerRateReqSent, apDnsAlgServerRateRspSent=apDnsAlgServerRateRspSent, apDNSALGServerStatusTable=apDNSALGServerStatusTable, apDNSALGServerStatus=apDNSALGServerStatus, apDnsAlgConfigClientRealm=apDnsAlgConfigClientRealm, apDnsAlgServerRealm=apDnsAlgServerRealm, apDNSALGMIBObjects=apDNSALGMIBObjects, apDnsAlgSvrConstraintStateChangeClearTrap=apDnsAlgSvrConstraintStateChangeClearTrap, apDnsAlgServerRateReqRcvd=apDnsAlgServerRateReqRcvd, apDNSALGStatsTable=apDNSALGStatsTable, apDnsAlgServerRateMsgRcvd=apDnsAlgServerRateMsgRcvd, apDnsAlgStatusChangeClearTrap=apDnsAlgStatusChangeClearTrap, apDnsAlgSvrConstraintStateChangeTrap=apDnsAlgSvrConstraintStateChangeTrap, apDNSALGConfigIndex=apDNSALGConfigIndex, apDnsAlgServerRateStatsEntry=apDnsAlgServerRateStatsEntry, apDnsAlgServerTable=apDnsAlgServerTable, apDNSALGObjectGroups=apDNSALGObjectGroups, apDNSALGConfigName=apDNSALGConfigName, apDnsAlgClientRealmName=apDnsAlgClientRealmName, apDnsAlgConfigTable=apDnsAlgConfigTable, apDNSALGNotifObjects=apDNSALGNotifObjects, apDnsAlgCurrentBadStatus=apDnsAlgCurrentBadStatus, apDnsAlgServerInetAddressType=apDnsAlgServerInetAddressType, apDnsAlgServerIndex=apDnsAlgServerIndex, apDnsALGStatsEntry=apDnsALGStatsEntry, apDnsAlgStatusChangeTrap=apDnsAlgStatusChangeTrap, apDnsAlgTotalNotFound=apDnsAlgTotalNotFound, PYSNMP_MODULE_ID=apDNSALGModule, apDNSALGMIBGeneralObjects=apDNSALGMIBGeneralObjects, apDNSALGNotificationGroups=apDNSALGNotificationGroups, apDnsAlgServerRateRspRcvd=apDnsAlgServerRateRspRcvd, apDnsAlgConstraintStateChangeClearTrap=apDnsAlgConstraintStateChangeClearTrap, apDNSALGServerIpAddress=apDNSALGServerIpAddress, apDNSALGServerIndex=apDNSALGServerIndex, apDnsAlgStatsGroup=apDnsAlgStatsGroup, apDnsAlgServerEntry=apDnsAlgServerEntry, apDNSALGMIBTabularObjects=apDNSALGMIBTabularObjects, apDnsAlgCurrentSucess=apDnsAlgCurrentSucess, apDNSALGServerRealm=apDNSALGServerRealm, apDNSALGServerStatusEntry=apDNSALGServerStatusEntry, apDNSALGNotificationObjects=apDNSALGNotificationObjects, apDnsAlgTotalQueries=apDnsAlgTotalQueries, apDnsAlgClientRealmIndex=apDnsAlgClientRealmIndex, apDnsAlgTotalSucess=apDnsAlgTotalSucess, apDnsAlgCurrentTimeOut=apDnsAlgCurrentTimeOut, apDnsAlgServerInetAddress=apDnsAlgServerInetAddress, apDnsAlgConstraintStateChangeTrap=apDnsAlgConstraintStateChangeTrap, apDnsAlgServerRateStatsTable=apDnsAlgServerRateStatsTable, apDNSALGNotifPrefix=apDNSALGNotifPrefix)
