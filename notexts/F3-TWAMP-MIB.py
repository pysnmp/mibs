#
# PySNMP MIB module F3-TWAMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-TWAMP-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 11:54:27 2024
# On host fv-az1385-213 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
PerfCounter64, VlanId, IpVersion, CmPmBinAction, OperationalState, VlanPriority, SecondaryState, AdminState = mibBuilder.importSymbols("CM-COMMON-MIB", "PerfCounter64", "VlanId", "IpVersion", "CmPmBinAction", "OperationalState", "VlanPriority", "SecondaryState", "AdminState")
neIndex, = mibBuilder.importSymbols("CM-ENTITY-MIB", "neIndex")
IpMode, = mibBuilder.importSymbols("CM-IP-MIB", "IpMode")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, IpAddress, Bits, Counter64, MibIdentifier, ModuleIdentity, TimeTicks, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "IpAddress", "Bits", "Counter64", "MibIdentifier", "ModuleIdentity", "TimeTicks", "iso", "Gauge32")
TruthValue, TextualConvention, DateAndTime, RowStatus, MacAddress, DisplayString, StorageType, VariablePointer = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DateAndTime", "RowStatus", "MacAddress", "DisplayString", "StorageType", "VariablePointer")
f3TwampMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33))
f3TwampMIB.setRevisions(('2019-12-01 00:00',))
if mibBuilder.loadTexts: f3TwampMIB.setLastUpdated('201912010000Z')
if mibBuilder.loadTexts: f3TwampMIB.setOrganization('ADVA Optical Networking SE')
f3TwampConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1))
f3TwampCounterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 2))
f3TwampActionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 3))
f3TwampConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4))
f3TwampNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 5))
class TwampControlClientStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("init", 1), ("twampControlDisabled", 2), ("twampControlEnabled", 3), ("waitForConnectionAck", 4))

class TwampServerStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("init", 1), ("twampControlDisabled", 2), ("twampControlEnabled", 3))

class TwampClientConnStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("init", 1), ("waitingForServerGreeting", 2), ("waitingForServerStart", 3), ("requestSessions", 4), ("waitingForStartAck", 5), ("testInProgress", 6), ("waitingForTestCompletions", 7))

class TwampServerConnStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("init", 1), ("waitingForSessions", 2), ("testInProgress", 3), ("waitingForSessionIntransitTimeouts", 4), ("end", 5))

class TwampSessionSenderStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("init", 1), ("idle", 2), ("testInProgress", 3), ("waitingForTestCompletion", 4))

class TwampSessionReflectorStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("init", 1), ("testReady", 2), ("waitingForIntransitTimeout", 3), ("end", 4))

class TwampSessionStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("init", 1), ("testInProgress", 2), ("idle", 3))

class TwampPktSchedType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("fixed", 1), ("expPseudoRandom", 2))

class TwampTestPattern(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("allZeros", 1))

class TwampPmIntervalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("curr", 1), ("rollover", 2))

class TwampHistoryIntervalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("interval1min", 1), ("interval5min", 2), ("interval10min", 3), ("interval15min", 4), ("interval60min", 5))

class TwampDistStatsType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("twoWayPd", 1), ("oneWayS2RPd", 2), ("oneWayR2SPd", 3), ("oneWayS2RPdv", 4), ("oneWayR2SPdv", 5))

class TwampStartTimeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("immediate", 1), ("relative", 2), ("fixed", 3))

class TwampServerAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noAction", 1), ("addSessReflector", 2), ("rmvSessReflector", 3))

class TwampControlClientAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("noAction", 1), ("addSessSender", 2), ("rmvSessSender", 3), ("startSessions", 4), ("stopSessions", 5))

class TwampSessionAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("noAction", 1), ("clearSequenceNumber", 2))

class TwampSessionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("onDemand", 1), ("proactive", 2))

class TwampStopTimeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("testPacketCount", 1), ("forever", 2))

f3TwampIpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1), )
if mibBuilder.loadTexts: f3TwampIpInterfaceTable.setStatus('current')
f3TwampIpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1), ).setIndexNames((0, "F3-TWAMP-MIB", "f3TwampIpInterfaceName"))
if mibBuilder.loadTexts: f3TwampIpInterfaceEntry.setStatus('current')
f3TwampIpInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: f3TwampIpInterfaceName.setStatus('current')
f3TwampIpInterfacePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 2), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfacePort.setStatus('current')
f3TwampIpInterfaceIpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 3), IpMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpMode.setStatus('current')
f3TwampIpInterfaceIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv4Address.setStatus('current')
f3TwampIpInterfaceIpv4Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv4Mask.setStatus('current')
f3TwampIpInterfaceMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(69, 9620)).clone(1500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceMtu.setStatus('current')
f3TwampIpInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 7), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceStorageType.setStatus('current')
f3TwampIpInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceRowStatus.setStatus('current')
f3TwampIpInterfaceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 9), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv6Addr.setStatus('current')
f3TwampIpInterfaceIpv6PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv6PrefixLen.setStatus('current')
f3TwampIpInterfaceIpv6LinkLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 11), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv6LinkLocalAddr.setStatus('current')
f3TwampIpInterfaceIpv6LinkLocalAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampIpInterfaceIpv6LinkLocalAddrPrefixLen.setStatus('current')
f3TwampServerTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2), )
if mibBuilder.loadTexts: f3TwampServerTable.setStatus('current')
f3TwampServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampServerIndex"))
if mibBuilder.loadTexts: f3TwampServerEntry.setStatus('current')
f3TwampServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampServerIndex.setStatus('current')
f3TwampServerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 2), AdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampServerAdminState.setStatus('current')
f3TwampServerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampServerOperationalState.setStatus('current')
f3TwampServerSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampServerSecondaryState.setStatus('current')
f3TwampServerAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerAlias.setStatus('current')
f3TwampServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerPort.setStatus('current')
f3TwampServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 7), TwampServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampServerStatus.setStatus('current')
f3TwampServerSessionIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 8), Unsigned32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerSessionIdleTimeout.setStatus('current')
f3TwampServerSessionAgingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 9), Unsigned32().clone(900)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerSessionAgingTimeout.setStatus('current')
f3TwampServerActionObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 10), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerActionObject.setStatus('current')
f3TwampServerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 11), TwampServerAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerAction.setStatus('current')
f3TwampServerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 12), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerStorageType.setStatus('current')
f3TwampServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampServerRowStatus.setStatus('current')
f3TwampServerSessionReflectorTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 3), )
if mibBuilder.loadTexts: f3TwampServerSessionReflectorTable.setStatus('current')
f3TwampServerSessionReflectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampServerIndex"), (0, "F3-TWAMP-MIB", "f3TwampServerSessionReflectorIndex"))
if mibBuilder.loadTexts: f3TwampServerSessionReflectorEntry.setStatus('current')
f3TwampServerSessionReflectorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampServerSessionReflectorIndex.setStatus('current')
f3TwampServerSessionReflector = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 3, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampServerSessionReflector.setStatus('current')
f3TwampSessionReflectorTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4), )
if mibBuilder.loadTexts: f3TwampSessionReflectorTable.setStatus('current')
f3TwampSessionReflectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionReflectorIndex"))
if mibBuilder.loadTexts: f3TwampSessionReflectorEntry.setStatus('current')
f3TwampSessionReflectorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampSessionReflectorIndex.setStatus('current')
f3TwampSessionReflectorAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 2), AdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorAdminState.setStatus('current')
f3TwampSessionReflectorOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorOperationalState.setStatus('current')
f3TwampSessionReflectorSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorSecondaryState.setStatus('current')
f3TwampSessionReflectorAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorAlias.setStatus('current')
f3TwampSessionReflectorIpInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorIpInterface.setStatus('current')
f3TwampSessionReflectorUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorUdpPort.setStatus('current')
f3TwampSessionReflectorUseSenderSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorUseSenderSeqNum.setStatus('current')
f3TwampSessionReflectorUserCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorUserCreated.setStatus('current')
f3TwampSessionReflectorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 10), TwampSessionReflectorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorStatus.setStatus('current')
f3TwampSessionReflectorAssocServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 11), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionReflectorAssocServer.setStatus('current')
f3TwampSessionReflectorStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 12), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorStorageType.setStatus('current')
f3TwampSessionReflectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 4, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionReflectorRowStatus.setStatus('current')
f3TwampSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5), )
if mibBuilder.loadTexts: f3TwampSessionTable.setStatus('current')
f3TwampSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionReflectorIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSsIpv4Address"), (0, "F3-TWAMP-MIB", "f3TwampSessionSsUdpPort"))
if mibBuilder.loadTexts: f3TwampSessionEntry.setStatus('current')
f3TwampSessionSsIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: f3TwampSessionSsIpv4Address.setStatus('current')
f3TwampSessionSsUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3TwampSessionSsUdpPort.setStatus('current')
f3TwampSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 3), TwampSessionStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionStatus.setStatus('current')
f3TwampSessionVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionVlanEnabled.setStatus('current')
f3TwampSessionOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionOuterVlanEtherType.setStatus('current')
f3TwampSessionOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 6), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionOuterVlanId.setStatus('current')
f3TwampSessionOuterVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 7), VlanPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionOuterVlanPriority.setStatus('current')
f3TwampSessionInnerVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionInnerVlanEnabled.setStatus('current')
f3TwampSessionInnerVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionInnerVlanEtherType.setStatus('current')
f3TwampSessionInnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 10), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionInnerVlanId.setStatus('current')
f3TwampSessionInnerVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 11), VlanPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionInnerVlanPriority.setStatus('current')
f3TwampSessionDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionDscpValue.setStatus('current')
f3TwampSessionSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSequenceNumber.setStatus('current')
f3TwampSessionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 5, 1, 14), TwampSessionAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionAction.setStatus('current')
f3TwampControlClientTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6), )
if mibBuilder.loadTexts: f3TwampControlClientTable.setStatus('current')
f3TwampControlClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampControlClientIndex"))
if mibBuilder.loadTexts: f3TwampControlClientEntry.setStatus('current')
f3TwampControlClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampControlClientIndex.setStatus('current')
f3TwampControlClientAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 2), AdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampControlClientAdminState.setStatus('current')
f3TwampControlClientOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampControlClientOperationalState.setStatus('current')
f3TwampControlClientSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampControlClientSecondaryState.setStatus('current')
f3TwampControlClientAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientAlias.setStatus('current')
f3TwampControlClientPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientPort.setStatus('current')
f3TwampControlClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 7), TwampControlClientStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampControlClientStatus.setStatus('current')
f3TwampControlClientActionObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientActionObject.setStatus('current')
f3TwampControlClientAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 9), TwampControlClientAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientAction.setStatus('current')
f3TwampControlClientStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 10), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientStorageType.setStatus('current')
f3TwampControlClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientRowStatus.setStatus('current')
f3TwampControlClientSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 6, 1, 12), TwampSessionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampControlClientSessionType.setStatus('current')
f3TwampControlClientSessionSenderTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 7), )
if mibBuilder.loadTexts: f3TwampControlClientSessionSenderTable.setStatus('current')
f3TwampControlClientSessionSenderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampControlClientIndex"), (0, "F3-TWAMP-MIB", "f3TwampControlClientSessionSenderIndex"))
if mibBuilder.loadTexts: f3TwampControlClientSessionSenderEntry.setStatus('current')
f3TwampControlClientSessionSenderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampControlClientSessionSenderIndex.setStatus('current')
f3TwampControlClientSessionSender = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 7, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampControlClientSessionSender.setStatus('current')
f3TwampSessionSenderTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8), )
if mibBuilder.loadTexts: f3TwampSessionSenderTable.setStatus('current')
f3TwampSessionSenderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"))
if mibBuilder.loadTexts: f3TwampSessionSenderEntry.setStatus('current')
f3TwampSessionSenderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: f3TwampSessionSenderIndex.setStatus('current')
f3TwampSessionSenderAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 2), AdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderAdminState.setStatus('current')
f3TwampSessionSenderOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderOperationalState.setStatus('current')
f3TwampSessionSenderSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderSecondaryState.setStatus('current')
f3TwampSessionSenderAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderAlias.setStatus('current')
f3TwampSessionSenderIpInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderIpInterface.setStatus('current')
f3TwampSessionSenderUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderUdpPort.setStatus('current')
f3TwampSessionSenderPktSchedTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderPktSchedTimeInterval.setStatus('current')
f3TwampSessionSenderSrIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderSrIpv4Address.setStatus('current')
f3TwampSessionSenderSrUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderSrUdpPort.setStatus('current')
f3TwampSessionSenderDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderDscpValue.setStatus('current')
f3TwampSessionSenderNumPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderNumPkts.setStatus('current')
f3TwampSessionSenderPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(79, 9242))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderPktSize.setStatus('current')
f3TwampSessionSenderTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 14), TwampTestPattern()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderTestPattern.setStatus('current')
f3TwampSessionSenderStartTimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 15), TwampStartTimeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderStartTimeType.setStatus('current')
f3TwampSessionSenderStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 16), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(10, 10), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderStartDate.setStatus('current')
f3TwampSessionSenderStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 17), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderStartTime.setStatus('current')
f3TwampSessionSenderRespTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderRespTimeout.setStatus('current')
f3TwampSessionSenderVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 19), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderVlanEnabled.setStatus('current')
f3TwampSessionSenderOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 20), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderOuterVlanId.setStatus('current')
f3TwampSessionSenderOuterVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 21), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderOuterVlanPriority.setStatus('current')
f3TwampSessionSenderOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderOuterVlanEtherType.setStatus('current')
f3TwampSessionSenderInnerVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderInnerVlanEnabled.setStatus('current')
f3TwampSessionSenderInnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 24), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderInnerVlanId.setStatus('current')
f3TwampSessionSenderInnerVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 25), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderInnerVlanPriority.setStatus('current')
f3TwampSessionSenderInnerVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderInnerVlanEtherType.setStatus('current')
f3TwampSessionSenderSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderSeqNumber.setStatus('current')
f3TwampSessionSenderStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 28), TwampSessionSenderStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderStatus.setStatus('current')
f3TwampSessionSenderAssocControlClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 29), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionSenderAssocControlClient.setStatus('current')
f3TwampSessionSenderHistoryBins = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 30), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderHistoryBins.setStatus('current')
f3TwampSessionSenderHistoryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 31), TwampHistoryIntervalType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderHistoryInterval.setStatus('current')
f3TwampSessionSenderDistHistoryBins = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 32), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderDistHistoryBins.setStatus('current')
f3TwampSessionSenderDistHistoryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 33), TwampHistoryIntervalType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderDistHistoryInterval.setStatus('current')
f3TwampSessionSenderStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 34), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderStorageType.setStatus('current')
f3TwampSessionSenderRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 35), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TwampSessionSenderRowStatus.setStatus('current')
f3TwampSessionSenderValidateErrorEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 36), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionSenderValidateErrorEstimate.setStatus('current')
f3TwampSessionSenderIpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 37), IpMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionSenderIpMode.setStatus('current')
f3TwampSessionSenderIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionSenderIpAddress.setStatus('current')
f3TwampSessionSenderSrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionSenderSrIpAddress.setStatus('current')
f3TwampSessionSenderStopTimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 8, 1, 40), TwampStopTimeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionSenderStopTimeType.setStatus('current')
f3TwampStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9), )
if mibBuilder.loadTexts: f3TwampStatsTable.setStatus('deprecated')
f3TwampStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampStatsIndex"))
if mibBuilder.loadTexts: f3TwampStatsEntry.setStatus('current')
f3TwampStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 1), TwampPmIntervalType())
if mibBuilder.loadTexts: f3TwampStatsIndex.setStatus('current')
f3TwampStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsValid.setStatus('current')
f3TwampStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 3), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampStatsAction.setStatus('current')
f3TwampStatsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsTime.setStatus('current')
f3TwampStatsS2RPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsS2RPkts.setStatus('current')
f3TwampStatsR2SPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsR2SPkts.setStatus('current')
f3TwampStatsS2RLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsS2RLostPkts.setStatus('current')
f3TwampStatsR2SLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsR2SLostPkts.setStatus('current')
f3TwampStatsS2RSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsS2RSyncErrs.setStatus('current')
f3TwampStatsR2SSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsR2SSyncErrs.setStatus('current')
f3TwampStatsOutOfSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsOutOfSeqErrs.setStatus('current')
f3TwampStatsSeqGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSeqGaps.setStatus('current')
f3TwampStatsMinTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinTwoWayPD.setStatus('current')
f3TwampStatsMaxTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxTwoWayPD.setStatus('current')
f3TwampStatsAvgTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgTwoWayPD.setStatus('current')
f3TwampStatsSumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumTwoWayPD.setStatus('current')
f3TwampStatsSumOfSqTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqTwoWayPD.setStatus('current')
f3TwampStatsMinOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayS2RPD.setStatus('current')
f3TwampStatsMaxOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayS2RPD.setStatus('current')
f3TwampStatsAvgOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayS2RPD.setStatus('current')
f3TwampStatsSumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayS2RPD.setStatus('current')
f3TwampStatsSumOfSqOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayS2RPD.setStatus('current')
f3TwampStatsMinOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayR2SPD.setStatus('current')
f3TwampStatsMaxOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayR2SPD.setStatus('current')
f3TwampStatsAvgOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayR2SPD.setStatus('current')
f3TwampStatsSumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayR2SPD.setStatus('current')
f3TwampStatsSumOfSqOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayR2SPD.setStatus('current')
f3TwampStatsMinOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsMaxOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsAvgOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsSumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsNumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayS2RAbsPDV.setStatus('current')
f3TwampStatsMinOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsMaxOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsAvgOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsSumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsNumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayR2SAbsPDV.setStatus('current')
f3TwampStatsMinOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayS2RNegPDV.setStatus('current')
f3TwampStatsMaxOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayS2RNegPDV.setStatus('current')
f3TwampStatsAvgOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayS2RNegPDV.setStatus('current')
f3TwampStatsSumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayS2RNegPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayS2RNegPDV.setStatus('current')
f3TwampStatsNumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayS2RNegPDV.setStatus('current')
f3TwampStatsMinOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayR2SNegPDV.setStatus('current')
f3TwampStatsMaxOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayR2SNegPDV.setStatus('current')
f3TwampStatsAvgOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayR2SNegPDV.setStatus('current')
f3TwampStatsSumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayR2SNegPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayR2SNegPDV.setStatus('current')
f3TwampStatsNumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayR2SNegPDV.setStatus('current')
f3TwampStatsMinOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayS2RPosPDV.setStatus('current')
f3TwampStatsMaxOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayS2RPosPDV.setStatus('current')
f3TwampStatsAvgOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayS2RPosPDV.setStatus('current')
f3TwampStatsSumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayS2RPosPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 56), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayS2RPosPDV.setStatus('current')
f3TwampStatsNumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayS2RPosPDV.setStatus('current')
f3TwampStatsMinOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMinOneWayR2SPosPDV.setStatus('current')
f3TwampStatsMaxOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsMaxOneWayR2SPosPDV.setStatus('current')
f3TwampStatsAvgOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsAvgOneWayR2SPosPDV.setStatus('current')
f3TwampStatsSumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOneWayR2SPosPDV.setStatus('current')
f3TwampStatsSumOfSqOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsSumOfSqOneWayR2SPosPDV.setStatus('current')
f3TwampStatsNumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayR2SPosPDV.setStatus('current')
f3TwampStatsNumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumTwoWayPD.setStatus('current')
f3TwampStatsNumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayS2RPD.setStatus('current')
f3TwampStatsNumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 9, 1, 66), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsNumOneWayR2SPD.setStatus('current')
f3TwampHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10), )
if mibBuilder.loadTexts: f3TwampHistoryTable.setStatus('deprecated')
f3TwampHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampHistoryIndex"))
if mibBuilder.loadTexts: f3TwampHistoryEntry.setStatus('current')
f3TwampHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: f3TwampHistoryIndex.setStatus('current')
f3TwampHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryValid.setStatus('current')
f3TwampHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 3), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampHistoryAction.setStatus('current')
f3TwampHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryTime.setStatus('current')
f3TwampHistoryS2RPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryS2RPkts.setStatus('current')
f3TwampHistoryR2SPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryR2SPkts.setStatus('current')
f3TwampHistoryS2RLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryS2RLostPkts.setStatus('current')
f3TwampHistoryR2SLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryR2SLostPkts.setStatus('current')
f3TwampHistoryS2RSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryS2RSyncErrs.setStatus('current')
f3TwampHistoryR2SSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryR2SSyncErrs.setStatus('current')
f3TwampHistoryOutOfSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryOutOfSeqErrs.setStatus('current')
f3TwampHistorySeqGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySeqGaps.setStatus('current')
f3TwampHistoryMinTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinTwoWayPD.setStatus('current')
f3TwampHistoryMaxTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxTwoWayPD.setStatus('current')
f3TwampHistoryAvgTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgTwoWayPD.setStatus('current')
f3TwampHistorySumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumTwoWayPD.setStatus('current')
f3TwampHistorySumOfSqTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqTwoWayPD.setStatus('current')
f3TwampHistoryMinOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayS2RPD.setStatus('current')
f3TwampHistoryMaxOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayS2RPD.setStatus('current')
f3TwampHistoryAvgOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayS2RPD.setStatus('current')
f3TwampHistorySumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayS2RPD.setStatus('current')
f3TwampHistorySumOfSqOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayS2RPD.setStatus('current')
f3TwampHistoryMinOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayR2SPD.setStatus('current')
f3TwampHistoryMaxOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayR2SPD.setStatus('current')
f3TwampHistoryAvgOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayR2SPD.setStatus('current')
f3TwampHistorySumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayR2SPD.setStatus('current')
f3TwampHistorySumOfSqOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayR2SPD.setStatus('current')
f3TwampHistoryMinOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryMaxOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryAvgOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayS2RAbsPDV.setStatus('current')
f3TwampHistorySumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayS2RAbsPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryNumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryMinOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryMaxOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryAvgOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayR2SAbsPDV.setStatus('current')
f3TwampHistorySumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayR2SAbsPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryNumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryMinOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryMaxOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryAvgOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayS2RNegPDV.setStatus('current')
f3TwampHistorySumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayS2RNegPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryNumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryMinOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryMaxOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryAvgOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayR2SNegPDV.setStatus('current')
f3TwampHistorySumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayR2SNegPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryNumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryMinOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryMaxOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryAvgOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayS2RPosPDV.setStatus('current')
f3TwampHistorySumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayS2RPosPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 56), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryNumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryMinOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMinOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryMaxOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryMaxOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryAvgOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryAvgOneWayR2SPosPDV.setStatus('current')
f3TwampHistorySumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOneWayR2SPosPDV.setStatus('current')
f3TwampHistorySumOfSqOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistorySumOfSqOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryNumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryNumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumTwoWayPD.setStatus('current')
f3TwampHistoryNumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayS2RPD.setStatus('current')
f3TwampHistoryNumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 10, 1, 66), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryNumOneWayR2SPD.setStatus('current')
f3TwampDistStatsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11), )
if mibBuilder.loadTexts: f3TwampDistStatsConfigTable.setStatus('current')
f3TwampDistStatsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsConfigIndex"))
if mibBuilder.loadTexts: f3TwampDistStatsConfigEntry.setStatus('current')
f3TwampDistStatsConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11, 1, 1), TwampDistStatsType())
if mibBuilder.loadTexts: f3TwampDistStatsConfigIndex.setStatus('current')
f3TwampDistStatsConfigMinVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampDistStatsConfigMinVal.setStatus('current')
f3TwampDistStatsConfigMaxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampDistStatsConfigMaxVal.setStatus('current')
f3TwampDistStatsConfigNumBins = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 11, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampDistStatsConfigNumBins.setStatus('current')
f3TwampDistStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12), )
if mibBuilder.loadTexts: f3TwampDistStatsTable.setStatus('current')
f3TwampDistStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsConfigIndex"))
if mibBuilder.loadTexts: f3TwampDistStatsEntry.setStatus('current')
f3TwampDistStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsValid.setStatus('current')
f3TwampDistStatsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsTime.setStatus('current')
f3TwampDistStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 3), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampDistStatsAction.setStatus('current')
f3TwampDistStatsNumBins = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsNumBins.setStatus('current')
f3TwampDistStatsLTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsLTMin.setStatus('current')
f3TwampDistStatsGTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 12, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsGTMax.setStatus('current')
f3TwampDistStatsBinTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13), )
if mibBuilder.loadTexts: f3TwampDistStatsBinTable.setStatus('current')
f3TwampDistStatsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsConfigIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsBinIndex"))
if mibBuilder.loadTexts: f3TwampDistStatsBinEntry.setStatus('current')
f3TwampDistStatsBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: f3TwampDistStatsBinIndex.setStatus('current')
f3TwampDistStatsBinLower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsBinLower.setStatus('current')
f3TwampDistStatsBinUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsBinUpper.setStatus('current')
f3TwampDistStatsBinNumSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 13, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistStatsBinNumSamples.setStatus('current')
f3TwampDistHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14), )
if mibBuilder.loadTexts: f3TwampDistHistoryTable.setStatus('current')
f3TwampDistHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsConfigIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistHistoryIndex"))
if mibBuilder.loadTexts: f3TwampDistHistoryEntry.setStatus('current')
f3TwampDistHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3TwampDistHistoryIndex.setStatus('current')
f3TwampDistHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryValid.setStatus('current')
f3TwampDistHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryTime.setStatus('current')
f3TwampDistHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampDistHistoryAction.setStatus('current')
f3TwampDistHistoryNumBins = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryNumBins.setStatus('current')
f3TwampDistHistoryLTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryLTMin.setStatus('current')
f3TwampDistHistoryGTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 14, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryGTMax.setStatus('current')
f3TwampDistHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15), )
if mibBuilder.loadTexts: f3TwampDistHistoryBinTable.setStatus('current')
f3TwampDistHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistStatsConfigIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistHistoryIndex"), (0, "F3-TWAMP-MIB", "f3TwampDistHistoryBinIndex"))
if mibBuilder.loadTexts: f3TwampDistHistoryBinEntry.setStatus('current')
f3TwampDistHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: f3TwampDistHistoryBinIndex.setStatus('current')
f3TwampDistHistoryBinLower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryBinLower.setStatus('current')
f3TwampDistHistoryBinUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryBinUpper.setStatus('current')
f3TwampDistHistoryBinNumSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 15, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampDistHistoryBinNumSamples.setStatus('current')
f3TwampStatsThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16), )
if mibBuilder.loadTexts: f3TwampStatsThresholdTable.setStatus('current')
f3TwampStatsThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampStatsThresholdIndex"))
if mibBuilder.loadTexts: f3TwampStatsThresholdEntry.setStatus('current')
f3TwampStatsThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsThresholdIndex.setStatus('current')
f3TwampStatsThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsThresholdVariable.setStatus('current')
f3TwampStatsThresholdAbsValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampStatsThresholdAbsValueLo.setStatus('current')
f3TwampStatsThresholdAbsValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampStatsThresholdAbsValueHi.setStatus('current')
f3TwampStatsThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 16, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatsThresholdMonValue.setStatus('current')
f3TwampStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17), )
if mibBuilder.loadTexts: f3TwampStatisticTable.setStatus('current')
f3TwampStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampStatisticIndex"))
if mibBuilder.loadTexts: f3TwampStatisticEntry.setStatus('current')
f3TwampStatisticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 1), TwampPmIntervalType())
if mibBuilder.loadTexts: f3TwampStatisticIndex.setStatus('current')
f3TwampStatisticValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticValid.setStatus('current')
f3TwampStatisticAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 3), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampStatisticAction.setStatus('current')
f3TwampStatisticTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticTime.setStatus('current')
f3TwampStatisticS2RPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticS2RPkts.setStatus('current')
f3TwampStatisticR2SPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticR2SPkts.setStatus('current')
f3TwampStatisticS2RLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticS2RLostPkts.setStatus('current')
f3TwampStatisticR2SLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticR2SLostPkts.setStatus('current')
f3TwampStatisticS2RSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticS2RSyncErrs.setStatus('current')
f3TwampStatisticR2SSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticR2SSyncErrs.setStatus('current')
f3TwampStatisticOutOfSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticOutOfSeqErrs.setStatus('current')
f3TwampStatisticSeqGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSeqGaps.setStatus('current')
f3TwampStatisticMinTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinTwoWayPD.setStatus('current')
f3TwampStatisticMaxTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxTwoWayPD.setStatus('current')
f3TwampStatisticAvgTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgTwoWayPD.setStatus('current')
f3TwampStatisticSumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumTwoWayPD.setStatus('current')
f3TwampStatisticSumOfSqTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqTwoWayPD.setStatus('current')
f3TwampStatisticMinOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayS2RPD.setStatus('current')
f3TwampStatisticMaxOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayS2RPD.setStatus('current')
f3TwampStatisticAvgOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayS2RPD.setStatus('current')
f3TwampStatisticSumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayS2RPD.setStatus('current')
f3TwampStatisticSumOfSqOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayS2RPD.setStatus('current')
f3TwampStatisticMinOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayR2SPD.setStatus('current')
f3TwampStatisticMaxOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayR2SPD.setStatus('current')
f3TwampStatisticAvgOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayR2SPD.setStatus('current')
f3TwampStatisticSumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayR2SPD.setStatus('current')
f3TwampStatisticSumOfSqOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayR2SPD.setStatus('current')
f3TwampStatisticMinOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticMaxOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticAvgOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticSumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticNumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayS2RAbsPDV.setStatus('current')
f3TwampStatisticMinOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticMaxOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticAvgOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticSumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticNumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayR2SAbsPDV.setStatus('current')
f3TwampStatisticMinOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticMaxOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticAvgOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticSumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticNumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayS2RNegPDV.setStatus('current')
f3TwampStatisticMinOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticMaxOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticAvgOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticSumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticNumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayR2SNegPDV.setStatus('current')
f3TwampStatisticMinOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticMaxOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticAvgOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticSumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 56), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticNumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 57), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayS2RPosPDV.setStatus('current')
f3TwampStatisticMinOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 58), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMinOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticMaxOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 59), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticMaxOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticAvgOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 60), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticAvgOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticSumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 61), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticSumOfSqOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 62), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticSumOfSqOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticNumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 63), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayR2SPosPDV.setStatus('current')
f3TwampStatisticNumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 64), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumTwoWayPD.setStatus('current')
f3TwampStatisticNumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 65), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayS2RPD.setStatus('current')
f3TwampStatisticNumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 66), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticNumOneWayR2SPD.setStatus('current')
f3TwampStatisticUdpChecksumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 17, 1, 67), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampStatisticUdpChecksumFailures.setStatus('current')
f3TwampHistoryDataTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18), )
if mibBuilder.loadTexts: f3TwampHistoryDataTable.setStatus('current')
f3TwampHistoryDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionSenderIndex"), (0, "F3-TWAMP-MIB", "f3TwampHistoryDataIndex"))
if mibBuilder.loadTexts: f3TwampHistoryDataEntry.setStatus('current')
f3TwampHistoryDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 1), Integer32())
if mibBuilder.loadTexts: f3TwampHistoryDataIndex.setStatus('current')
f3TwampHistoryDataValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataValid.setStatus('current')
f3TwampHistoryDataAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 3), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampHistoryDataAction.setStatus('current')
f3TwampHistoryDataTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataTime.setStatus('current')
f3TwampHistoryDataS2RPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataS2RPkts.setStatus('current')
f3TwampHistoryDataR2SPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataR2SPkts.setStatus('current')
f3TwampHistoryDataS2RLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataS2RLostPkts.setStatus('current')
f3TwampHistoryDataR2SLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataR2SLostPkts.setStatus('current')
f3TwampHistoryDataS2RSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataS2RSyncErrs.setStatus('current')
f3TwampHistoryDataR2SSyncErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataR2SSyncErrs.setStatus('current')
f3TwampHistoryDataOutOfSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataOutOfSeqErrs.setStatus('current')
f3TwampHistoryDataSeqGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSeqGaps.setStatus('current')
f3TwampHistoryDataMinTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinTwoWayPD.setStatus('current')
f3TwampHistoryDataMaxTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxTwoWayPD.setStatus('current')
f3TwampHistoryDataAvgTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgTwoWayPD.setStatus('current')
f3TwampHistoryDataSumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumTwoWayPD.setStatus('current')
f3TwampHistoryDataSumOfSqTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqTwoWayPD.setStatus('current')
f3TwampHistoryDataMinOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayS2RPD.setStatus('current')
f3TwampHistoryDataMaxOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayS2RPD.setStatus('current')
f3TwampHistoryDataAvgOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayS2RPD.setStatus('current')
f3TwampHistoryDataSumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayS2RPD.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayS2RPD.setStatus('current')
f3TwampHistoryDataMinOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayR2SPD.setStatus('current')
f3TwampHistoryDataMaxOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayR2SPD.setStatus('current')
f3TwampHistoryDataAvgOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayR2SPD.setStatus('current')
f3TwampHistoryDataSumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayR2SPD.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayR2SPD.setStatus('current')
f3TwampHistoryDataMinOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataSumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataNumOneWayS2RAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayS2RAbsPDV.setStatus('current')
f3TwampHistoryDataMinOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataSumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataNumOneWayR2SAbsPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayR2SAbsPDV.setStatus('current')
f3TwampHistoryDataMinOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataSumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataNumOneWayS2RNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayS2RNegPDV.setStatus('current')
f3TwampHistoryDataMinOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataSumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataNumOneWayR2SNegPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayR2SNegPDV.setStatus('current')
f3TwampHistoryDataMinOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataSumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 56), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataNumOneWayS2RPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 57), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayS2RPosPDV.setStatus('current')
f3TwampHistoryDataMinOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 58), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMinOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataMaxOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 59), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataMaxOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataAvgOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 60), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataAvgOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataSumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 61), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataSumOfSqOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 62), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataSumOfSqOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataNumOneWayR2SPosPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 63), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayR2SPosPDV.setStatus('current')
f3TwampHistoryDataNumTwoWayPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 64), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumTwoWayPD.setStatus('current')
f3TwampHistoryDataNumOneWayS2RPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 65), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayS2RPD.setStatus('current')
f3TwampHistoryDataNumOneWayR2SPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 66), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataNumOneWayR2SPD.setStatus('current')
f3TwampHistoryDataUdpChecksumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 18, 1, 67), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampHistoryDataUdpChecksumFailures.setStatus('current')
f3TwampSessionV2Table = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19), )
if mibBuilder.loadTexts: f3TwampSessionV2Table.setStatus('current')
f3TwampSessionV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionReflectorIndex"), (0, "F3-TWAMP-MIB", "f3TwampSessionV2SsIpAddress"), (0, "F3-TWAMP-MIB", "f3TwampSessionV2SsUdpPort"))
if mibBuilder.loadTexts: f3TwampSessionV2Entry.setStatus('current')
f3TwampSessionV2SsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 1), DisplayString())
if mibBuilder.loadTexts: f3TwampSessionV2SsIpAddress.setStatus('current')
f3TwampSessionV2SsUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3TwampSessionV2SsUdpPort.setStatus('current')
f3TwampSessionV2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 3), TwampSessionStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2Status.setStatus('current')
f3TwampSessionV2VlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2VlanEnabled.setStatus('current')
f3TwampSessionV2OuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2OuterVlanEtherType.setStatus('current')
f3TwampSessionV2OuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 6), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2OuterVlanId.setStatus('current')
f3TwampSessionV2OuterVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 7), VlanPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2OuterVlanPriority.setStatus('current')
f3TwampSessionV2InnerVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2InnerVlanEnabled.setStatus('current')
f3TwampSessionV2InnerVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2InnerVlanEtherType.setStatus('current')
f3TwampSessionV2InnerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 10), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2InnerVlanId.setStatus('current')
f3TwampSessionV2InnerVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 11), VlanPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2InnerVlanPriority.setStatus('current')
f3TwampSessionV2DscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2DscpValue.setStatus('current')
f3TwampSessionV2SequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TwampSessionV2SequenceNumber.setStatus('current')
f3TwampSessionV2Action = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 1, 19, 1, 14), TwampSessionAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TwampSessionV2Action.setStatus('current')
twampSessionSenderThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 5, 1)).setObjects(("F3-TWAMP-MIB", "f3TwampStatsThresholdIndex"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdVariable"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdAbsValueLo"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdAbsValueHi"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdMonValue"))
if mibBuilder.loadTexts: twampSessionSenderThresholdCrossingAlert.setStatus('current')
f3TwampCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 1))
f3TwampGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2))
f3TwampCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 1, 1)).setObjects(("F3-TWAMP-MIB", "f3TwampIpInterfaceGroup"), ("F3-TWAMP-MIB", "f3TwampServerGroup"), ("F3-TWAMP-MIB", "f3TwampServerSessionReflectorGroup"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorGroup"), ("F3-TWAMP-MIB", "f3TwampSessionGroup"), ("F3-TWAMP-MIB", "f3TwampControlClientGroup"), ("F3-TWAMP-MIB", "f3TwampControlClientSessionSenderGroup"), ("F3-TWAMP-MIB", "f3TwampSessionSenderGroup"), ("F3-TWAMP-MIB", "f3TwampStatisticsGroup"), ("F3-TWAMP-MIB", "f3TwampDistributionStatisticsGroup"), ("F3-TWAMP-MIB", "f3TwampThresholdGroup"), ("F3-TWAMP-MIB", "f3TwampSessionV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampCompliance = f3TwampCompliance.setStatus('current')
f3TwampIpInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 1)).setObjects(("F3-TWAMP-MIB", "f3TwampIpInterfacePort"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpMode"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv4Address"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv4Mask"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceMtu"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceStorageType"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceRowStatus"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv6Addr"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv6PrefixLen"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv6LinkLocalAddr"), ("F3-TWAMP-MIB", "f3TwampIpInterfaceIpv6LinkLocalAddrPrefixLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampIpInterfaceGroup = f3TwampIpInterfaceGroup.setStatus('current')
f3TwampServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 2)).setObjects(("F3-TWAMP-MIB", "f3TwampServerAdminState"), ("F3-TWAMP-MIB", "f3TwampServerOperationalState"), ("F3-TWAMP-MIB", "f3TwampServerSecondaryState"), ("F3-TWAMP-MIB", "f3TwampServerAlias"), ("F3-TWAMP-MIB", "f3TwampServerPort"), ("F3-TWAMP-MIB", "f3TwampServerStatus"), ("F3-TWAMP-MIB", "f3TwampServerSessionIdleTimeout"), ("F3-TWAMP-MIB", "f3TwampServerSessionAgingTimeout"), ("F3-TWAMP-MIB", "f3TwampServerActionObject"), ("F3-TWAMP-MIB", "f3TwampServerAction"), ("F3-TWAMP-MIB", "f3TwampServerStorageType"), ("F3-TWAMP-MIB", "f3TwampServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampServerGroup = f3TwampServerGroup.setStatus('current')
f3TwampServerSessionReflectorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 3)).setObjects(("F3-TWAMP-MIB", "f3TwampServerSessionReflector"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampServerSessionReflectorGroup = f3TwampServerSessionReflectorGroup.setStatus('current')
f3TwampSessionReflectorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 4)).setObjects(("F3-TWAMP-MIB", "f3TwampSessionReflectorAdminState"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorOperationalState"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorSecondaryState"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorAlias"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorIpInterface"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorUdpPort"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorUseSenderSeqNum"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorUserCreated"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorStatus"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorAssocServer"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorStorageType"), ("F3-TWAMP-MIB", "f3TwampSessionReflectorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampSessionReflectorGroup = f3TwampSessionReflectorGroup.setStatus('current')
f3TwampSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 5)).setObjects(("F3-TWAMP-MIB", "f3TwampSessionStatus"), ("F3-TWAMP-MIB", "f3TwampSessionVlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionOuterVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionOuterVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionOuterVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionInnerVlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionInnerVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionInnerVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionInnerVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionDscpValue"), ("F3-TWAMP-MIB", "f3TwampSessionSequenceNumber"), ("F3-TWAMP-MIB", "f3TwampSessionAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampSessionGroup = f3TwampSessionGroup.setStatus('current')
f3TwampControlClientGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 6)).setObjects(("F3-TWAMP-MIB", "f3TwampControlClientAdminState"), ("F3-TWAMP-MIB", "f3TwampControlClientOperationalState"), ("F3-TWAMP-MIB", "f3TwampControlClientSecondaryState"), ("F3-TWAMP-MIB", "f3TwampControlClientAlias"), ("F3-TWAMP-MIB", "f3TwampControlClientPort"), ("F3-TWAMP-MIB", "f3TwampControlClientStatus"), ("F3-TWAMP-MIB", "f3TwampControlClientActionObject"), ("F3-TWAMP-MIB", "f3TwampControlClientAction"), ("F3-TWAMP-MIB", "f3TwampControlClientStorageType"), ("F3-TWAMP-MIB", "f3TwampControlClientRowStatus"), ("F3-TWAMP-MIB", "f3TwampControlClientSessionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampControlClientGroup = f3TwampControlClientGroup.setStatus('current')
f3TwampControlClientSessionSenderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 7)).setObjects(("F3-TWAMP-MIB", "f3TwampControlClientSessionSender"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampControlClientSessionSenderGroup = f3TwampControlClientSessionSenderGroup.setStatus('current')
f3TwampSessionSenderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 8)).setObjects(("F3-TWAMP-MIB", "f3TwampSessionSenderAdminState"), ("F3-TWAMP-MIB", "f3TwampSessionSenderOperationalState"), ("F3-TWAMP-MIB", "f3TwampSessionSenderSecondaryState"), ("F3-TWAMP-MIB", "f3TwampSessionSenderAlias"), ("F3-TWAMP-MIB", "f3TwampSessionSenderIpInterface"), ("F3-TWAMP-MIB", "f3TwampSessionSenderUdpPort"), ("F3-TWAMP-MIB", "f3TwampSessionSenderPktSchedTimeInterval"), ("F3-TWAMP-MIB", "f3TwampSessionSenderSrIpv4Address"), ("F3-TWAMP-MIB", "f3TwampSessionSenderSrUdpPort"), ("F3-TWAMP-MIB", "f3TwampSessionSenderDscpValue"), ("F3-TWAMP-MIB", "f3TwampSessionSenderNumPkts"), ("F3-TWAMP-MIB", "f3TwampSessionSenderPktSize"), ("F3-TWAMP-MIB", "f3TwampSessionSenderTestPattern"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStartTimeType"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStartDate"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStartTime"), ("F3-TWAMP-MIB", "f3TwampSessionSenderRespTimeout"), ("F3-TWAMP-MIB", "f3TwampSessionSenderVlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionSenderOuterVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionSenderOuterVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionSenderOuterVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionSenderInnerVlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionSenderInnerVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionSenderInnerVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionSenderInnerVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionSenderSeqNumber"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStatus"), ("F3-TWAMP-MIB", "f3TwampSessionSenderAssocControlClient"), ("F3-TWAMP-MIB", "f3TwampSessionSenderHistoryBins"), ("F3-TWAMP-MIB", "f3TwampSessionSenderHistoryInterval"), ("F3-TWAMP-MIB", "f3TwampSessionSenderDistHistoryBins"), ("F3-TWAMP-MIB", "f3TwampSessionSenderDistHistoryInterval"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStorageType"), ("F3-TWAMP-MIB", "f3TwampSessionSenderRowStatus"), ("F3-TWAMP-MIB", "f3TwampSessionSenderValidateErrorEstimate"), ("F3-TWAMP-MIB", "f3TwampSessionSenderIpMode"), ("F3-TWAMP-MIB", "f3TwampSessionSenderIpAddress"), ("F3-TWAMP-MIB", "f3TwampSessionSenderSrIpAddress"), ("F3-TWAMP-MIB", "f3TwampSessionSenderStopTimeType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampSessionSenderGroup = f3TwampSessionSenderGroup.setStatus('current')
f3TwampStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 9))
for _f3TwampStatisticsGroup_obj in [[("F3-TWAMP-MIB", "f3TwampStatsValid"), ("F3-TWAMP-MIB", "f3TwampStatsAction"), ("F3-TWAMP-MIB", "f3TwampStatsTime"), ("F3-TWAMP-MIB", "f3TwampStatsS2RPkts"), ("F3-TWAMP-MIB", "f3TwampStatsR2SPkts"), ("F3-TWAMP-MIB", "f3TwampStatsS2RLostPkts"), ("F3-TWAMP-MIB", "f3TwampStatsR2SLostPkts"), ("F3-TWAMP-MIB", "f3TwampStatsS2RSyncErrs"), ("F3-TWAMP-MIB", "f3TwampStatsR2SSyncErrs"), ("F3-TWAMP-MIB", "f3TwampStatsOutOfSeqErrs"), ("F3-TWAMP-MIB", "f3TwampStatsSeqGaps"), ("F3-TWAMP-MIB", "f3TwampStatsMinTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsMaxTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsAvgTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMinOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsMaxOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsAvgOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsSumOfSqOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatsNumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatsNumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryValid"), ("F3-TWAMP-MIB", "f3TwampHistoryAction"), ("F3-TWAMP-MIB", "f3TwampHistoryTime"), ("F3-TWAMP-MIB", "f3TwampHistoryS2RPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryR2SPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryS2RLostPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryR2SLostPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryS2RSyncErrs"), ("F3-TWAMP-MIB", "f3TwampHistoryR2SSyncErrs"), ("F3-TWAMP-MIB", "f3TwampHistoryOutOfSeqErrs"), ("F3-TWAMP-MIB", "f3TwampHistorySeqGaps"), ("F3-TWAMP-MIB", "f3TwampHistoryMinTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMinOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryMaxOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryAvgOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistorySumOfSqOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryNumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryNumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticIndex"), ("F3-TWAMP-MIB", "f3TwampStatisticValid"), ("F3-TWAMP-MIB", "f3TwampStatisticAction"), ("F3-TWAMP-MIB", "f3TwampStatisticTime"), ("F3-TWAMP-MIB", "f3TwampStatisticS2RPkts"), ("F3-TWAMP-MIB", "f3TwampStatisticR2SPkts"), ("F3-TWAMP-MIB", "f3TwampStatisticS2RLostPkts"), ("F3-TWAMP-MIB", "f3TwampStatisticR2SLostPkts"), ("F3-TWAMP-MIB", "f3TwampStatisticS2RSyncErrs"), ("F3-TWAMP-MIB", "f3TwampStatisticR2SSyncErrs"), ("F3-TWAMP-MIB", "f3TwampStatisticOutOfSeqErrs"), ("F3-TWAMP-MIB", "f3TwampStatisticSeqGaps"), ("F3-TWAMP-MIB", "f3TwampStatisticMinTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMinOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticMaxOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticAvgOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticSumOfSqOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampStatisticNumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampStatisticNumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampStatisticUdpChecksumFailures"), ("F3-TWAMP-MIB", "f3TwampHistoryDataIndex"), ("F3-TWAMP-MIB", "f3TwampHistoryDataValid"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAction"), ("F3-TWAMP-MIB", "f3TwampHistoryDataTime"), ("F3-TWAMP-MIB", "f3TwampHistoryDataS2RPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryDataR2SPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryDataS2RLostPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryDataR2SLostPkts"), ("F3-TWAMP-MIB", "f3TwampHistoryDataS2RSyncErrs"), ("F3-TWAMP-MIB", "f3TwampHistoryDataR2SSyncErrs"), ("F3-TWAMP-MIB", "f3TwampHistoryDataOutOfSeqErrs"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSeqGaps"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayS2RAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayR2SAbsPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayS2RNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayR2SNegPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayS2RPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataMinOneWayR2SPosPDV")], [("F3-TWAMP-MIB", "f3TwampHistoryDataMaxOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataAvgOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataSumOfSqOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayR2SPosPDV"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumTwoWayPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayS2RPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataNumOneWayR2SPD"), ("F3-TWAMP-MIB", "f3TwampHistoryDataUdpChecksumFailures")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        f3TwampStatisticsGroup = f3TwampStatisticsGroup.setObjects(*_f3TwampStatisticsGroup_obj)
    else:
        f3TwampStatisticsGroup = f3TwampStatisticsGroup.setObjects(*_f3TwampStatisticsGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampStatisticsGroup = f3TwampStatisticsGroup.setStatus('current')
f3TwampDistributionStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 10)).setObjects(("F3-TWAMP-MIB", "f3TwampDistStatsConfigMinVal"), ("F3-TWAMP-MIB", "f3TwampDistStatsConfigMaxVal"), ("F3-TWAMP-MIB", "f3TwampDistStatsConfigNumBins"), ("F3-TWAMP-MIB", "f3TwampDistStatsValid"), ("F3-TWAMP-MIB", "f3TwampDistStatsTime"), ("F3-TWAMP-MIB", "f3TwampDistStatsAction"), ("F3-TWAMP-MIB", "f3TwampDistStatsNumBins"), ("F3-TWAMP-MIB", "f3TwampDistStatsLTMin"), ("F3-TWAMP-MIB", "f3TwampDistStatsGTMax"), ("F3-TWAMP-MIB", "f3TwampDistStatsBinLower"), ("F3-TWAMP-MIB", "f3TwampDistStatsBinUpper"), ("F3-TWAMP-MIB", "f3TwampDistStatsBinNumSamples"), ("F3-TWAMP-MIB", "f3TwampDistHistoryValid"), ("F3-TWAMP-MIB", "f3TwampDistHistoryTime"), ("F3-TWAMP-MIB", "f3TwampDistHistoryAction"), ("F3-TWAMP-MIB", "f3TwampDistHistoryNumBins"), ("F3-TWAMP-MIB", "f3TwampDistHistoryLTMin"), ("F3-TWAMP-MIB", "f3TwampDistHistoryGTMax"), ("F3-TWAMP-MIB", "f3TwampDistHistoryBinLower"), ("F3-TWAMP-MIB", "f3TwampDistHistoryBinUpper"), ("F3-TWAMP-MIB", "f3TwampDistHistoryBinNumSamples"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampDistributionStatisticsGroup = f3TwampDistributionStatisticsGroup.setStatus('current')
f3TwampThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 11)).setObjects(("F3-TWAMP-MIB", "f3TwampStatsThresholdVariable"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdAbsValueLo"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdAbsValueHi"), ("F3-TWAMP-MIB", "f3TwampStatsThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampThresholdGroup = f3TwampThresholdGroup.setStatus('current')
f3TwampSessionV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 33, 4, 2, 12)).setObjects(("F3-TWAMP-MIB", "f3TwampSessionV2Status"), ("F3-TWAMP-MIB", "f3TwampSessionV2VlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionV2OuterVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionV2OuterVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionV2OuterVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionV2InnerVlanEnabled"), ("F3-TWAMP-MIB", "f3TwampSessionV2InnerVlanEtherType"), ("F3-TWAMP-MIB", "f3TwampSessionV2InnerVlanId"), ("F3-TWAMP-MIB", "f3TwampSessionV2InnerVlanPriority"), ("F3-TWAMP-MIB", "f3TwampSessionV2DscpValue"), ("F3-TWAMP-MIB", "f3TwampSessionV2SequenceNumber"), ("F3-TWAMP-MIB", "f3TwampSessionV2Action"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TwampSessionV2Group = f3TwampSessionV2Group.setStatus('current')
mibBuilder.exportSymbols("F3-TWAMP-MIB", TwampControlClientAction=TwampControlClientAction, f3TwampStatisticNumOneWayS2RAbsPDV=f3TwampStatisticNumOneWayS2RAbsPDV, f3TwampHistoryMaxOneWayR2SAbsPDV=f3TwampHistoryMaxOneWayR2SAbsPDV, f3TwampControlClientIndex=f3TwampControlClientIndex, f3TwampHistorySumOneWayR2SPosPDV=f3TwampHistorySumOneWayR2SPosPDV, f3TwampHistorySumOfSqOneWayS2RPD=f3TwampHistorySumOfSqOneWayS2RPD, f3TwampSessionSenderStartTimeType=f3TwampSessionSenderStartTimeType, f3TwampSessionStatus=f3TwampSessionStatus, f3TwampStatisticSumOfSqOneWayR2SPosPDV=f3TwampStatisticSumOfSqOneWayR2SPosPDV, f3TwampHistoryDataAvgOneWayR2SPD=f3TwampHistoryDataAvgOneWayR2SPD, f3TwampHistoryValid=f3TwampHistoryValid, f3TwampHistoryDataAvgOneWayS2RPD=f3TwampHistoryDataAvgOneWayS2RPD, f3TwampStatsS2RLostPkts=f3TwampStatsS2RLostPkts, f3TwampDistStatsConfigEntry=f3TwampDistStatsConfigEntry, f3TwampHistoryDataSumOfSqTwoWayPD=f3TwampHistoryDataSumOfSqTwoWayPD, f3TwampHistoryDataMaxOneWayR2SAbsPDV=f3TwampHistoryDataMaxOneWayR2SAbsPDV, f3TwampIpInterfaceEntry=f3TwampIpInterfaceEntry, f3TwampSessionSenderAlias=f3TwampSessionSenderAlias, f3TwampHistoryDataAvgOneWayR2SPosPDV=f3TwampHistoryDataAvgOneWayR2SPosPDV, f3TwampSessionV2OuterVlanId=f3TwampSessionV2OuterVlanId, f3TwampHistoryDataMinOneWayR2SPosPDV=f3TwampHistoryDataMinOneWayR2SPosPDV, f3TwampServerRowStatus=f3TwampServerRowStatus, f3TwampStatsSumOneWayS2RAbsPDV=f3TwampStatsSumOneWayS2RAbsPDV, f3TwampServerActionObject=f3TwampServerActionObject, f3TwampSessionInnerVlanEtherType=f3TwampSessionInnerVlanEtherType, f3TwampSessionSenderIpInterface=f3TwampSessionSenderIpInterface, f3TwampConfigObjects=f3TwampConfigObjects, f3TwampSessionReflectorAssocServer=f3TwampSessionReflectorAssocServer, f3TwampDistHistoryBinEntry=f3TwampDistHistoryBinEntry, f3TwampStatisticAvgTwoWayPD=f3TwampStatisticAvgTwoWayPD, TwampSessionAction=TwampSessionAction, f3TwampStatsSumTwoWayPD=f3TwampStatsSumTwoWayPD, f3TwampSessionDscpValue=f3TwampSessionDscpValue, f3TwampSessionEntry=f3TwampSessionEntry, f3TwampStatisticAvgOneWayR2SPD=f3TwampStatisticAvgOneWayR2SPD, f3TwampStatisticMaxOneWayS2RPosPDV=f3TwampStatisticMaxOneWayS2RPosPDV, f3TwampStatisticAvgOneWayS2RPosPDV=f3TwampStatisticAvgOneWayS2RPosPDV, f3TwampHistoryDataNumOneWayR2SPosPDV=f3TwampHistoryDataNumOneWayR2SPosPDV, f3TwampStatsNumOneWayS2RAbsPDV=f3TwampStatsNumOneWayS2RAbsPDV, f3TwampSessionV2Status=f3TwampSessionV2Status, f3TwampDistHistoryBinNumSamples=f3TwampDistHistoryBinNumSamples, f3TwampStatsMaxOneWayS2RAbsPDV=f3TwampStatsMaxOneWayS2RAbsPDV, f3TwampStatsSumOfSqOneWayS2RAbsPDV=f3TwampStatsSumOfSqOneWayS2RAbsPDV, f3TwampHistoryDataSumOneWayR2SNegPDV=f3TwampHistoryDataSumOneWayR2SNegPDV, f3TwampStatsThresholdIndex=f3TwampStatsThresholdIndex, f3TwampStatisticSumTwoWayPD=f3TwampStatisticSumTwoWayPD, f3TwampSessionSenderStartTime=f3TwampSessionSenderStartTime, f3TwampHistoryMinOneWayR2SPD=f3TwampHistoryMinOneWayR2SPD, f3TwampServerOperationalState=f3TwampServerOperationalState, f3TwampDistStatsLTMin=f3TwampDistStatsLTMin, f3TwampHistoryDataMaxTwoWayPD=f3TwampHistoryDataMaxTwoWayPD, f3TwampStatisticMinOneWayS2RPosPDV=f3TwampStatisticMinOneWayS2RPosPDV, f3TwampControlClientTable=f3TwampControlClientTable, f3TwampStatsAvgOneWayS2RAbsPDV=f3TwampStatsAvgOneWayS2RAbsPDV, f3TwampIpInterfaceGroup=f3TwampIpInterfaceGroup, f3TwampServerPort=f3TwampServerPort, f3TwampControlClientAlias=f3TwampControlClientAlias, f3TwampHistorySumOfSqOneWayR2SPD=f3TwampHistorySumOfSqOneWayR2SPD, f3TwampSessionReflectorGroup=f3TwampSessionReflectorGroup, f3TwampServerSessionReflectorGroup=f3TwampServerSessionReflectorGroup, f3TwampStatisticMinOneWayS2RNegPDV=f3TwampStatisticMinOneWayS2RNegPDV, f3TwampStatisticMaxOneWayS2RPD=f3TwampStatisticMaxOneWayS2RPD, f3TwampSessionSenderStatus=f3TwampSessionSenderStatus, f3TwampDistStatsBinNumSamples=f3TwampDistStatsBinNumSamples, TwampSessionReflectorStatus=TwampSessionReflectorStatus, f3TwampSessionV2InnerVlanId=f3TwampSessionV2InnerVlanId, f3TwampStatsSumOneWayR2SNegPDV=f3TwampStatsSumOneWayR2SNegPDV, f3TwampIpInterfaceName=f3TwampIpInterfaceName, f3TwampDistStatsConfigIndex=f3TwampDistStatsConfigIndex, f3TwampHistoryDataMinOneWayS2RPosPDV=f3TwampHistoryDataMinOneWayS2RPosPDV, f3TwampStatsR2SSyncErrs=f3TwampStatsR2SSyncErrs, f3TwampStatisticSeqGaps=f3TwampStatisticSeqGaps, f3TwampStatsValid=f3TwampStatsValid, f3TwampStatsR2SLostPkts=f3TwampStatsR2SLostPkts, f3TwampStatisticIndex=f3TwampStatisticIndex, f3TwampHistoryAvgOneWayR2SNegPDV=f3TwampHistoryAvgOneWayR2SNegPDV, f3TwampSessionV2Entry=f3TwampSessionV2Entry, f3TwampStatsIndex=f3TwampStatsIndex, f3TwampSessionSenderStopTimeType=f3TwampSessionSenderStopTimeType, f3TwampIpInterfaceMtu=f3TwampIpInterfaceMtu, f3TwampStatisticSumOneWayR2SPosPDV=f3TwampStatisticSumOneWayR2SPosPDV, f3TwampSessionInnerVlanId=f3TwampSessionInnerVlanId, f3TwampHistoryDataNumOneWayS2RPD=f3TwampHistoryDataNumOneWayS2RPD, f3TwampStatisticS2RSyncErrs=f3TwampStatisticS2RSyncErrs, f3TwampHistoryDataR2SPkts=f3TwampHistoryDataR2SPkts, f3TwampSessionOuterVlanEtherType=f3TwampSessionOuterVlanEtherType, f3TwampHistoryDataNumOneWayR2SAbsPDV=f3TwampHistoryDataNumOneWayR2SAbsPDV, f3TwampSessionTable=f3TwampSessionTable, f3TwampStatsNumOneWayS2RPD=f3TwampStatsNumOneWayS2RPD, f3TwampHistoryMinTwoWayPD=f3TwampHistoryMinTwoWayPD, f3TwampControlClientSessionType=f3TwampControlClientSessionType, f3TwampHistoryDataSumOneWayR2SPD=f3TwampHistoryDataSumOneWayR2SPD, f3TwampDistStatsValid=f3TwampDistStatsValid, f3TwampHistoryDataOutOfSeqErrs=f3TwampHistoryDataOutOfSeqErrs, f3TwampServerStorageType=f3TwampServerStorageType, f3TwampDistStatsBinLower=f3TwampDistStatsBinLower, f3TwampStatisticNumOneWayS2RNegPDV=f3TwampStatisticNumOneWayS2RNegPDV, f3TwampStatisticAvgOneWayR2SNegPDV=f3TwampStatisticAvgOneWayR2SNegPDV, f3TwampSessionSenderIpAddress=f3TwampSessionSenderIpAddress, f3TwampSessionV2Action=f3TwampSessionV2Action, f3TwampGroups=f3TwampGroups, f3TwampStatsEntry=f3TwampStatsEntry, f3TwampControlClientStorageType=f3TwampControlClientStorageType, f3TwampServerSessionAgingTimeout=f3TwampServerSessionAgingTimeout, f3TwampHistoryNumOneWayS2RAbsPDV=f3TwampHistoryNumOneWayS2RAbsPDV, f3TwampHistoryDataSeqGaps=f3TwampHistoryDataSeqGaps, f3TwampHistoryDataSumOneWayS2RNegPDV=f3TwampHistoryDataSumOneWayS2RNegPDV, f3TwampSessionSenderPktSize=f3TwampSessionSenderPktSize, f3TwampHistoryAvgOneWayR2SPD=f3TwampHistoryAvgOneWayR2SPD, f3TwampSessionReflectorRowStatus=f3TwampSessionReflectorRowStatus, f3TwampSessionInnerVlanEnabled=f3TwampSessionInnerVlanEnabled, f3TwampSessionReflectorStorageType=f3TwampSessionReflectorStorageType, f3TwampSessionSenderHistoryInterval=f3TwampSessionSenderHistoryInterval, f3TwampStatsAvgOneWayS2RPD=f3TwampStatsAvgOneWayS2RPD, f3TwampStatsSeqGaps=f3TwampStatsSeqGaps, f3TwampControlClientOperationalState=f3TwampControlClientOperationalState, f3TwampStatisticSumOneWayR2SNegPDV=f3TwampStatisticSumOneWayR2SNegPDV, f3TwampHistoryMinOneWayR2SAbsPDV=f3TwampHistoryMinOneWayR2SAbsPDV, f3TwampServerSessionReflectorIndex=f3TwampServerSessionReflectorIndex, f3TwampStatisticMinTwoWayPD=f3TwampStatisticMinTwoWayPD, f3TwampSessionSenderIpMode=f3TwampSessionSenderIpMode, f3TwampHistorySumOneWayR2SNegPDV=f3TwampHistorySumOneWayR2SNegPDV, f3TwampHistoryNumOneWayR2SAbsPDV=f3TwampHistoryNumOneWayR2SAbsPDV, f3TwampStatsSumOneWayR2SPD=f3TwampStatsSumOneWayR2SPD, f3TwampHistoryDataR2SSyncErrs=f3TwampHistoryDataR2SSyncErrs, f3TwampHistoryS2RLostPkts=f3TwampHistoryS2RLostPkts, f3TwampHistoryNumOneWayS2RPosPDV=f3TwampHistoryNumOneWayS2RPosPDV, f3TwampStatisticNumOneWayS2RPD=f3TwampStatisticNumOneWayS2RPD, f3TwampHistoryDataAvgOneWayS2RNegPDV=f3TwampHistoryDataAvgOneWayS2RNegPDV, f3TwampDistHistoryValid=f3TwampDistHistoryValid, TwampPmIntervalType=TwampPmIntervalType, f3TwampCounterObjects=f3TwampCounterObjects, f3TwampSessionSenderInnerVlanPriority=f3TwampSessionSenderInnerVlanPriority, f3TwampServerGroup=f3TwampServerGroup, twampSessionSenderThresholdCrossingAlert=twampSessionSenderThresholdCrossingAlert, f3TwampSessionReflectorUdpPort=f3TwampSessionReflectorUdpPort, f3TwampDistHistoryTable=f3TwampDistHistoryTable, f3TwampSessionSenderInnerVlanEnabled=f3TwampSessionSenderInnerVlanEnabled, f3TwampStatsMinOneWayR2SPD=f3TwampStatsMinOneWayR2SPD, f3TwampStatsThresholdAbsValueHi=f3TwampStatsThresholdAbsValueHi, f3TwampHistoryDataSumOneWayS2RPosPDV=f3TwampHistoryDataSumOneWayS2RPosPDV, f3TwampSessionSenderSecondaryState=f3TwampSessionSenderSecondaryState, TwampStartTimeType=TwampStartTimeType, f3TwampDistHistoryBinIndex=f3TwampDistHistoryBinIndex, f3TwampHistoryDataSumOfSqOneWayS2RAbsPDV=f3TwampHistoryDataSumOfSqOneWayS2RAbsPDV, f3TwampHistoryDataAvgOneWayS2RPosPDV=f3TwampHistoryDataAvgOneWayS2RPosPDV, f3TwampStatsMinOneWayS2RPD=f3TwampStatsMinOneWayS2RPD, f3TwampStatsNumOneWayS2RPosPDV=f3TwampStatsNumOneWayS2RPosPDV, f3TwampDistHistoryEntry=f3TwampDistHistoryEntry, f3TwampHistoryDataMaxOneWayS2RNegPDV=f3TwampHistoryDataMaxOneWayS2RNegPDV, f3TwampDistStatsNumBins=f3TwampDistStatsNumBins, f3TwampSessionReflectorTable=f3TwampSessionReflectorTable, f3TwampStatisticSumOfSqOneWayS2RAbsPDV=f3TwampStatisticSumOfSqOneWayS2RAbsPDV, f3TwampStatsAvgOneWayR2SPosPDV=f3TwampStatsAvgOneWayR2SPosPDV, f3TwampHistoryDataMinOneWayR2SPD=f3TwampHistoryDataMinOneWayR2SPD, f3TwampHistoryDataMaxOneWayR2SNegPDV=f3TwampHistoryDataMaxOneWayR2SNegPDV, f3TwampHistoryDataNumOneWayS2RAbsPDV=f3TwampHistoryDataNumOneWayS2RAbsPDV, f3TwampSessionAction=f3TwampSessionAction, TwampServerStatus=TwampServerStatus, f3TwampStatisticMinOneWayR2SAbsPDV=f3TwampStatisticMinOneWayR2SAbsPDV, TwampClientConnStatus=TwampClientConnStatus, f3TwampStatsNumOneWayR2SAbsPDV=f3TwampStatsNumOneWayR2SAbsPDV, f3TwampHistoryAvgOneWayS2RPosPDV=f3TwampHistoryAvgOneWayS2RPosPDV, f3TwampStatsMaxOneWayS2RPosPDV=f3TwampStatsMaxOneWayS2RPosPDV, f3TwampDistStatsGTMax=f3TwampDistStatsGTMax, f3TwampServerSessionReflector=f3TwampServerSessionReflector, f3TwampSessionV2InnerVlanEnabled=f3TwampSessionV2InnerVlanEnabled, f3TwampSessionSenderOuterVlanEtherType=f3TwampSessionSenderOuterVlanEtherType, f3TwampStatisticSumOfSqOneWayR2SNegPDV=f3TwampStatisticSumOfSqOneWayR2SNegPDV, f3TwampHistoryMinOneWayS2RPD=f3TwampHistoryMinOneWayS2RPD, f3TwampStatsAvgOneWayS2RNegPDV=f3TwampStatsAvgOneWayS2RNegPDV, f3TwampStatisticSumOfSqOneWayS2RPosPDV=f3TwampStatisticSumOfSqOneWayS2RPosPDV, f3TwampIpInterfaceStorageType=f3TwampIpInterfaceStorageType, f3TwampStatisticMaxOneWayR2SPosPDV=f3TwampStatisticMaxOneWayR2SPosPDV, f3TwampStatsSumOfSqOneWayS2RPosPDV=f3TwampStatsSumOfSqOneWayS2RPosPDV, f3TwampServerSessionIdleTimeout=f3TwampServerSessionIdleTimeout, f3TwampSessionSenderAssocControlClient=f3TwampSessionSenderAssocControlClient, f3TwampIpInterfaceIpv6LinkLocalAddrPrefixLen=f3TwampIpInterfaceIpv6LinkLocalAddrPrefixLen, f3TwampSessionReflectorOperationalState=f3TwampSessionReflectorOperationalState, f3TwampStatsS2RPkts=f3TwampStatsS2RPkts, f3TwampStatisticSumOneWayS2RPD=f3TwampStatisticSumOneWayS2RPD, f3TwampStatsMaxOneWayR2SAbsPDV=f3TwampStatsMaxOneWayR2SAbsPDV, f3TwampStatisticMaxOneWayR2SNegPDV=f3TwampStatisticMaxOneWayR2SNegPDV, f3TwampMIB=f3TwampMIB, f3TwampStatsAvgOneWayR2SNegPDV=f3TwampStatsAvgOneWayR2SNegPDV, TwampSessionType=TwampSessionType, f3TwampHistoryDataAction=f3TwampHistoryDataAction, f3TwampSessionV2VlanEnabled=f3TwampSessionV2VlanEnabled, f3TwampDistStatsEntry=f3TwampDistStatsEntry, f3TwampIpInterfaceIpv4Mask=f3TwampIpInterfaceIpv4Mask, f3TwampServerEntry=f3TwampServerEntry, f3TwampHistoryAvgOneWayR2SAbsPDV=f3TwampHistoryAvgOneWayR2SAbsPDV, f3TwampHistoryDataMaxOneWayR2SPD=f3TwampHistoryDataMaxOneWayR2SPD, TwampStopTimeType=TwampStopTimeType, f3TwampHistoryDataIndex=f3TwampHistoryDataIndex, f3TwampControlClientSessionSenderTable=f3TwampControlClientSessionSenderTable, f3TwampHistoryMinOneWayR2SNegPDV=f3TwampHistoryMinOneWayR2SNegPDV, f3TwampStatsMinOneWayS2RAbsPDV=f3TwampStatsMinOneWayS2RAbsPDV, f3TwampStatsMaxOneWayR2SPosPDV=f3TwampStatsMaxOneWayR2SPosPDV, f3TwampHistorySumOneWayS2RPD=f3TwampHistorySumOneWayS2RPD, f3TwampControlClientSessionSenderGroup=f3TwampControlClientSessionSenderGroup, f3TwampStatsMinOneWayR2SNegPDV=f3TwampStatsMinOneWayR2SNegPDV, f3TwampStatsSumOneWayS2RPD=f3TwampStatsSumOneWayS2RPD, f3TwampSessionSenderPktSchedTimeInterval=f3TwampSessionSenderPktSchedTimeInterval, f3TwampHistoryDataSumOfSqOneWayR2SAbsPDV=f3TwampHistoryDataSumOfSqOneWayR2SAbsPDV, f3TwampHistoryDataMaxOneWayR2SPosPDV=f3TwampHistoryDataMaxOneWayR2SPosPDV, f3TwampIpInterfaceIpMode=f3TwampIpInterfaceIpMode, f3TwampStatsNumOneWayR2SNegPDV=f3TwampStatsNumOneWayR2SNegPDV, f3TwampStatisticR2SPkts=f3TwampStatisticR2SPkts, f3TwampStatisticR2SSyncErrs=f3TwampStatisticR2SSyncErrs, f3TwampSessionSenderNumPkts=f3TwampSessionSenderNumPkts, f3TwampSessionReflectorUserCreated=f3TwampSessionReflectorUserCreated, f3TwampHistorySumOneWayS2RNegPDV=f3TwampHistorySumOneWayS2RNegPDV, f3TwampStatisticAvgOneWayS2RPD=f3TwampStatisticAvgOneWayS2RPD, f3TwampStatisticSumOneWayS2RAbsPDV=f3TwampStatisticSumOneWayS2RAbsPDV, f3TwampStatsSumOfSqOneWayR2SAbsPDV=f3TwampStatsSumOfSqOneWayR2SAbsPDV, f3TwampHistoryDataSumOneWayR2SPosPDV=f3TwampHistoryDataSumOneWayR2SPosPDV, f3TwampSessionSenderTable=f3TwampSessionSenderTable, f3TwampStatsSumOneWayR2SPosPDV=f3TwampStatsSumOneWayR2SPosPDV, f3TwampStatisticS2RPkts=f3TwampStatisticS2RPkts, f3TwampStatisticS2RLostPkts=f3TwampStatisticS2RLostPkts, f3TwampDistHistoryTime=f3TwampDistHistoryTime, f3TwampSessionReflectorEntry=f3TwampSessionReflectorEntry, f3TwampServerSecondaryState=f3TwampServerSecondaryState, f3TwampHistoryTable=f3TwampHistoryTable, f3TwampHistoryR2SPkts=f3TwampHistoryR2SPkts, f3TwampStatisticNumTwoWayPD=f3TwampStatisticNumTwoWayPD, f3TwampHistoryNumOneWayR2SPosPDV=f3TwampHistoryNumOneWayR2SPosPDV, f3TwampDistHistoryBinUpper=f3TwampDistHistoryBinUpper, f3TwampCompliance=f3TwampCompliance, f3TwampStatisticNumOneWayR2SPosPDV=f3TwampStatisticNumOneWayR2SPosPDV, f3TwampDistStatsConfigTable=f3TwampDistStatsConfigTable, f3TwampSessionSenderDscpValue=f3TwampSessionSenderDscpValue, f3TwampStatsAction=f3TwampStatsAction, f3TwampStatsMinOneWayS2RPosPDV=f3TwampStatsMinOneWayS2RPosPDV, f3TwampHistoryDataAvgOneWayS2RAbsPDV=f3TwampHistoryDataAvgOneWayS2RAbsPDV, f3TwampSessionReflectorUseSenderSeqNum=f3TwampSessionReflectorUseSenderSeqNum, f3TwampHistoryDataMinOneWayR2SAbsPDV=f3TwampHistoryDataMinOneWayR2SAbsPDV, f3TwampStatsTime=f3TwampStatsTime, f3TwampStatisticSumOneWayS2RPosPDV=f3TwampStatisticSumOneWayS2RPosPDV, f3TwampHistoryDataNumOneWayS2RPosPDV=f3TwampHistoryDataNumOneWayS2RPosPDV, f3TwampHistoryNumOneWayS2RNegPDV=f3TwampHistoryNumOneWayS2RNegPDV, f3TwampDistStatsTime=f3TwampDistStatsTime, f3TwampHistoryMaxOneWayS2RNegPDV=f3TwampHistoryMaxOneWayS2RNegPDV, f3TwampHistoryR2SLostPkts=f3TwampHistoryR2SLostPkts, f3TwampSessionSenderOperationalState=f3TwampSessionSenderOperationalState, f3TwampSessionSenderEntry=f3TwampSessionSenderEntry, f3TwampSessionSenderDistHistoryBins=f3TwampSessionSenderDistHistoryBins, f3TwampStatsThresholdAbsValueLo=f3TwampStatsThresholdAbsValueLo, f3TwampStatsAvgOneWayS2RPosPDV=f3TwampStatsAvgOneWayS2RPosPDV, f3TwampControlClientSessionSender=f3TwampControlClientSessionSender, f3TwampHistorySumOfSqOneWayS2RPosPDV=f3TwampHistorySumOfSqOneWayS2RPosPDV, f3TwampSessionSenderHistoryBins=f3TwampSessionSenderHistoryBins, f3TwampSessionSsUdpPort=f3TwampSessionSsUdpPort)
mibBuilder.exportSymbols("F3-TWAMP-MIB", f3TwampHistoryMinOneWayR2SPosPDV=f3TwampHistoryMinOneWayR2SPosPDV, f3TwampStatsSumOfSqOneWayR2SPD=f3TwampStatsSumOfSqOneWayR2SPD, f3TwampStatisticNumOneWayS2RPosPDV=f3TwampStatisticNumOneWayS2RPosPDV, f3TwampHistoryDataSumTwoWayPD=f3TwampHistoryDataSumTwoWayPD, f3TwampIpInterfaceTable=f3TwampIpInterfaceTable, f3TwampStatsThresholdTable=f3TwampStatsThresholdTable, f3TwampSessionV2OuterVlanPriority=f3TwampSessionV2OuterVlanPriority, f3TwampHistoryDataMaxOneWayS2RPosPDV=f3TwampHistoryDataMaxOneWayS2RPosPDV, f3TwampStatisticMinOneWayR2SNegPDV=f3TwampStatisticMinOneWayR2SNegPDV, f3TwampStatsMaxOneWayS2RNegPDV=f3TwampStatsMaxOneWayS2RNegPDV, f3TwampSessionOuterVlanId=f3TwampSessionOuterVlanId, f3TwampStatisticR2SLostPkts=f3TwampStatisticR2SLostPkts, f3TwampControlClientAction=f3TwampControlClientAction, f3TwampHistoryAvgOneWayS2RAbsPDV=f3TwampHistoryAvgOneWayS2RAbsPDV, f3TwampStatsMaxOneWayS2RPD=f3TwampStatsMaxOneWayS2RPD, PYSNMP_MODULE_ID=f3TwampMIB, f3TwampStatsMinOneWayR2SPosPDV=f3TwampStatsMinOneWayR2SPosPDV, f3TwampStatisticMaxOneWayS2RNegPDV=f3TwampStatisticMaxOneWayS2RNegPDV, f3TwampSessionSenderSrUdpPort=f3TwampSessionSenderSrUdpPort, f3TwampHistoryMaxOneWayR2SPosPDV=f3TwampHistoryMaxOneWayR2SPosPDV, f3TwampSessionV2InnerVlanPriority=f3TwampSessionV2InnerVlanPriority, f3TwampNotifications=f3TwampNotifications, f3TwampStatisticSumOfSqOneWayS2RPD=f3TwampStatisticSumOfSqOneWayS2RPD, f3TwampSessionSenderSrIpv4Address=f3TwampSessionSenderSrIpv4Address, f3TwampSessionV2Table=f3TwampSessionV2Table, f3TwampSessionSenderTestPattern=f3TwampSessionSenderTestPattern, f3TwampSessionSsIpv4Address=f3TwampSessionSsIpv4Address, f3TwampStatsSumOfSqOneWayS2RNegPDV=f3TwampStatsSumOfSqOneWayS2RNegPDV, f3TwampIpInterfaceIpv6LinkLocalAddr=f3TwampIpInterfaceIpv6LinkLocalAddr, f3TwampHistorySumOfSqOneWayS2RAbsPDV=f3TwampHistorySumOfSqOneWayS2RAbsPDV, f3TwampStatisticMaxOneWayR2SPD=f3TwampStatisticMaxOneWayR2SPD, f3TwampHistorySumOneWayR2SAbsPDV=f3TwampHistorySumOneWayR2SAbsPDV, f3TwampStatsAvgTwoWayPD=f3TwampStatsAvgTwoWayPD, f3TwampHistoryDataSumOfSqOneWayS2RPosPDV=f3TwampHistoryDataSumOfSqOneWayS2RPosPDV, f3TwampHistorySumOfSqOneWayS2RNegPDV=f3TwampHistorySumOfSqOneWayS2RNegPDV, f3TwampStatisticUdpChecksumFailures=f3TwampStatisticUdpChecksumFailures, f3TwampConformance=f3TwampConformance, f3TwampStatisticSumOfSqTwoWayPD=f3TwampStatisticSumOfSqTwoWayPD, f3TwampHistoryDataS2RLostPkts=f3TwampHistoryDataS2RLostPkts, f3TwampHistorySumOfSqTwoWayPD=f3TwampHistorySumOfSqTwoWayPD, TwampSessionSenderStatus=TwampSessionSenderStatus, f3TwampSessionSenderRespTimeout=f3TwampSessionSenderRespTimeout, f3TwampDistHistoryAction=f3TwampDistHistoryAction, f3TwampSessionV2Group=f3TwampSessionV2Group, f3TwampHistoryDataSumOneWayS2RAbsPDV=f3TwampHistoryDataSumOneWayS2RAbsPDV, TwampPktSchedType=TwampPktSchedType, f3TwampHistoryTime=f3TwampHistoryTime, f3TwampStatisticMaxOneWayR2SAbsPDV=f3TwampStatisticMaxOneWayR2SAbsPDV, f3TwampHistoryDataMinOneWayS2RPD=f3TwampHistoryDataMinOneWayS2RPD, TwampSessionStatus=TwampSessionStatus, f3TwampHistorySumOneWayS2RAbsPDV=f3TwampHistorySumOneWayS2RAbsPDV, f3TwampSessionOuterVlanPriority=f3TwampSessionOuterVlanPriority, f3TwampStatisticNumOneWayR2SAbsPDV=f3TwampStatisticNumOneWayR2SAbsPDV, f3TwampStatisticValid=f3TwampStatisticValid, f3TwampStatsTable=f3TwampStatsTable, f3TwampHistoryMaxOneWayS2RPD=f3TwampHistoryMaxOneWayS2RPD, f3TwampHistorySumOneWayS2RPosPDV=f3TwampHistorySumOneWayS2RPosPDV, f3TwampHistoryAction=f3TwampHistoryAction, f3TwampHistoryDataNumOneWayS2RNegPDV=f3TwampHistoryDataNumOneWayS2RNegPDV, f3TwampStatisticSumOfSqOneWayS2RNegPDV=f3TwampStatisticSumOfSqOneWayS2RNegPDV, f3TwampStatisticSumOneWayR2SPD=f3TwampStatisticSumOneWayR2SPD, f3TwampDistStatsConfigNumBins=f3TwampDistStatsConfigNumBins, f3TwampStatsSumOfSqOneWayR2SPosPDV=f3TwampStatsSumOfSqOneWayR2SPosPDV, f3TwampStatsSumOneWayS2RPosPDV=f3TwampStatsSumOneWayS2RPosPDV, f3TwampStatisticAction=f3TwampStatisticAction, f3TwampSessionSenderOuterVlanId=f3TwampSessionSenderOuterVlanId, f3TwampHistoryEntry=f3TwampHistoryEntry, f3TwampHistoryDataTime=f3TwampHistoryDataTime, f3TwampSessionReflectorAdminState=f3TwampSessionReflectorAdminState, f3TwampIpInterfaceIpv6Addr=f3TwampIpInterfaceIpv6Addr, f3TwampStatsSumOfSqTwoWayPD=f3TwampStatsSumOfSqTwoWayPD, f3TwampHistoryDataSumOfSqOneWayR2SNegPDV=f3TwampHistoryDataSumOfSqOneWayR2SNegPDV, f3TwampDistStatsAction=f3TwampDistStatsAction, f3TwampIpInterfaceRowStatus=f3TwampIpInterfaceRowStatus, f3TwampStatsOutOfSeqErrs=f3TwampStatsOutOfSeqErrs, f3TwampStatsMinOneWayR2SAbsPDV=f3TwampStatsMinOneWayR2SAbsPDV, TwampServerAction=TwampServerAction, f3TwampSessionSenderInnerVlanEtherType=f3TwampSessionSenderInnerVlanEtherType, f3TwampStatisticAvgOneWayR2SPosPDV=f3TwampStatisticAvgOneWayR2SPosPDV, f3TwampHistoryDataMaxOneWayS2RAbsPDV=f3TwampHistoryDataMaxOneWayS2RAbsPDV, f3TwampDistHistoryGTMax=f3TwampDistHistoryGTMax, f3TwampHistoryDataAvgOneWayR2SNegPDV=f3TwampHistoryDataAvgOneWayR2SNegPDV, TwampHistoryIntervalType=TwampHistoryIntervalType, TwampTestPattern=TwampTestPattern, f3TwampHistoryDataNumTwoWayPD=f3TwampHistoryDataNumTwoWayPD, f3TwampSessionSenderVlanEnabled=f3TwampSessionSenderVlanEnabled, f3TwampHistoryDataAvgTwoWayPD=f3TwampHistoryDataAvgTwoWayPD, f3TwampSessionSenderInnerVlanId=f3TwampSessionSenderInnerVlanId, f3TwampHistoryDataNumOneWayR2SNegPDV=f3TwampHistoryDataNumOneWayR2SNegPDV, f3TwampServerStatus=f3TwampServerStatus, f3TwampControlClientRowStatus=f3TwampControlClientRowStatus, f3TwampStatisticNumOneWayR2SPD=f3TwampStatisticNumOneWayR2SPD, f3TwampHistoryDataSumOneWayR2SAbsPDV=f3TwampHistoryDataSumOneWayR2SAbsPDV, f3TwampIpInterfaceIpv4Address=f3TwampIpInterfaceIpv4Address, f3TwampDistHistoryIndex=f3TwampDistHistoryIndex, f3TwampStatisticSumOfSqOneWayR2SAbsPDV=f3TwampStatisticSumOfSqOneWayR2SAbsPDV, f3TwampStatsMaxOneWayR2SNegPDV=f3TwampStatsMaxOneWayR2SNegPDV, f3TwampSessionSenderStartDate=f3TwampSessionSenderStartDate, f3TwampHistoryOutOfSeqErrs=f3TwampHistoryOutOfSeqErrs, f3TwampStatsMaxTwoWayPD=f3TwampStatsMaxTwoWayPD, f3TwampStatisticTime=f3TwampStatisticTime, f3TwampSessionSenderDistHistoryInterval=f3TwampSessionSenderDistHistoryInterval, f3TwampHistorySumOfSqOneWayR2SPosPDV=f3TwampHistorySumOfSqOneWayR2SPosPDV, f3TwampStatsMinTwoWayPD=f3TwampStatsMinTwoWayPD, f3TwampStatsAvgOneWayR2SPD=f3TwampStatsAvgOneWayR2SPD, f3TwampDistHistoryBinLower=f3TwampDistHistoryBinLower, f3TwampHistoryMaxTwoWayPD=f3TwampHistoryMaxTwoWayPD, f3TwampStatisticMaxTwoWayPD=f3TwampStatisticMaxTwoWayPD, f3TwampStatsMinOneWayS2RNegPDV=f3TwampStatsMinOneWayS2RNegPDV, f3TwampServerSessionReflectorEntry=f3TwampServerSessionReflectorEntry, f3TwampSessionSenderUdpPort=f3TwampSessionSenderUdpPort, f3TwampControlClientEntry=f3TwampControlClientEntry, TwampDistStatsType=TwampDistStatsType, f3TwampControlClientSessionSenderIndex=f3TwampControlClientSessionSenderIndex, f3TwampSessionReflectorStatus=f3TwampSessionReflectorStatus, f3TwampCompliances=f3TwampCompliances, f3TwampStatsAvgOneWayR2SAbsPDV=f3TwampStatsAvgOneWayR2SAbsPDV, f3TwampHistoryDataNumOneWayR2SPD=f3TwampHistoryDataNumOneWayR2SPD, f3TwampStatsS2RSyncErrs=f3TwampStatsS2RSyncErrs, f3TwampSessionV2DscpValue=f3TwampSessionV2DscpValue, f3TwampControlClientStatus=f3TwampControlClientStatus, f3TwampHistoryDataMaxOneWayS2RPD=f3TwampHistoryDataMaxOneWayS2RPD, f3TwampThresholdGroup=f3TwampThresholdGroup, f3TwampStatisticNumOneWayR2SNegPDV=f3TwampStatisticNumOneWayR2SNegPDV, f3TwampSessionV2SequenceNumber=f3TwampSessionV2SequenceNumber, f3TwampStatsThresholdVariable=f3TwampStatsThresholdVariable, f3TwampStatsNumOneWayS2RNegPDV=f3TwampStatsNumOneWayS2RNegPDV, f3TwampHistoryDataMinOneWayS2RNegPDV=f3TwampHistoryDataMinOneWayS2RNegPDV, f3TwampSessionSenderAdminState=f3TwampSessionSenderAdminState, f3TwampSessionSenderSrIpAddress=f3TwampSessionSenderSrIpAddress, f3TwampStatsNumOneWayR2SPosPDV=f3TwampStatsNumOneWayR2SPosPDV, f3TwampIpInterfaceIpv6PrefixLen=f3TwampIpInterfaceIpv6PrefixLen, f3TwampSessionVlanEnabled=f3TwampSessionVlanEnabled, f3TwampStatisticAvgOneWayR2SAbsPDV=f3TwampStatisticAvgOneWayR2SAbsPDV, f3TwampDistStatsBinUpper=f3TwampDistStatsBinUpper, f3TwampSessionV2SsIpAddress=f3TwampSessionV2SsIpAddress, f3TwampDistHistoryNumBins=f3TwampDistHistoryNumBins, f3TwampHistoryDataEntry=f3TwampHistoryDataEntry, f3TwampSessionSequenceNumber=f3TwampSessionSequenceNumber, f3TwampDistributionStatisticsGroup=f3TwampDistributionStatisticsGroup, f3TwampHistoryAvgOneWayR2SPosPDV=f3TwampHistoryAvgOneWayR2SPosPDV, f3TwampStatisticEntry=f3TwampStatisticEntry, f3TwampSessionSenderGroup=f3TwampSessionSenderGroup, f3TwampDistStatsConfigMinVal=f3TwampDistStatsConfigMinVal, f3TwampSessionSenderStorageType=f3TwampSessionSenderStorageType, f3TwampDistStatsBinIndex=f3TwampDistStatsBinIndex, f3TwampHistoryIndex=f3TwampHistoryIndex, f3TwampSessionReflectorAlias=f3TwampSessionReflectorAlias, TwampServerConnStatus=TwampServerConnStatus, f3TwampStatsThresholdMonValue=f3TwampStatsThresholdMonValue, f3TwampSessionSenderSeqNumber=f3TwampSessionSenderSeqNumber, f3TwampStatisticMinOneWayR2SPosPDV=f3TwampStatisticMinOneWayR2SPosPDV, f3TwampStatisticAvgOneWayS2RNegPDV=f3TwampStatisticAvgOneWayS2RNegPDV, f3TwampStatisticSumOfSqOneWayR2SPD=f3TwampStatisticSumOfSqOneWayR2SPD, f3TwampSessionSenderIndex=f3TwampSessionSenderIndex, f3TwampHistoryDataSumOfSqOneWayS2RNegPDV=f3TwampHistoryDataSumOfSqOneWayS2RNegPDV, f3TwampServerSessionReflectorTable=f3TwampServerSessionReflectorTable, f3TwampControlClientActionObject=f3TwampControlClientActionObject, f3TwampStatsSumOfSqOneWayS2RPD=f3TwampStatsSumOfSqOneWayS2RPD, f3TwampSessionInnerVlanPriority=f3TwampSessionInnerVlanPriority, f3TwampControlClientAdminState=f3TwampControlClientAdminState, f3TwampHistoryS2RSyncErrs=f3TwampHistoryS2RSyncErrs, f3TwampHistoryNumOneWayR2SNegPDV=f3TwampHistoryNumOneWayR2SNegPDV, f3TwampControlClientSessionSenderEntry=f3TwampControlClientSessionSenderEntry, f3TwampControlClientGroup=f3TwampControlClientGroup, f3TwampHistorySumOfSqOneWayR2SNegPDV=f3TwampHistorySumOfSqOneWayR2SNegPDV, f3TwampStatsSumOfSqOneWayR2SNegPDV=f3TwampStatsSumOfSqOneWayR2SNegPDV, f3TwampHistoryDataMinOneWayR2SNegPDV=f3TwampHistoryDataMinOneWayR2SNegPDV, f3TwampStatsNumOneWayR2SPD=f3TwampStatsNumOneWayR2SPD, f3TwampHistoryDataUdpChecksumFailures=f3TwampHistoryDataUdpChecksumFailures, f3TwampHistoryMinOneWayS2RPosPDV=f3TwampHistoryMinOneWayS2RPosPDV, f3TwampDistStatsConfigMaxVal=f3TwampDistStatsConfigMaxVal, f3TwampHistoryMaxOneWayS2RPosPDV=f3TwampHistoryMaxOneWayS2RPosPDV, f3TwampStatsR2SPkts=f3TwampStatsR2SPkts, TwampControlClientStatus=TwampControlClientStatus, f3TwampSessionReflectorIpInterface=f3TwampSessionReflectorIpInterface, f3TwampServerAction=f3TwampServerAction, f3TwampServerAlias=f3TwampServerAlias, f3TwampHistoryDataSumOneWayS2RPD=f3TwampHistoryDataSumOneWayS2RPD, f3TwampSessionGroup=f3TwampSessionGroup, f3TwampServerTable=f3TwampServerTable, f3TwampHistoryMaxOneWayR2SNegPDV=f3TwampHistoryMaxOneWayR2SNegPDV, f3TwampDistHistoryLTMin=f3TwampDistHistoryLTMin, f3TwampHistoryAvgOneWayS2RPD=f3TwampHistoryAvgOneWayS2RPD, f3TwampHistoryDataR2SLostPkts=f3TwampHistoryDataR2SLostPkts, f3TwampStatisticTable=f3TwampStatisticTable, f3TwampHistoryMaxOneWayR2SPD=f3TwampHistoryMaxOneWayR2SPD, f3TwampHistoryNumOneWayR2SPD=f3TwampHistoryNumOneWayR2SPD, f3TwampStatisticMinOneWayS2RAbsPDV=f3TwampStatisticMinOneWayS2RAbsPDV, f3TwampSessionSenderRowStatus=f3TwampSessionSenderRowStatus, f3TwampStatsSumOneWayS2RNegPDV=f3TwampStatsSumOneWayS2RNegPDV, f3TwampSessionSenderValidateErrorEstimate=f3TwampSessionSenderValidateErrorEstimate, f3TwampStatisticMaxOneWayS2RAbsPDV=f3TwampStatisticMaxOneWayS2RAbsPDV, f3TwampSessionSenderOuterVlanPriority=f3TwampSessionSenderOuterVlanPriority, f3TwampHistoryR2SSyncErrs=f3TwampHistoryR2SSyncErrs, f3TwampIpInterfacePort=f3TwampIpInterfacePort, f3TwampHistoryDataSumOfSqOneWayS2RPD=f3TwampHistoryDataSumOfSqOneWayS2RPD, f3TwampHistoryMaxOneWayS2RAbsPDV=f3TwampHistoryMaxOneWayS2RAbsPDV, f3TwampHistoryNumOneWayS2RPD=f3TwampHistoryNumOneWayS2RPD, f3TwampStatisticAvgOneWayS2RAbsPDV=f3TwampStatisticAvgOneWayS2RAbsPDV, f3TwampHistorySumOneWayR2SPD=f3TwampHistorySumOneWayR2SPD, f3TwampStatsNumTwoWayPD=f3TwampStatsNumTwoWayPD, f3TwampStatisticMinOneWayR2SPD=f3TwampStatisticMinOneWayR2SPD, f3TwampHistoryDataValid=f3TwampHistoryDataValid, f3TwampHistoryAvgOneWayS2RNegPDV=f3TwampHistoryAvgOneWayS2RNegPDV, f3TwampSessionReflectorSecondaryState=f3TwampSessionReflectorSecondaryState, f3TwampStatsSumOneWayR2SAbsPDV=f3TwampStatsSumOneWayR2SAbsPDV, f3TwampHistoryDataSumOfSqOneWayR2SPD=f3TwampHistoryDataSumOfSqOneWayR2SPD, f3TwampServerAdminState=f3TwampServerAdminState, f3TwampHistoryS2RPkts=f3TwampHistoryS2RPkts, f3TwampHistoryDataS2RSyncErrs=f3TwampHistoryDataS2RSyncErrs, f3TwampHistorySumTwoWayPD=f3TwampHistorySumTwoWayPD, f3TwampSessionReflectorIndex=f3TwampSessionReflectorIndex, f3TwampSessionV2SsUdpPort=f3TwampSessionV2SsUdpPort, f3TwampServerIndex=f3TwampServerIndex, f3TwampControlClientSecondaryState=f3TwampControlClientSecondaryState, f3TwampControlClientPort=f3TwampControlClientPort, f3TwampHistorySumOfSqOneWayR2SAbsPDV=f3TwampHistorySumOfSqOneWayR2SAbsPDV, f3TwampHistoryDataAvgOneWayR2SAbsPDV=f3TwampHistoryDataAvgOneWayR2SAbsPDV, f3TwampStatisticMinOneWayS2RPD=f3TwampStatisticMinOneWayS2RPD, f3TwampSessionV2InnerVlanEtherType=f3TwampSessionV2InnerVlanEtherType, f3TwampStatisticSumOneWayS2RNegPDV=f3TwampStatisticSumOneWayS2RNegPDV, f3TwampHistoryMinOneWayS2RNegPDV=f3TwampHistoryMinOneWayS2RNegPDV, f3TwampHistoryDataMinOneWayS2RAbsPDV=f3TwampHistoryDataMinOneWayS2RAbsPDV, f3TwampActionObjects=f3TwampActionObjects, f3TwampHistorySeqGaps=f3TwampHistorySeqGaps, f3TwampHistoryMinOneWayS2RAbsPDV=f3TwampHistoryMinOneWayS2RAbsPDV, f3TwampHistoryDataTable=f3TwampHistoryDataTable, f3TwampHistoryDataMinTwoWayPD=f3TwampHistoryDataMinTwoWayPD, f3TwampDistHistoryBinTable=f3TwampDistHistoryBinTable, f3TwampSessionV2OuterVlanEtherType=f3TwampSessionV2OuterVlanEtherType, f3TwampHistoryDataSumOfSqOneWayR2SPosPDV=f3TwampHistoryDataSumOfSqOneWayR2SPosPDV, f3TwampStatsThresholdEntry=f3TwampStatsThresholdEntry, f3TwampHistoryNumTwoWayPD=f3TwampHistoryNumTwoWayPD, f3TwampStatisticSumOneWayR2SAbsPDV=f3TwampStatisticSumOneWayR2SAbsPDV, f3TwampDistStatsBinTable=f3TwampDistStatsBinTable, f3TwampStatisticsGroup=f3TwampStatisticsGroup, f3TwampDistStatsTable=f3TwampDistStatsTable, f3TwampHistoryDataS2RPkts=f3TwampHistoryDataS2RPkts, f3TwampStatsMaxOneWayR2SPD=f3TwampStatsMaxOneWayR2SPD, f3TwampDistStatsBinEntry=f3TwampDistStatsBinEntry, f3TwampHistoryAvgTwoWayPD=f3TwampHistoryAvgTwoWayPD, f3TwampStatisticOutOfSeqErrs=f3TwampStatisticOutOfSeqErrs)
