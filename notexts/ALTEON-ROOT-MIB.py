#
# PySNMP MIB module ALTEON-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/alteonos/ALTEON-ROOT-MIB
# Produced by pysmi-1.1.12 at Wed Sep 18 06:42:23 2024
# On host fv-az1780-151 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, enterprises, TimeTicks, Gauge32, ModuleIdentity, Counter32, Integer32, Unsigned32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "enterprises", "TimeTicks", "Gauge32", "ModuleIdentity", "Counter32", "Integer32", "Unsigned32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "iso", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alteon = MibIdentifier((1, 3, 6, 1, 4, 1, 1872))
registration2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1))
private_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2)).setLabel("private-mibs")
personalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3))
ics = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3, 1))
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1))
gs_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 2)).setLabel("gs-switch")
isd = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3))
switch_chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4)).setLabel("switch-chassis")
aws_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5)).setLabel("aws-switch")
chassis_8600 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1)).setLabel("chassis-8600")
wsm4Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1, 2))
platform = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 1))
sslOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 2))
firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 3))
contentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 4))
aceswitch110 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 1))
acedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 2))
aceswitch180 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 3))
acedirector2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 4))
aceswitch180e = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 5))
acedirector3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 6))
cachedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 7))
gs_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8)).setLabel("gs-switches")
aceswitch184 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 9))
acedirector4 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 10))
isd_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11)).setLabel("isd-reg")
webswitch_module = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 12)).setLabel("webswitch-module")
aws_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13)).setLabel("aws-switches")
alteonLinkOptimizer = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 14))
wsm_BladeCenter = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 15)).setLabel("wsm-BladeCenter")
alteonLinkOptimizer143 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 16))
alteonLinkOptimizer150 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 17))
ibm_BladeCenterL3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18)).setLabel("ibm-BladeCenterL3")
copperModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 1))
fiberModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 2))
aws2000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1)).setLabel("aws2000-switches")
aws3000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2)).setLabel("aws3000-switches")
aws2424 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 1))
aws2448 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 2))
aws2224 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 3))
aas2424s = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 4))
aas2208 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 5))
aas2216 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 6))
aws2424E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 7))
aas2424sE5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 8))
aas2208E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 9))
aas2216E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 10))
aws3408 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 1))
aws3416 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 2))
aws3408E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 3))
chas_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1)).setLabel("chas-switch")
chas_switch_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1)).setLabel("chas-switch-reg")
alteon708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1, 1))
chas_switch_comp_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2)).setLabel("chas-switch-comp-reg")
alteonACPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 1))
alteonDCPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 2))
alteonFan708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 3))
alteonModuleMP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 5))
alteonModuleSF = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 6))
alteonModuleFE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 7)).setLabel("alteonModuleFE-UTP")
alteonModuleGE_SX = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 8)).setLabel("alteonModuleGE-SX")
alteonModuleGE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 9)).setLabel("alteonModuleGE-UTP")
alteonContentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 1))
alteonSSLOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 2))
alteonPersonalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 3))
alteonFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 4))
alteonWSS = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 5))
mibBuilder.exportSymbols("ALTEON-ROOT-MIB", acedirector3=acedirector3, alteon=alteon, chassis_8600=chassis_8600, aceswitch180=aceswitch180, chas_switch_comp_reg=chas_switch_comp_reg, alteonACPowerSupply7xx=alteonACPowerSupply7xx, alteonPersonalContentCache=alteonPersonalContentCache, alteonFan708=alteonFan708, switch_chassis=switch_chassis, acedirector2=acedirector2, ibm_BladeCenterL3=ibm_BladeCenterL3, aws_switch=aws_switch, aws2424=aws2424, alteonModuleMP=alteonModuleMP, registration2=registration2, aws_switches=aws_switches, aceswitch110=aceswitch110, aws3000_switches=aws3000_switches, alteonLinkOptimizer=alteonLinkOptimizer, aws2424E5=aws2424E5, alteonModuleSF=alteonModuleSF, acedirector4=acedirector4, aws2224=aws2224, alteonContentDirector=alteonContentDirector, alteonSSLOffload=alteonSSLOffload, aceswitch184=aceswitch184, alteonModuleGE_SX=alteonModuleGE_SX, aws2000_switches=aws2000_switches, aas2424sE5=aas2424sE5, aas2208=aas2208, isd=isd, aws3416=aws3416, alteon708=alteon708, aas2424s=aas2424s, aws2448=aws2448, isd_reg=isd_reg, fiberModule=fiberModule, platform=platform, alteonLinkOptimizer150=alteonLinkOptimizer150, aws3408=aws3408, acedirector=acedirector, sslOffload=sslOffload, webswitch_module=webswitch_module, ics=ics, firewall=firewall, contentDirector=contentDirector, alteonModuleGE_UTP=alteonModuleGE_UTP, aas2208E5=aas2208E5, gs_switch=gs_switch, chas_switch=chas_switch, alteonLinkOptimizer143=alteonLinkOptimizer143, alteonModuleFE_UTP=alteonModuleFE_UTP, personalContentCache=personalContentCache, alteonWSS=alteonWSS, alteonFirewall=alteonFirewall, aws3408E5=aws3408E5, gs_switches=gs_switches, private_mibs=private_mibs, wsm4Traps=wsm4Traps, chas_switch_reg=chas_switch_reg, aceswitch180e=aceswitch180e, aas2216E5=aas2216E5, switch=switch, copperModule=copperModule, aas2216=aas2216, wsm_BladeCenter=wsm_BladeCenter, cachedirector=cachedirector, alteonDCPowerSupply7xx=alteonDCPowerSupply7xx)
