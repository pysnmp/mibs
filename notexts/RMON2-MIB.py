#
# PySNMP MIB module RMON2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/output/asn1/RMON2-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 11:54:28 2024
# On host fv-az1385-213 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
filterEntry, matrixControlEntry, historyControlEntry, statistics, etherStatsEntry, OwnerString, channelEntry, hosts, history, matrix, hostControlEntry, filter = mibBuilder.importSymbols("RMON-MIB", "filterEntry", "matrixControlEntry", "historyControlEntry", "statistics", "etherStatsEntry", "OwnerString", "channelEntry", "hosts", "history", "matrix", "hostControlEntry", "filter")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, IpAddress, Bits, Unsigned32, MibIdentifier, mib_2, ModuleIdentity, TimeTicks, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "IpAddress", "Bits", "Unsigned32", "MibIdentifier", "mib-2", "ModuleIdentity", "TimeTicks", "iso", "Gauge32")
TextualConvention, TimeStamp, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "RowStatus", "DisplayString")
ringStationControlEntry, tokenRingPStatsEntry, tokenRing, sourceRoutingStatsEntry, tokenRingMLStatsEntry = mibBuilder.importSymbols("TOKEN-RING-RMON-MIB", "ringStationControlEntry", "tokenRingPStatsEntry", "tokenRing", "sourceRoutingStatsEntry", "tokenRingMLStatsEntry")
rmon = ModuleIdentity((1, 3, 6, 1, 2, 1, 16))
if mibBuilder.loadTexts: rmon.setLastUpdated('9605270000Z')
if mibBuilder.loadTexts: rmon.setOrganization('IETF RMON MIB Working Group')
protocolDir = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 11))
protocolDist = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 12))
addressMap = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 13))
nlHost = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 14))
nlMatrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 15))
alHost = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 16))
alMatrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 17))
usrHistory = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 18))
probeConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 19))
rmonConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20))
class ZeroBasedCounter32(TextualConvention, Gauge32):
    status = 'current'

class LastCreateTime(TimeStamp):
    status = 'current'

class TimeFilter(TextualConvention, TimeTicks):
    status = 'current'

class DataSource(TextualConvention, ObjectIdentifier):
    status = 'current'

protocolDirLastChange = MibScalar((1, 3, 6, 1, 2, 1, 16, 11, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirLastChange.setStatus('current')
protocolDirTable = MibTable((1, 3, 6, 1, 2, 1, 16, 11, 2), )
if mibBuilder.loadTexts: protocolDirTable.setStatus('current')
protocolDirEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 11, 2, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDirID"), (0, "RMON2-MIB", "protocolDirParameters"))
if mibBuilder.loadTexts: protocolDirEntry.setStatus('current')
protocolDirID = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 1), OctetString())
if mibBuilder.loadTexts: protocolDirID.setStatus('current')
protocolDirParameters = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 2), OctetString())
if mibBuilder.loadTexts: protocolDirParameters.setStatus('current')
protocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirLocalIndex.setStatus('current')
protocolDirDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirDescr.setStatus('current')
protocolDirType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 5), Bits().clone(namedValues=NamedValues(("extensible", 0), ("addressRecognitionCapable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirType.setStatus('current')
protocolDirAddressMapConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirAddressMapConfig.setStatus('current')
protocolDirHostConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirHostConfig.setStatus('current')
protocolDirMatrixConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirMatrixConfig.setStatus('current')
protocolDirOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 9), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirOwner.setStatus('current')
protocolDirStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirStatus.setStatus('current')
protocolDistControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 12, 1), )
if mibBuilder.loadTexts: protocolDistControlTable.setStatus('current')
protocolDistControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 12, 1, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDistControlIndex"))
if mibBuilder.loadTexts: protocolDistControlEntry.setStatus('current')
protocolDistControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: protocolDistControlIndex.setStatus('current')
protocolDistControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlDataSource.setStatus('current')
protocolDistControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistControlDroppedFrames.setStatus('current')
protocolDistControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistControlCreateTime.setStatus('current')
protocolDistControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlOwner.setStatus('current')
protocolDistControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlStatus.setStatus('current')
protocolDistStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 12, 2), )
if mibBuilder.loadTexts: protocolDistStatsTable.setStatus('current')
protocolDistStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 12, 2, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDistControlIndex"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: protocolDistStatsEntry.setStatus('current')
protocolDistStatsPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsPkts.setStatus('current')
protocolDistStatsOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsOctets.setStatus('current')
addressMapInserts = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapInserts.setStatus('current')
addressMapDeletes = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapDeletes.setStatus('current')
addressMapMaxDesiredEntries = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: addressMapMaxDesiredEntries.setStatus('current')
addressMapControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 13, 4), )
if mibBuilder.loadTexts: addressMapControlTable.setStatus('current')
addressMapControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 13, 4, 1), ).setIndexNames((0, "RMON2-MIB", "addressMapControlIndex"))
if mibBuilder.loadTexts: addressMapControlEntry.setStatus('current')
addressMapControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: addressMapControlIndex.setStatus('current')
addressMapControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlDataSource.setStatus('current')
addressMapControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapControlDroppedFrames.setStatus('current')
addressMapControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 4), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlOwner.setStatus('current')
addressMapControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlStatus.setStatus('current')
addressMapTable = MibTable((1, 3, 6, 1, 2, 1, 16, 13, 5), )
if mibBuilder.loadTexts: addressMapTable.setStatus('current')
addressMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 13, 5, 1), ).setIndexNames((0, "RMON2-MIB", "addressMapTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "addressMapNetworkAddress"), (0, "RMON2-MIB", "addressMapSource"))
if mibBuilder.loadTexts: addressMapEntry.setStatus('current')
addressMapTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 1), TimeFilter())
if mibBuilder.loadTexts: addressMapTimeMark.setStatus('current')
addressMapNetworkAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 2), OctetString())
if mibBuilder.loadTexts: addressMapNetworkAddress.setStatus('current')
addressMapSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 3), ObjectIdentifier())
if mibBuilder.loadTexts: addressMapSource.setStatus('current')
addressMapPhysicalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapPhysicalAddress.setStatus('current')
addressMapLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapLastChange.setStatus('current')
hlHostControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 14, 1), )
if mibBuilder.loadTexts: hlHostControlTable.setStatus('current')
hlHostControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 14, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"))
if mibBuilder.loadTexts: hlHostControlEntry.setStatus('current')
hlHostControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hlHostControlIndex.setStatus('current')
hlHostControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlDataSource.setStatus('current')
hlHostControlNlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlDroppedFrames.setStatus('current')
hlHostControlNlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlInserts.setStatus('current')
hlHostControlNlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlDeletes.setStatus('current')
hlHostControlNlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlNlMaxDesiredEntries.setStatus('current')
hlHostControlAlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlDroppedFrames.setStatus('current')
hlHostControlAlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlInserts.setStatus('current')
hlHostControlAlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlDeletes.setStatus('current')
hlHostControlAlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlAlMaxDesiredEntries.setStatus('current')
hlHostControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlOwner.setStatus('current')
hlHostControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlStatus.setStatus('current')
nlHostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 14, 2), )
if mibBuilder.loadTexts: nlHostTable.setStatus('current')
nlHostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 14, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "nlHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"))
if mibBuilder.loadTexts: nlHostEntry.setStatus('current')
nlHostTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlHostTimeMark.setStatus('current')
nlHostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 2), OctetString())
if mibBuilder.loadTexts: nlHostAddress.setStatus('current')
nlHostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostInPkts.setStatus('current')
nlHostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutPkts.setStatus('current')
nlHostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostInOctets.setStatus('current')
nlHostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 6), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutOctets.setStatus('current')
nlHostOutMacNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutMacNonUnicastPkts.setStatus('current')
nlHostCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 8), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostCreateTime.setStatus('current')
hlMatrixControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 1), )
if mibBuilder.loadTexts: hlMatrixControlTable.setStatus('current')
hlMatrixControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"))
if mibBuilder.loadTexts: hlMatrixControlEntry.setStatus('current')
hlMatrixControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hlMatrixControlIndex.setStatus('current')
hlMatrixControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlDataSource.setStatus('current')
hlMatrixControlNlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlDroppedFrames.setStatus('current')
hlMatrixControlNlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlInserts.setStatus('current')
hlMatrixControlNlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlDeletes.setStatus('current')
hlMatrixControlNlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlNlMaxDesiredEntries.setStatus('current')
hlMatrixControlAlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlDroppedFrames.setStatus('current')
hlMatrixControlAlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlInserts.setStatus('current')
hlMatrixControlAlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlDeletes.setStatus('current')
hlMatrixControlAlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlAlMaxDesiredEntries.setStatus('current')
hlMatrixControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlOwner.setStatus('current')
hlMatrixControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlStatus.setStatus('current')
nlMatrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 2), )
if mibBuilder.loadTexts: nlMatrixSDTable.setStatus('current')
nlMatrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"))
if mibBuilder.loadTexts: nlMatrixSDEntry.setStatus('current')
nlMatrixSDTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlMatrixSDTimeMark.setStatus('current')
nlMatrixSDSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 2), OctetString())
if mibBuilder.loadTexts: nlMatrixSDSourceAddress.setStatus('current')
nlMatrixSDDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 3), OctetString())
if mibBuilder.loadTexts: nlMatrixSDDestAddress.setStatus('current')
nlMatrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDPkts.setStatus('current')
nlMatrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDOctets.setStatus('current')
nlMatrixSDCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDCreateTime.setStatus('current')
nlMatrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 3), )
if mibBuilder.loadTexts: nlMatrixDSTable.setStatus('current')
nlMatrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 3, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"))
if mibBuilder.loadTexts: nlMatrixDSEntry.setStatus('current')
nlMatrixDSTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlMatrixDSTimeMark.setStatus('current')
nlMatrixDSSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 2), OctetString())
if mibBuilder.loadTexts: nlMatrixDSSourceAddress.setStatus('current')
nlMatrixDSDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 3), OctetString())
if mibBuilder.loadTexts: nlMatrixDSDestAddress.setStatus('current')
nlMatrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSPkts.setStatus('current')
nlMatrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSOctets.setStatus('current')
nlMatrixDSCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSCreateTime.setStatus('current')
nlMatrixTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 4), )
if mibBuilder.loadTexts: nlMatrixTopNControlTable.setStatus('current')
nlMatrixTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 4, 1), ).setIndexNames((0, "RMON2-MIB", "nlMatrixTopNControlIndex"))
if mibBuilder.loadTexts: nlMatrixTopNControlEntry.setStatus('current')
nlMatrixTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nlMatrixTopNControlIndex.setStatus('current')
nlMatrixTopNControlMatrixIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlMatrixIndex.setStatus('current')
nlMatrixTopNControlRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nlMatrixTopNPkts", 1), ("nlMatrixTopNOctets", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlRateBase.setStatus('current')
nlMatrixTopNControlTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlTimeRemaining.setStatus('current')
nlMatrixTopNControlGeneratedReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlGeneratedReports.setStatus('current')
nlMatrixTopNControlDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlDuration.setStatus('current')
nlMatrixTopNControlRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlRequestedSize.setStatus('current')
nlMatrixTopNControlGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlGrantedSize.setStatus('current')
nlMatrixTopNControlStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlStartTime.setStatus('current')
nlMatrixTopNControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 10), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlOwner.setStatus('current')
nlMatrixTopNControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlStatus.setStatus('current')
nlMatrixTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 5), )
if mibBuilder.loadTexts: nlMatrixTopNTable.setStatus('current')
nlMatrixTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 5, 1), ).setIndexNames((0, "RMON2-MIB", "nlMatrixTopNControlIndex"), (0, "RMON2-MIB", "nlMatrixTopNIndex"))
if mibBuilder.loadTexts: nlMatrixTopNEntry.setStatus('current')
nlMatrixTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nlMatrixTopNIndex.setStatus('current')
nlMatrixTopNProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNProtocolDirLocalIndex.setStatus('current')
nlMatrixTopNSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNSourceAddress.setStatus('current')
nlMatrixTopNDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNDestAddress.setStatus('current')
nlMatrixTopNPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNPktRate.setStatus('current')
nlMatrixTopNReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNReversePktRate.setStatus('current')
nlMatrixTopNOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNOctetRate.setStatus('current')
nlMatrixTopNReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNReverseOctetRate.setStatus('current')
alHostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 16, 1), )
if mibBuilder.loadTexts: alHostTable.setStatus('current')
alHostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 16, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "alHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alHostEntry.setStatus('current')
alHostTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alHostTimeMark.setStatus('current')
alHostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostInPkts.setStatus('current')
alHostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostOutPkts.setStatus('current')
alHostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostInOctets.setStatus('current')
alHostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostOutOctets.setStatus('current')
alHostCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostCreateTime.setStatus('current')
alMatrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 1), )
if mibBuilder.loadTexts: alMatrixSDTable.setStatus('current')
alMatrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixSDEntry.setStatus('current')
alMatrixSDTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alMatrixSDTimeMark.setStatus('current')
alMatrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDPkts.setStatus('current')
alMatrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDOctets.setStatus('current')
alMatrixSDCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDCreateTime.setStatus('current')
alMatrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 2), )
if mibBuilder.loadTexts: alMatrixDSTable.setStatus('current')
alMatrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixDSEntry.setStatus('current')
alMatrixDSTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alMatrixDSTimeMark.setStatus('current')
alMatrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSPkts.setStatus('current')
alMatrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSOctets.setStatus('current')
alMatrixDSCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSCreateTime.setStatus('current')
alMatrixTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 3), )
if mibBuilder.loadTexts: alMatrixTopNControlTable.setStatus('current')
alMatrixTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 3, 1), ).setIndexNames((0, "RMON2-MIB", "alMatrixTopNControlIndex"))
if mibBuilder.loadTexts: alMatrixTopNControlEntry.setStatus('current')
alMatrixTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: alMatrixTopNControlIndex.setStatus('current')
alMatrixTopNControlMatrixIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlMatrixIndex.setStatus('current')
alMatrixTopNControlRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alMatrixTopNTerminalsPkts", 1), ("alMatrixTopNTerminalsOctets", 2), ("alMatrixTopNAllPkts", 3), ("alMatrixTopNAllOctets", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlRateBase.setStatus('current')
alMatrixTopNControlTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlTimeRemaining.setStatus('current')
alMatrixTopNControlGeneratedReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlGeneratedReports.setStatus('current')
alMatrixTopNControlDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlDuration.setStatus('current')
alMatrixTopNControlRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlRequestedSize.setStatus('current')
alMatrixTopNControlGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlGrantedSize.setStatus('current')
alMatrixTopNControlStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlStartTime.setStatus('current')
alMatrixTopNControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 10), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlOwner.setStatus('current')
alMatrixTopNControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlStatus.setStatus('current')
alMatrixTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 4), )
if mibBuilder.loadTexts: alMatrixTopNTable.setStatus('current')
alMatrixTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 4, 1), ).setIndexNames((0, "RMON2-MIB", "alMatrixTopNControlIndex"), (0, "RMON2-MIB", "alMatrixTopNIndex"))
if mibBuilder.loadTexts: alMatrixTopNEntry.setStatus('current')
alMatrixTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: alMatrixTopNIndex.setStatus('current')
alMatrixTopNProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNProtocolDirLocalIndex.setStatus('current')
alMatrixTopNSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNSourceAddress.setStatus('current')
alMatrixTopNDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNDestAddress.setStatus('current')
alMatrixTopNAppProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNAppProtocolDirLocalIndex.setStatus('current')
alMatrixTopNPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNPktRate.setStatus('current')
alMatrixTopNReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNReversePktRate.setStatus('current')
alMatrixTopNOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNOctetRate.setStatus('current')
alMatrixTopNReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNReverseOctetRate.setStatus('current')
usrHistoryControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 1), )
if mibBuilder.loadTexts: usrHistoryControlTable.setStatus('current')
usrHistoryControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 1, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"))
if mibBuilder.loadTexts: usrHistoryControlEntry.setStatus('current')
usrHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: usrHistoryControlIndex.setStatus('current')
usrHistoryControlObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlObjects.setStatus('current')
usrHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlBucketsRequested.setStatus('current')
usrHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryControlBucketsGranted.setStatus('current')
usrHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlInterval.setStatus('current')
usrHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 6), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlOwner.setStatus('current')
usrHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlStatus.setStatus('current')
usrHistoryObjectTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 2), )
if mibBuilder.loadTexts: usrHistoryObjectTable.setStatus('current')
usrHistoryObjectEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 2, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"), (0, "RMON2-MIB", "usrHistoryObjectIndex"))
if mibBuilder.loadTexts: usrHistoryObjectEntry.setStatus('current')
usrHistoryObjectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: usrHistoryObjectIndex.setStatus('current')
usrHistoryObjectVariable = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryObjectVariable.setStatus('current')
usrHistoryObjectSampleType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryObjectSampleType.setStatus('current')
usrHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 3), )
if mibBuilder.loadTexts: usrHistoryTable.setStatus('current')
usrHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 3, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"), (0, "RMON2-MIB", "usrHistorySampleIndex"), (0, "RMON2-MIB", "usrHistoryObjectIndex"))
if mibBuilder.loadTexts: usrHistoryEntry.setStatus('current')
usrHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: usrHistorySampleIndex.setStatus('current')
usrHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryIntervalStart.setStatus('current')
usrHistoryIntervalEnd = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryIntervalEnd.setStatus('current')
usrHistoryAbsValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryAbsValue.setStatus('current')
usrHistoryValStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valueNotAvailable", 1), ("valuePositive", 2), ("valueNegative", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryValStatus.setStatus('current')
class ControlString(DisplayString):
    status = 'current'

probeCapabilities = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 1), Bits().clone(namedValues=NamedValues(("etherStats", 0), ("historyControl", 1), ("etherHistory", 2), ("alarm", 3), ("hosts", 4), ("hostTopN", 5), ("matrix", 6), ("filter", 7), ("capture", 8), ("event", 9), ("tokenRingMLStats", 10), ("tokenRingPStats", 11), ("tokenRingMLHistory", 12), ("tokenRingPHistory", 13), ("ringStation", 14), ("ringStationOrder", 15), ("ringStationConfig", 16), ("sourceRouting", 17), ("protocolDirectory", 18), ("protocolDistribution", 19), ("addressMapping", 20), ("nlHost", 21), ("nlMatrix", 22), ("alHost", 23), ("alMatrix", 24), ("usrHistory", 25), ("probeConfig", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeCapabilities.setStatus('current')
probeSoftwareRev = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeSoftwareRev.setStatus('current')
probeHardwareRev = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeHardwareRev.setStatus('current')
probeDateTime = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 4), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDateTime.setStatus('current')
probeResetControl = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("warmBoot", 2), ("coldBoot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeResetControl.setStatus('current')
probeDownloadFile = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadFile.setStatus('current')
probeDownloadTFTPServer = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadTFTPServer.setStatus('current')
probeDownloadAction = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDownloading", 1), ("downloadToPROM", 2), ("downloadToRAM", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadAction.setStatus('current')
probeDownloadStatus = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("downloadSuccess", 1), ("downloadStatusUnknown", 2), ("downloadGeneralError", 3), ("downloadNoResponseFromServer", 4), ("downloadChecksumError", 5), ("downloadIncompatibleImage", 6), ("downloadTftpFileNotFound", 7), ("downloadTftpAccessViolation", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeDownloadStatus.setStatus('current')
serialConfigTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 10), )
if mibBuilder.loadTexts: serialConfigTable.setStatus('current')
serialConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: serialConfigEntry.setStatus('current')
serialMode = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("modem", 2))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialMode.setStatus('current')
serialProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("slip", 2), ("ppp", 3))).clone('slip')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialProtocol.setStatus('current')
serialTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialTimeout.setStatus('current')
serialModemInitString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 4), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemInitString.setStatus('current')
serialModemHangUpString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 5), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemHangUpString.setStatus('current')
serialModemConnectResp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemConnectResp.setStatus('current')
serialModemNoConnectResp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemNoConnectResp.setStatus('current')
serialDialoutTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialDialoutTimeout.setStatus('current')
serialStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialStatus.setStatus('current')
netConfigTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 11), )
if mibBuilder.loadTexts: netConfigTable.setStatus('current')
netConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: netConfigEntry.setStatus('current')
netConfigIPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigIPAddress.setStatus('current')
netConfigSubnetMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigSubnetMask.setStatus('current')
netConfigStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigStatus.setStatus('current')
netDefaultGateway = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netDefaultGateway.setStatus('current')
trapDestTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 13), )
if mibBuilder.loadTexts: trapDestTable.setStatus('current')
trapDestEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 13, 1), ).setIndexNames((0, "RMON2-MIB", "trapDestIndex"))
if mibBuilder.loadTexts: trapDestEntry.setStatus('current')
trapDestIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: trapDestIndex.setStatus('current')
trapDestCommunity = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestCommunity.setStatus('current')
trapDestProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("ipx", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestProtocol.setStatus('current')
trapDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestAddress.setStatus('current')
trapDestOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestOwner.setStatus('current')
trapDestStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestStatus.setStatus('current')
serialConnectionTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 14), )
if mibBuilder.loadTexts: serialConnectionTable.setStatus('current')
serialConnectionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 14, 1), ).setIndexNames((0, "RMON2-MIB", "serialConnectIndex"))
if mibBuilder.loadTexts: serialConnectionEntry.setStatus('current')
serialConnectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: serialConnectIndex.setStatus('current')
serialConnectDestIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectDestIpAddress.setStatus('current')
serialConnectType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("direct", 1), ("modem", 2), ("switch", 3), ("modemSwitch", 4))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectType.setStatus('current')
serialConnectDialString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 4), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectDialString.setStatus('current')
serialConnectSwitchConnectSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 5), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchConnectSeq.setStatus('current')
serialConnectSwitchDisconnectSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 6), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchDisconnectSeq.setStatus('current')
serialConnectSwitchResetSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 7), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchResetSeq.setStatus('current')
serialConnectOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 8), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectOwner.setStatus('current')
serialConnectStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectStatus.setStatus('current')
etherStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 4), )
if mibBuilder.loadTexts: etherStats2Table.setStatus('current')
etherStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 4, 1), )
etherStatsEntry.registerAugmentions(("RMON2-MIB", "etherStats2Entry"))
etherStats2Entry.setIndexNames(*etherStatsEntry.getIndexNames())
if mibBuilder.loadTexts: etherStats2Entry.setStatus('current')
etherStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsDroppedFrames.setStatus('current')
etherStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsCreateTime.setStatus('current')
historyControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 5), )
if mibBuilder.loadTexts: historyControl2Table.setStatus('current')
historyControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 5, 1), )
historyControlEntry.registerAugmentions(("RMON2-MIB", "historyControl2Entry"))
historyControl2Entry.setIndexNames(*historyControlEntry.getIndexNames())
if mibBuilder.loadTexts: historyControl2Entry.setStatus('current')
historyControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlDroppedFrames.setStatus('current')
hostControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 4), )
if mibBuilder.loadTexts: hostControl2Table.setStatus('current')
hostControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 4, 1), )
hostControlEntry.registerAugmentions(("RMON2-MIB", "hostControl2Entry"))
hostControl2Entry.setIndexNames(*hostControlEntry.getIndexNames())
if mibBuilder.loadTexts: hostControl2Entry.setStatus('current')
hostControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlDroppedFrames.setStatus('current')
hostControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlCreateTime.setStatus('current')
matrixControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 4), )
if mibBuilder.loadTexts: matrixControl2Table.setStatus('current')
matrixControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 4, 1), )
matrixControlEntry.registerAugmentions(("RMON2-MIB", "matrixControl2Entry"))
matrixControl2Entry.setIndexNames(*matrixControlEntry.getIndexNames())
if mibBuilder.loadTexts: matrixControl2Entry.setStatus('current')
matrixControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlDroppedFrames.setStatus('current')
matrixControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlCreateTime.setStatus('current')
channel2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 3), )
if mibBuilder.loadTexts: channel2Table.setStatus('current')
channel2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 3, 1), )
channelEntry.registerAugmentions(("RMON2-MIB", "channel2Entry"))
channel2Entry.setIndexNames(*channelEntry.getIndexNames())
if mibBuilder.loadTexts: channel2Entry.setStatus('current')
channelDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelDroppedFrames.setStatus('current')
channelCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelCreateTime.setStatus('current')
tokenRingMLStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 5), )
if mibBuilder.loadTexts: tokenRingMLStats2Table.setStatus('current')
tokenRingMLStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 5, 1), )
tokenRingMLStatsEntry.registerAugmentions(("RMON2-MIB", "tokenRingMLStats2Entry"))
tokenRingMLStats2Entry.setIndexNames(*tokenRingMLStatsEntry.getIndexNames())
if mibBuilder.loadTexts: tokenRingMLStats2Entry.setStatus('current')
tokenRingMLStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingMLStatsDroppedFrames.setStatus('current')
tokenRingMLStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingMLStatsCreateTime.setStatus('current')
tokenRingPStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 6), )
if mibBuilder.loadTexts: tokenRingPStats2Table.setStatus('current')
tokenRingPStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 6, 1), )
tokenRingPStatsEntry.registerAugmentions(("RMON2-MIB", "tokenRingPStats2Entry"))
tokenRingPStats2Entry.setIndexNames(*tokenRingPStatsEntry.getIndexNames())
if mibBuilder.loadTexts: tokenRingPStats2Entry.setStatus('current')
tokenRingPStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingPStatsDroppedFrames.setStatus('current')
tokenRingPStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingPStatsCreateTime.setStatus('current')
ringStationControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 7), )
if mibBuilder.loadTexts: ringStationControl2Table.setStatus('current')
ringStationControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 7, 1), )
ringStationControlEntry.registerAugmentions(("RMON2-MIB", "ringStationControl2Entry"))
ringStationControl2Entry.setIndexNames(*ringStationControlEntry.getIndexNames())
if mibBuilder.loadTexts: ringStationControl2Entry.setStatus('current')
ringStationControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringStationControlDroppedFrames.setStatus('current')
ringStationControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringStationControlCreateTime.setStatus('current')
sourceRoutingStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 8), )
if mibBuilder.loadTexts: sourceRoutingStats2Table.setStatus('current')
sourceRoutingStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 8, 1), )
sourceRoutingStatsEntry.registerAugmentions(("RMON2-MIB", "sourceRoutingStats2Entry"))
sourceRoutingStats2Entry.setIndexNames(*sourceRoutingStatsEntry.getIndexNames())
if mibBuilder.loadTexts: sourceRoutingStats2Entry.setStatus('current')
sourceRoutingStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceRoutingStatsDroppedFrames.setStatus('current')
sourceRoutingStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceRoutingStatsCreateTime.setStatus('current')
filter2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 4), )
if mibBuilder.loadTexts: filter2Table.setStatus('current')
filter2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 4, 1), )
filterEntry.registerAugmentions(("RMON2-MIB", "filter2Entry"))
filter2Entry.setIndexNames(*filterEntry.getIndexNames())
if mibBuilder.loadTexts: filter2Entry.setStatus('current')
filterProtocolDirDataLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterProtocolDirDataLocalIndex.setStatus('current')
filterProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterProtocolDirLocalIndex.setStatus('current')
rmon2MIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 1))
rmon2MIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 2))
rmon2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 1, 1)).setObjects(("RMON2-MIB", "protocolDirectoryGroup"), ("RMON2-MIB", "protocolDistributionGroup"), ("RMON2-MIB", "addressMapGroup"), ("RMON2-MIB", "nlHostGroup"), ("RMON2-MIB", "nlMatrixGroup"), ("RMON2-MIB", "usrHistoryGroup"), ("RMON2-MIB", "probeInformationGroup"), ("RMON2-MIB", "rmon1EnhancementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon2MIBCompliance = rmon2MIBCompliance.setStatus('current')
rmon2MIBApplicationLayerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 1, 2)).setObjects(("RMON2-MIB", "protocolDirectoryGroup"), ("RMON2-MIB", "protocolDistributionGroup"), ("RMON2-MIB", "addressMapGroup"), ("RMON2-MIB", "nlHostGroup"), ("RMON2-MIB", "nlMatrixGroup"), ("RMON2-MIB", "alHostGroup"), ("RMON2-MIB", "alMatrixGroup"), ("RMON2-MIB", "usrHistoryGroup"), ("RMON2-MIB", "probeInformationGroup"), ("RMON2-MIB", "rmon1EnhancementGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon2MIBApplicationLayerCompliance = rmon2MIBApplicationLayerCompliance.setStatus('current')
protocolDirectoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 1)).setObjects(("RMON2-MIB", "protocolDirLastChange"), ("RMON2-MIB", "protocolDirLocalIndex"), ("RMON2-MIB", "protocolDirDescr"), ("RMON2-MIB", "protocolDirType"), ("RMON2-MIB", "protocolDirAddressMapConfig"), ("RMON2-MIB", "protocolDirHostConfig"), ("RMON2-MIB", "protocolDirMatrixConfig"), ("RMON2-MIB", "protocolDirOwner"), ("RMON2-MIB", "protocolDirStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    protocolDirectoryGroup = protocolDirectoryGroup.setStatus('current')
protocolDistributionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 2)).setObjects(("RMON2-MIB", "protocolDistControlDataSource"), ("RMON2-MIB", "protocolDistControlDroppedFrames"), ("RMON2-MIB", "protocolDistControlCreateTime"), ("RMON2-MIB", "protocolDistControlOwner"), ("RMON2-MIB", "protocolDistControlStatus"), ("RMON2-MIB", "protocolDistStatsPkts"), ("RMON2-MIB", "protocolDistStatsOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    protocolDistributionGroup = protocolDistributionGroup.setStatus('current')
addressMapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 3)).setObjects(("RMON2-MIB", "addressMapInserts"), ("RMON2-MIB", "addressMapDeletes"), ("RMON2-MIB", "addressMapMaxDesiredEntries"), ("RMON2-MIB", "addressMapControlDataSource"), ("RMON2-MIB", "addressMapControlDroppedFrames"), ("RMON2-MIB", "addressMapControlOwner"), ("RMON2-MIB", "addressMapControlStatus"), ("RMON2-MIB", "addressMapPhysicalAddress"), ("RMON2-MIB", "addressMapLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    addressMapGroup = addressMapGroup.setStatus('current')
nlHostGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 4)).setObjects(("RMON2-MIB", "hlHostControlDataSource"), ("RMON2-MIB", "hlHostControlNlDroppedFrames"), ("RMON2-MIB", "hlHostControlNlInserts"), ("RMON2-MIB", "hlHostControlNlDeletes"), ("RMON2-MIB", "hlHostControlNlMaxDesiredEntries"), ("RMON2-MIB", "hlHostControlAlDroppedFrames"), ("RMON2-MIB", "hlHostControlAlInserts"), ("RMON2-MIB", "hlHostControlAlDeletes"), ("RMON2-MIB", "hlHostControlAlMaxDesiredEntries"), ("RMON2-MIB", "hlHostControlOwner"), ("RMON2-MIB", "hlHostControlStatus"), ("RMON2-MIB", "nlHostInPkts"), ("RMON2-MIB", "nlHostOutPkts"), ("RMON2-MIB", "nlHostInOctets"), ("RMON2-MIB", "nlHostOutOctets"), ("RMON2-MIB", "nlHostOutMacNonUnicastPkts"), ("RMON2-MIB", "nlHostCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlHostGroup = nlHostGroup.setStatus('current')
nlMatrixGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 5)).setObjects(("RMON2-MIB", "hlMatrixControlDataSource"), ("RMON2-MIB", "hlMatrixControlNlDroppedFrames"), ("RMON2-MIB", "hlMatrixControlNlInserts"), ("RMON2-MIB", "hlMatrixControlNlDeletes"), ("RMON2-MIB", "hlMatrixControlNlMaxDesiredEntries"), ("RMON2-MIB", "hlMatrixControlAlDroppedFrames"), ("RMON2-MIB", "hlMatrixControlAlInserts"), ("RMON2-MIB", "hlMatrixControlAlDeletes"), ("RMON2-MIB", "hlMatrixControlAlMaxDesiredEntries"), ("RMON2-MIB", "hlMatrixControlOwner"), ("RMON2-MIB", "hlMatrixControlStatus"), ("RMON2-MIB", "nlMatrixSDPkts"), ("RMON2-MIB", "nlMatrixSDOctets"), ("RMON2-MIB", "nlMatrixSDCreateTime"), ("RMON2-MIB", "nlMatrixDSPkts"), ("RMON2-MIB", "nlMatrixDSOctets"), ("RMON2-MIB", "nlMatrixDSCreateTime"), ("RMON2-MIB", "nlMatrixTopNControlMatrixIndex"), ("RMON2-MIB", "nlMatrixTopNControlRateBase"), ("RMON2-MIB", "nlMatrixTopNControlTimeRemaining"), ("RMON2-MIB", "nlMatrixTopNControlGeneratedReports"), ("RMON2-MIB", "nlMatrixTopNControlDuration"), ("RMON2-MIB", "nlMatrixTopNControlRequestedSize"), ("RMON2-MIB", "nlMatrixTopNControlGrantedSize"), ("RMON2-MIB", "nlMatrixTopNControlStartTime"), ("RMON2-MIB", "nlMatrixTopNControlOwner"), ("RMON2-MIB", "nlMatrixTopNControlStatus"), ("RMON2-MIB", "nlMatrixTopNProtocolDirLocalIndex"), ("RMON2-MIB", "nlMatrixTopNSourceAddress"), ("RMON2-MIB", "nlMatrixTopNDestAddress"), ("RMON2-MIB", "nlMatrixTopNPktRate"), ("RMON2-MIB", "nlMatrixTopNReversePktRate"), ("RMON2-MIB", "nlMatrixTopNOctetRate"), ("RMON2-MIB", "nlMatrixTopNReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlMatrixGroup = nlMatrixGroup.setStatus('current')
alHostGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 6)).setObjects(("RMON2-MIB", "alHostInPkts"), ("RMON2-MIB", "alHostOutPkts"), ("RMON2-MIB", "alHostInOctets"), ("RMON2-MIB", "alHostOutOctets"), ("RMON2-MIB", "alHostCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alHostGroup = alHostGroup.setStatus('current')
alMatrixGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 7)).setObjects(("RMON2-MIB", "alMatrixSDPkts"), ("RMON2-MIB", "alMatrixSDOctets"), ("RMON2-MIB", "alMatrixSDCreateTime"), ("RMON2-MIB", "alMatrixDSPkts"), ("RMON2-MIB", "alMatrixDSOctets"), ("RMON2-MIB", "alMatrixDSCreateTime"), ("RMON2-MIB", "alMatrixTopNControlMatrixIndex"), ("RMON2-MIB", "alMatrixTopNControlRateBase"), ("RMON2-MIB", "alMatrixTopNControlTimeRemaining"), ("RMON2-MIB", "alMatrixTopNControlGeneratedReports"), ("RMON2-MIB", "alMatrixTopNControlDuration"), ("RMON2-MIB", "alMatrixTopNControlRequestedSize"), ("RMON2-MIB", "alMatrixTopNControlGrantedSize"), ("RMON2-MIB", "alMatrixTopNControlStartTime"), ("RMON2-MIB", "alMatrixTopNControlOwner"), ("RMON2-MIB", "alMatrixTopNControlStatus"), ("RMON2-MIB", "alMatrixTopNProtocolDirLocalIndex"), ("RMON2-MIB", "alMatrixTopNSourceAddress"), ("RMON2-MIB", "alMatrixTopNDestAddress"), ("RMON2-MIB", "alMatrixTopNAppProtocolDirLocalIndex"), ("RMON2-MIB", "alMatrixTopNPktRate"), ("RMON2-MIB", "alMatrixTopNReversePktRate"), ("RMON2-MIB", "alMatrixTopNOctetRate"), ("RMON2-MIB", "alMatrixTopNReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alMatrixGroup = alMatrixGroup.setStatus('current')
usrHistoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 8)).setObjects(("RMON2-MIB", "usrHistoryControlObjects"), ("RMON2-MIB", "usrHistoryControlBucketsRequested"), ("RMON2-MIB", "usrHistoryControlBucketsGranted"), ("RMON2-MIB", "usrHistoryControlInterval"), ("RMON2-MIB", "usrHistoryControlOwner"), ("RMON2-MIB", "usrHistoryControlStatus"), ("RMON2-MIB", "usrHistoryObjectVariable"), ("RMON2-MIB", "usrHistoryObjectSampleType"), ("RMON2-MIB", "usrHistoryIntervalStart"), ("RMON2-MIB", "usrHistoryIntervalEnd"), ("RMON2-MIB", "usrHistoryAbsValue"), ("RMON2-MIB", "usrHistoryValStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usrHistoryGroup = usrHistoryGroup.setStatus('current')
probeInformationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 9)).setObjects(("RMON2-MIB", "probeCapabilities"), ("RMON2-MIB", "probeSoftwareRev"), ("RMON2-MIB", "probeHardwareRev"), ("RMON2-MIB", "probeDateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    probeInformationGroup = probeInformationGroup.setStatus('current')
probeConfigurationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 10)).setObjects(("RMON2-MIB", "probeResetControl"), ("RMON2-MIB", "probeDownloadFile"), ("RMON2-MIB", "probeDownloadTFTPServer"), ("RMON2-MIB", "probeDownloadAction"), ("RMON2-MIB", "probeDownloadStatus"), ("RMON2-MIB", "serialMode"), ("RMON2-MIB", "serialProtocol"), ("RMON2-MIB", "serialTimeout"), ("RMON2-MIB", "serialModemInitString"), ("RMON2-MIB", "serialModemHangUpString"), ("RMON2-MIB", "serialModemConnectResp"), ("RMON2-MIB", "serialModemNoConnectResp"), ("RMON2-MIB", "serialDialoutTimeout"), ("RMON2-MIB", "serialStatus"), ("RMON2-MIB", "netConfigIPAddress"), ("RMON2-MIB", "netConfigSubnetMask"), ("RMON2-MIB", "netConfigStatus"), ("RMON2-MIB", "netDefaultGateway"), ("RMON2-MIB", "trapDestCommunity"), ("RMON2-MIB", "trapDestProtocol"), ("RMON2-MIB", "trapDestAddress"), ("RMON2-MIB", "trapDestOwner"), ("RMON2-MIB", "trapDestStatus"), ("RMON2-MIB", "serialConnectDestIpAddress"), ("RMON2-MIB", "serialConnectType"), ("RMON2-MIB", "serialConnectDialString"), ("RMON2-MIB", "serialConnectSwitchConnectSeq"), ("RMON2-MIB", "serialConnectSwitchDisconnectSeq"), ("RMON2-MIB", "serialConnectSwitchResetSeq"), ("RMON2-MIB", "serialConnectOwner"), ("RMON2-MIB", "serialConnectStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    probeConfigurationGroup = probeConfigurationGroup.setStatus('current')
rmon1EnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 11)).setObjects(("RMON2-MIB", "historyControlDroppedFrames"), ("RMON2-MIB", "hostControlDroppedFrames"), ("RMON2-MIB", "hostControlCreateTime"), ("RMON2-MIB", "matrixControlDroppedFrames"), ("RMON2-MIB", "matrixControlCreateTime"), ("RMON2-MIB", "channelDroppedFrames"), ("RMON2-MIB", "channelCreateTime"), ("RMON2-MIB", "filterProtocolDirDataLocalIndex"), ("RMON2-MIB", "filterProtocolDirLocalIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1EnhancementGroup = rmon1EnhancementGroup.setStatus('current')
rmon1EthernetEnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 12)).setObjects(("RMON2-MIB", "etherStatsDroppedFrames"), ("RMON2-MIB", "etherStatsCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1EthernetEnhancementGroup = rmon1EthernetEnhancementGroup.setStatus('current')
rmon1TokenRingEnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 13)).setObjects(("RMON2-MIB", "tokenRingMLStatsDroppedFrames"), ("RMON2-MIB", "tokenRingMLStatsCreateTime"), ("RMON2-MIB", "tokenRingPStatsDroppedFrames"), ("RMON2-MIB", "tokenRingPStatsCreateTime"), ("RMON2-MIB", "ringStationControlDroppedFrames"), ("RMON2-MIB", "ringStationControlCreateTime"), ("RMON2-MIB", "sourceRoutingStatsDroppedFrames"), ("RMON2-MIB", "sourceRoutingStatsCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1TokenRingEnhancementGroup = rmon1TokenRingEnhancementGroup.setStatus('current')
mibBuilder.exportSymbols("RMON2-MIB", hlMatrixControlAlInserts=hlMatrixControlAlInserts, usrHistorySampleIndex=usrHistorySampleIndex, matrixControlCreateTime=matrixControlCreateTime, probeCapabilities=probeCapabilities, channelDroppedFrames=channelDroppedFrames, alMatrix=alMatrix, nlMatrixDSOctets=nlMatrixDSOctets, rmon1EthernetEnhancementGroup=rmon1EthernetEnhancementGroup, protocolDirMatrixConfig=protocolDirMatrixConfig, nlMatrixSDTable=nlMatrixSDTable, tokenRingPStatsCreateTime=tokenRingPStatsCreateTime, usrHistoryControlObjects=usrHistoryControlObjects, protocolDistStatsTable=protocolDistStatsTable, trapDestTable=trapDestTable, usrHistoryIntervalEnd=usrHistoryIntervalEnd, nlMatrixDSDestAddress=nlMatrixDSDestAddress, alHost=alHost, hlMatrixControlNlDeletes=hlMatrixControlNlDeletes, protocolDirHostConfig=protocolDirHostConfig, nlMatrixSDPkts=nlMatrixSDPkts, nlMatrixTopNReversePktRate=nlMatrixTopNReversePktRate, alHostCreateTime=alHostCreateTime, netConfigEntry=netConfigEntry, hostControl2Table=hostControl2Table, nlMatrixSDDestAddress=nlMatrixSDDestAddress, protocolDistControlDroppedFrames=protocolDistControlDroppedFrames, nlMatrix=nlMatrix, alMatrixTopNControlRateBase=alMatrixTopNControlRateBase, alMatrixTopNEntry=alMatrixTopNEntry, hlMatrixControlIndex=hlMatrixControlIndex, alHostTimeMark=alHostTimeMark, nlHostInOctets=nlHostInOctets, nlMatrixGroup=nlMatrixGroup, nlMatrixTopNTable=nlMatrixTopNTable, alMatrixSDEntry=alMatrixSDEntry, probeHardwareRev=probeHardwareRev, nlMatrixSDTimeMark=nlMatrixSDTimeMark, addressMapDeletes=addressMapDeletes, addressMapMaxDesiredEntries=addressMapMaxDesiredEntries, probeDownloadFile=probeDownloadFile, nlMatrixTopNDestAddress=nlMatrixTopNDestAddress, hlMatrixControlAlMaxDesiredEntries=hlMatrixControlAlMaxDesiredEntries, protocolDirTable=protocolDirTable, protocolDir=protocolDir, nlHostTimeMark=nlHostTimeMark, hlHostControlAlDroppedFrames=hlHostControlAlDroppedFrames, hlHostControlOwner=hlHostControlOwner, tokenRingPStats2Table=tokenRingPStats2Table, nlMatrixTopNControlMatrixIndex=nlMatrixTopNControlMatrixIndex, serialProtocol=serialProtocol, nlHost=nlHost, nlHostAddress=nlHostAddress, probeConfig=probeConfig, alMatrixTopNTable=alMatrixTopNTable, tokenRingMLStatsCreateTime=tokenRingMLStatsCreateTime, alMatrixTopNControlStartTime=alMatrixTopNControlStartTime, tokenRingPStatsDroppedFrames=tokenRingPStatsDroppedFrames, nlMatrixDSPkts=nlMatrixDSPkts, serialModemInitString=serialModemInitString, trapDestStatus=trapDestStatus, serialModemConnectResp=serialModemConnectResp, alHostGroup=alHostGroup, alMatrixTopNControlIndex=alMatrixTopNControlIndex, nlHostOutMacNonUnicastPkts=nlHostOutMacNonUnicastPkts, addressMapControlDroppedFrames=addressMapControlDroppedFrames, hlMatrixControlTable=hlMatrixControlTable, serialModemNoConnectResp=serialModemNoConnectResp, protocolDistControlOwner=protocolDistControlOwner, alMatrixDSPkts=alMatrixDSPkts, ringStationControlCreateTime=ringStationControlCreateTime, protocolDistControlEntry=protocolDistControlEntry, alHostOutPkts=alHostOutPkts, historyControl2Table=historyControl2Table, addressMapControlTable=addressMapControlTable, nlHostInPkts=nlHostInPkts, hlMatrixControlEntry=hlMatrixControlEntry, usrHistoryObjectIndex=usrHistoryObjectIndex, rmon2MIBCompliance=rmon2MIBCompliance, hlHostControlNlMaxDesiredEntries=hlHostControlNlMaxDesiredEntries, alHostInPkts=alHostInPkts, probeDownloadAction=probeDownloadAction, rmonConformance=rmonConformance, nlMatrixDSTimeMark=nlMatrixDSTimeMark, sourceRoutingStats2Table=sourceRoutingStats2Table, nlMatrixTopNControlIndex=nlMatrixTopNControlIndex, addressMapInserts=addressMapInserts, protocolDistControlStatus=protocolDistControlStatus, alMatrixDSTimeMark=alMatrixDSTimeMark, usrHistoryObjectVariable=usrHistoryObjectVariable, protocolDistStatsEntry=protocolDistStatsEntry, ringStationControl2Entry=ringStationControl2Entry, hlMatrixControlAlDeletes=hlMatrixControlAlDeletes, trapDestProtocol=trapDestProtocol, usrHistoryControlBucketsRequested=usrHistoryControlBucketsRequested, protocolDirDescr=protocolDirDescr, nlMatrixTopNControlRequestedSize=nlMatrixTopNControlRequestedSize, nlMatrixTopNControlStartTime=nlMatrixTopNControlStartTime, trapDestAddress=trapDestAddress, usrHistoryEntry=usrHistoryEntry, probeResetControl=probeResetControl, hlHostControlDataSource=hlHostControlDataSource, nlMatrixSDSourceAddress=nlMatrixSDSourceAddress, netConfigSubnetMask=netConfigSubnetMask, serialConnectSwitchDisconnectSeq=serialConnectSwitchDisconnectSeq, protocolDirLocalIndex=protocolDirLocalIndex, ringStationControlDroppedFrames=ringStationControlDroppedFrames, serialConnectIndex=serialConnectIndex, nlHostGroup=nlHostGroup, DataSource=DataSource, rmon1EnhancementGroup=rmon1EnhancementGroup, nlHostOutOctets=nlHostOutOctets, nlMatrixTopNProtocolDirLocalIndex=nlMatrixTopNProtocolDirLocalIndex, alHostEntry=alHostEntry, alMatrixTopNSourceAddress=alMatrixTopNSourceAddress, probeConfigurationGroup=probeConfigurationGroup, filterProtocolDirDataLocalIndex=filterProtocolDirDataLocalIndex, protocolDirID=protocolDirID, protocolDirType=protocolDirType, trapDestIndex=trapDestIndex, ZeroBasedCounter32=ZeroBasedCounter32, addressMapControlStatus=addressMapControlStatus, nlMatrixSDEntry=nlMatrixSDEntry, nlHostTable=nlHostTable, nlMatrixTopNControlEntry=nlMatrixTopNControlEntry, historyControl2Entry=historyControl2Entry, PYSNMP_MODULE_ID=rmon, trapDestCommunity=trapDestCommunity, protocolDistControlCreateTime=protocolDistControlCreateTime, etherStatsDroppedFrames=etherStatsDroppedFrames, alMatrixTopNIndex=alMatrixTopNIndex, alHostInOctets=alHostInOctets, serialConnectDestIpAddress=serialConnectDestIpAddress, protocolDirEntry=protocolDirEntry, addressMapTable=addressMapTable, tokenRingMLStatsDroppedFrames=tokenRingMLStatsDroppedFrames, nlHostCreateTime=nlHostCreateTime, alMatrixTopNReverseOctetRate=alMatrixTopNReverseOctetRate, hlMatrixControlDataSource=hlMatrixControlDataSource, addressMapControlDataSource=addressMapControlDataSource, nlMatrixSDOctets=nlMatrixSDOctets, hlMatrixControlOwner=hlMatrixControlOwner, nlMatrixTopNControlDuration=nlMatrixTopNControlDuration, protocolDistControlIndex=protocolDistControlIndex, alMatrixTopNControlMatrixIndex=alMatrixTopNControlMatrixIndex, usrHistoryControlBucketsGranted=usrHistoryControlBucketsGranted, LastCreateTime=LastCreateTime, protocolDistControlTable=protocolDistControlTable, usrHistoryControlIndex=usrHistoryControlIndex, usrHistoryObjectEntry=usrHistoryObjectEntry, matrixControl2Table=matrixControl2Table, hlHostControlAlInserts=hlHostControlAlInserts, nlMatrixSDCreateTime=nlMatrixSDCreateTime, nlMatrixTopNControlOwner=nlMatrixTopNControlOwner, nlMatrixTopNIndex=nlMatrixTopNIndex, usrHistory=usrHistory, serialMode=serialMode, serialConfigEntry=serialConfigEntry, usrHistoryObjectTable=usrHistoryObjectTable, matrixControl2Entry=matrixControl2Entry, serialTimeout=serialTimeout, protocolDist=protocolDist, hlMatrixControlNlDroppedFrames=hlMatrixControlNlDroppedFrames, alMatrixTopNAppProtocolDirLocalIndex=alMatrixTopNAppProtocolDirLocalIndex, usrHistoryIntervalStart=usrHistoryIntervalStart, nlMatrixTopNEntry=nlMatrixTopNEntry, tokenRingPStats2Entry=tokenRingPStats2Entry, probeInformationGroup=probeInformationGroup, protocolDirAddressMapConfig=protocolDirAddressMapConfig, nlMatrixDSCreateTime=nlMatrixDSCreateTime, addressMapGroup=addressMapGroup, alMatrixTopNControlRequestedSize=alMatrixTopNControlRequestedSize, nlHostOutPkts=nlHostOutPkts, hlMatrixControlStatus=hlMatrixControlStatus, protocolDirStatus=protocolDirStatus, nlMatrixTopNOctetRate=nlMatrixTopNOctetRate, nlMatrixTopNControlTimeRemaining=nlMatrixTopNControlTimeRemaining, alMatrixTopNDestAddress=alMatrixTopNDestAddress, sourceRoutingStatsCreateTime=sourceRoutingStatsCreateTime, protocolDistStatsPkts=protocolDistStatsPkts, addressMapPhysicalAddress=addressMapPhysicalAddress, hlMatrixControlNlMaxDesiredEntries=hlMatrixControlNlMaxDesiredEntries, usrHistoryValStatus=usrHistoryValStatus, hostControl2Entry=hostControl2Entry, alMatrixTopNControlTimeRemaining=alMatrixTopNControlTimeRemaining, serialConnectSwitchConnectSeq=serialConnectSwitchConnectSeq, alMatrixSDCreateTime=alMatrixSDCreateTime, addressMapEntry=addressMapEntry, ringStationControl2Table=ringStationControl2Table, rmon=rmon, protocolDirLastChange=protocolDirLastChange, addressMapControlEntry=addressMapControlEntry, probeDownloadTFTPServer=probeDownloadTFTPServer, tokenRingMLStats2Table=tokenRingMLStats2Table, alMatrixTopNControlEntry=alMatrixTopNControlEntry, nlMatrixTopNControlTable=nlMatrixTopNControlTable, netConfigTable=netConfigTable, hlHostControlIndex=hlHostControlIndex, serialConnectDialString=serialConnectDialString, nlMatrixTopNControlGrantedSize=nlMatrixTopNControlGrantedSize, hlHostControlStatus=hlHostControlStatus, probeDateTime=probeDateTime, hlHostControlNlDeletes=hlHostControlNlDeletes, rmon1TokenRingEnhancementGroup=rmon1TokenRingEnhancementGroup, alHostTable=alHostTable, alMatrixTopNControlOwner=alMatrixTopNControlOwner, serialConnectSwitchResetSeq=serialConnectSwitchResetSeq, historyControlDroppedFrames=historyControlDroppedFrames, alMatrixTopNProtocolDirLocalIndex=alMatrixTopNProtocolDirLocalIndex, addressMapTimeMark=addressMapTimeMark, alMatrixTopNControlTable=alMatrixTopNControlTable, filterProtocolDirLocalIndex=filterProtocolDirLocalIndex, nlHostEntry=nlHostEntry, protocolDirOwner=protocolDirOwner, nlMatrixTopNControlStatus=nlMatrixTopNControlStatus, channelCreateTime=channelCreateTime, alMatrixDSTable=alMatrixDSTable, hostControlCreateTime=hostControlCreateTime, alMatrixTopNControlGrantedSize=alMatrixTopNControlGrantedSize, usrHistoryObjectSampleType=usrHistoryObjectSampleType, tokenRingMLStats2Entry=tokenRingMLStats2Entry, nlMatrixTopNSourceAddress=nlMatrixTopNSourceAddress, channel2Entry=channel2Entry, addressMapControlIndex=addressMapControlIndex, etherStatsCreateTime=etherStatsCreateTime, protocolDirParameters=protocolDirParameters, hlHostControlEntry=hlHostControlEntry, ControlString=ControlString, alMatrixTopNControlGeneratedReports=alMatrixTopNControlGeneratedReports, usrHistoryAbsValue=usrHistoryAbsValue, netDefaultGateway=netDefaultGateway, nlMatrixDSTable=nlMatrixDSTable, nlMatrixDSEntry=nlMatrixDSEntry, nlMatrixDSSourceAddress=nlMatrixDSSourceAddress, alMatrixTopNControlDuration=alMatrixTopNControlDuration, hlHostControlAlMaxDesiredEntries=hlHostControlAlMaxDesiredEntries, TimeFilter=TimeFilter, hlMatrixControlNlInserts=hlMatrixControlNlInserts, filter2Entry=filter2Entry, addressMap=addressMap, alMatrixDSEntry=alMatrixDSEntry, serialModemHangUpString=serialModemHangUpString, rmon2MIBCompliances=rmon2MIBCompliances, protocolDirectoryGroup=protocolDirectoryGroup, nlMatrixTopNControlRateBase=nlMatrixTopNControlRateBase, channel2Table=channel2Table, probeDownloadStatus=probeDownloadStatus, alMatrixTopNReversePktRate=alMatrixTopNReversePktRate, usrHistoryControlEntry=usrHistoryControlEntry, usrHistoryTable=usrHistoryTable, filter2Table=filter2Table, rmon2MIBApplicationLayerCompliance=rmon2MIBApplicationLayerCompliance, etherStats2Table=etherStats2Table, nlMatrixTopNControlGeneratedReports=nlMatrixTopNControlGeneratedReports, alMatrixSDTimeMark=alMatrixSDTimeMark)
mibBuilder.exportSymbols("RMON2-MIB", usrHistoryControlOwner=usrHistoryControlOwner, serialConnectionEntry=serialConnectionEntry, serialConnectionTable=serialConnectionTable, serialDialoutTimeout=serialDialoutTimeout, hlHostControlAlDeletes=hlHostControlAlDeletes, alMatrixDSOctets=alMatrixDSOctets, alMatrixSDOctets=alMatrixSDOctets, etherStats2Entry=etherStats2Entry, sourceRoutingStatsDroppedFrames=sourceRoutingStatsDroppedFrames, alMatrixTopNOctetRate=alMatrixTopNOctetRate, addressMapSource=addressMapSource, probeSoftwareRev=probeSoftwareRev, sourceRoutingStats2Entry=sourceRoutingStats2Entry, addressMapControlOwner=addressMapControlOwner, serialConnectStatus=serialConnectStatus, usrHistoryGroup=usrHistoryGroup, serialStatus=serialStatus, trapDestOwner=trapDestOwner, alMatrixGroup=alMatrixGroup, netConfigIPAddress=netConfigIPAddress, addressMapNetworkAddress=addressMapNetworkAddress, protocolDistControlDataSource=protocolDistControlDataSource, alMatrixDSCreateTime=alMatrixDSCreateTime, matrixControlDroppedFrames=matrixControlDroppedFrames, alMatrixTopNControlStatus=alMatrixTopNControlStatus, alHostOutOctets=alHostOutOctets, protocolDistributionGroup=protocolDistributionGroup, rmon2MIBGroups=rmon2MIBGroups, alMatrixSDTable=alMatrixSDTable, usrHistoryControlStatus=usrHistoryControlStatus, hostControlDroppedFrames=hostControlDroppedFrames, trapDestEntry=trapDestEntry, usrHistoryControlTable=usrHistoryControlTable, hlHostControlTable=hlHostControlTable, protocolDistStatsOctets=protocolDistStatsOctets, hlHostControlNlDroppedFrames=hlHostControlNlDroppedFrames, hlHostControlNlInserts=hlHostControlNlInserts, nlMatrixTopNPktRate=nlMatrixTopNPktRate, addressMapLastChange=addressMapLastChange, usrHistoryControlInterval=usrHistoryControlInterval, serialConfigTable=serialConfigTable, alMatrixSDPkts=alMatrixSDPkts, hlMatrixControlAlDroppedFrames=hlMatrixControlAlDroppedFrames, serialConnectOwner=serialConnectOwner, netConfigStatus=netConfigStatus, serialConnectType=serialConnectType, alMatrixTopNPktRate=alMatrixTopNPktRate, nlMatrixTopNReverseOctetRate=nlMatrixTopNReverseOctetRate)
