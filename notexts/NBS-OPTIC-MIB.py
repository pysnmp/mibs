#
# PySNMP MIB module NBS-OPTIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-OPTIC-MIB
# Produced by pysmi-1.1.12 at Thu Sep 26 02:16:34 2024
# On host fv-az1144-917 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
nbs, = mibBuilder.importSymbols("NBS-MIB", "nbs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter32, TimeTicks, iso, Bits, NotificationType, Gauge32, ModuleIdentity, ObjectIdentity, Unsigned32, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "TimeTicks", "iso", "Bits", "NotificationType", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nbsOpticMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 213))
if mibBuilder.loadTexts: nbsOpticMib.setLastUpdated('201209260000Z')
if mibBuilder.loadTexts: nbsOpticMib.setOrganization('NBS')
nbsOpticPortGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 213, 1))
if mibBuilder.loadTexts: nbsOpticPortGrp.setStatus('current')
nbsOpticPortTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 213, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortTableSize.setStatus('current')
nbsOpticPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 213, 1, 2), )
if mibBuilder.loadTexts: nbsOpticPortTable.setStatus('current')
nbsOpticPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1), ).setIndexNames((0, "NBS-OPTIC-MIB", "nbsOpticPortNdx"))
if mibBuilder.loadTexts: nbsOpticPortEntry.setStatus('current')
nbsOpticPortNdx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsOpticPortNdx.setStatus('current')
nbsOpticPortTxStatusAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsOpticPortTxStatusAdmin.setStatus('current')
nbsOpticPortTxStatusOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortTxStatusOper.setStatus('current')
nbsOpticPortRxStatusAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsOpticPortRxStatusAdmin.setStatus('current')
nbsOpticPortRxStatusOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortRxStatusOper.setStatus('current')
nbsOpticPortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortConnector.setStatus('current')
nbsOpticPortPolish = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("pc", 2), ("upc", 3), ("apc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortPolish.setStatus('current')
nbsOpticPortFiberMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("reserved2", 2), ("reserved3", 3), ("singleMode", 4), ("multiMode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortFiberMode.setStatus('current')
mibBuilder.exportSymbols("NBS-OPTIC-MIB", nbsOpticMib=nbsOpticMib, PYSNMP_MODULE_ID=nbsOpticMib, nbsOpticPortNdx=nbsOpticPortNdx, nbsOpticPortRxStatusOper=nbsOpticPortRxStatusOper, nbsOpticPortTableSize=nbsOpticPortTableSize, nbsOpticPortFiberMode=nbsOpticPortFiberMode, nbsOpticPortTxStatusAdmin=nbsOpticPortTxStatusAdmin, nbsOpticPortConnector=nbsOpticPortConnector, nbsOpticPortEntry=nbsOpticPortEntry, nbsOpticPortRxStatusAdmin=nbsOpticPortRxStatusAdmin, nbsOpticPortPolish=nbsOpticPortPolish, nbsOpticPortTable=nbsOpticPortTable, nbsOpticPortGrp=nbsOpticPortGrp, nbsOpticPortTxStatusOper=nbsOpticPortTxStatusOper)
