#
# PySNMP MIB module EQLIPADDR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/equallogic/EQLIPADDR-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 02:39:40 2024
# On host fv-az1200-411 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
UTFString, eqlGroupId = mibBuilder.importSymbols("EQLGROUP-MIB", "UTFString", "eqlGroupId")
eqlMemberIndex, = mibBuilder.importSymbols("EQLMEMBER-MIB", "eqlMemberIndex")
equalLogic, = mibBuilder.importSymbols("EQUALLOGIC-SMI", "equalLogic")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, IpAddress, Gauge32, iso, enterprises, NotificationType, Counter32, Bits, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "IpAddress", "Gauge32", "iso", "enterprises", "NotificationType", "Counter32", "Bits", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
eqlipaddrModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 12740, 9))
eqlipaddrModule.setRevisions(('2002-09-06 00:00',))
if mibBuilder.loadTexts: eqlipaddrModule.setLastUpdated('201503171528Z')
if mibBuilder.loadTexts: eqlipaddrModule.setOrganization('EqualLogic Inc.')
eqlipAddrTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 9, 1), )
if mibBuilder.loadTexts: eqlipAddrTable.setStatus('deprecated')
eqlipAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1), ).setIndexNames((0, "EQLGROUP-MIB", "eqlGroupId"), (0, "EQLMEMBER-MIB", "eqlMemberIndex"), (0, "EQLIPADDR-MIB", "eqlIpAdEntAddr"))
if mibBuilder.loadTexts: eqlipAddrEntry.setStatus('current')
eqlIpAdEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: eqlIpAdEntAddr.setStatus('current')
eqlIpAdEntIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlIpAdEntIfName.setStatus('current')
eqlIpAdEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlIpAdEntNetMask.setStatus('current')
eqlIpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlIpAdEntIfIndex.setStatus('current')
eqlIpAdEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlIpAdEntRowStatus.setStatus('current')
eqlifTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 9, 2), )
if mibBuilder.loadTexts: eqlifTable.setStatus('current')
eqlifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 9, 2, 1), ).setIndexNames((0, "EQLGROUP-MIB", "eqlGroupId"), (0, "EQLMEMBER-MIB", "eqlMemberIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eqlifEntry.setStatus('current')
eqlifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eqlifDescr.setStatus('current')
eqlifPortAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("attr-pss-only", 1), ("attr-initiator-only", 2), ("attr-any", 3))).clone('attr-any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eqlifPortAttr.setStatus('current')
eqlifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eqlifAdminStatus.setStatus('current')
eqlifRole = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("iscsi-only", 0), ("mgmt-only", 1))).clone('iscsi-only')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eqlifRole.setStatus('current')
eqlWKATable = MibTable((1, 3, 6, 1, 4, 1, 12740, 9, 3), )
if mibBuilder.loadTexts: eqlWKATable.setStatus('current')
eqlWKAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 9, 3, 1), ).setIndexNames((0, "EQLGROUP-MIB", "eqlGroupId"), (0, "EQLIPADDR-MIB", "eqlInetAddrEntAddrType"), (0, "EQLIPADDR-MIB", "eqlInetAddrEntAddr"))
if mibBuilder.loadTexts: eqlWKAEntry.setStatus('current')
eqlWKARowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlWKARowStatus.setStatus('current')
eqlWKARole = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("secondary", 2))).clone('secondary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlWKARole.setStatus('current')
eqlifStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 9, 4), )
if mibBuilder.loadTexts: eqlifStatusTable.setStatus('current')
eqlifStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 9, 4, 1), )
eqlifEntry.registerAugmentions(("EQLIPADDR-MIB", "eqlifStatusEntry"))
eqlifStatusEntry.setIndexNames(*eqlifEntry.getIndexNames())
if mibBuilder.loadTexts: eqlifStatusEntry.setStatus('current')
eqlifStatusMgmtRolePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("non-configurable", 0), ("configurable", 1), ("fixed", 2))).clone('non-configurable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlifStatusMgmtRolePolicy.setStatus('current')
eqlifStatusConfigurationFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 4, 1, 2), Bits().clone(namedValues=NamedValues(("isDcbCapable", 0), ("flag1", 1), ("flag2", 2), ("flag3", 3), ("flag4", 4), ("flag5", 5), ("flag6", 6), ("flag7", 7), ("flag8", 8), ("flag9", 9), ("flag10", 10), ("flag11", 11), ("flag12", 12), ("flag13", 13), ("flag14", 14), ("flag15", 15), ("flag16", 16), ("flag17", 17), ("flag18", 18), ("flag19", 19), ("flag20", 20), ("flag21", 21), ("flag22", 22), ("flag23", 23), ("flag24", 24), ("flag25", 25), ("flag26", 26), ("flag27", 27), ("flag28", 28), ("flag29", 29), ("flag30", 30), ("flag31", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlifStatusConfigurationFlags.setStatus('current')
eqlifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlifOperStatus.setStatus('current')
eqlinetAddrTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 9, 5), )
if mibBuilder.loadTexts: eqlinetAddrTable.setStatus('current')
eqlinetAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1), ).setIndexNames((0, "EQLGROUP-MIB", "eqlGroupId"), (0, "EQLMEMBER-MIB", "eqlMemberIndex"), (0, "EQLIPADDR-MIB", "eqlInetAddrEntAddrType"), (0, "EQLIPADDR-MIB", "eqlInetAddrEntAddr"))
if mibBuilder.loadTexts: eqlinetAddrEntry.setStatus('current')
eqlInetAddrEntAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: eqlInetAddrEntAddrType.setStatus('current')
eqlInetAddrEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: eqlInetAddrEntAddr.setStatus('current')
eqlInetAddrEntIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntIfName.setStatus('current')
eqlInetAddrEntNetMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntNetMaskType.setStatus('current')
eqlInetAddrEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntNetMask.setStatus('current')
eqlInetAddrEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntIfIndex.setStatus('current')
eqlInetAddrEntFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-options", 0), ("static", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntFlags.setStatus('current')
eqlInetAddrEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 9, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlInetAddrEntRowStatus.setStatus('current')
mibBuilder.exportSymbols("EQLIPADDR-MIB", eqlIpAdEntRowStatus=eqlIpAdEntRowStatus, eqlInetAddrEntRowStatus=eqlInetAddrEntRowStatus, eqlinetAddrEntry=eqlinetAddrEntry, eqlinetAddrTable=eqlinetAddrTable, eqlifDescr=eqlifDescr, eqlifStatusConfigurationFlags=eqlifStatusConfigurationFlags, eqlIpAdEntAddr=eqlIpAdEntAddr, eqlIpAdEntIfName=eqlIpAdEntIfName, eqlInetAddrEntAddrType=eqlInetAddrEntAddrType, eqlInetAddrEntIfName=eqlInetAddrEntIfName, eqlipAddrEntry=eqlipAddrEntry, eqlWKAEntry=eqlWKAEntry, eqlipAddrTable=eqlipAddrTable, eqlInetAddrEntAddr=eqlInetAddrEntAddr, eqlifStatusEntry=eqlifStatusEntry, eqlInetAddrEntIfIndex=eqlInetAddrEntIfIndex, eqlifPortAttr=eqlifPortAttr, eqlWKARole=eqlWKARole, eqlifStatusMgmtRolePolicy=eqlifStatusMgmtRolePolicy, eqlInetAddrEntNetMaskType=eqlInetAddrEntNetMaskType, eqlifOperStatus=eqlifOperStatus, eqlWKARowStatus=eqlWKARowStatus, eqlifAdminStatus=eqlifAdminStatus, eqlIpAdEntIfIndex=eqlIpAdEntIfIndex, eqlInetAddrEntFlags=eqlInetAddrEntFlags, eqlWKATable=eqlWKATable, eqlIpAdEntNetMask=eqlIpAdEntNetMask, eqlifRole=eqlifRole, eqlifEntry=eqlifEntry, eqlifTable=eqlifTable, eqlipaddrModule=eqlipaddrModule, eqlifStatusTable=eqlifStatusTable, PYSNMP_MODULE_ID=eqlipaddrModule, eqlInetAddrEntNetMask=eqlInetAddrEntNetMask)
