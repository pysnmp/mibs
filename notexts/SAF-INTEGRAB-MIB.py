#
# PySNMP MIB module SAF-INTEGRAB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/saf/SAF-INTEGRAB-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 12:03:44 2024
# On host fv-az1385-213 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
pointToPoint, = mibBuilder.importSymbols("SAF-ENTERPRISE", "pointToPoint")
safIntegra, = mibBuilder.importSymbols("SAF-INTEGRA-MIB", "safIntegra")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, Unsigned32, Counter64, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, IpAddress, Bits, NotificationType, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "Unsigned32", "Counter64", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "IpAddress", "Bits", "NotificationType", "ObjectIdentity", "MibIdentifier")
DisplayString, PhysAddress, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "DateAndTime", "TextualConvention")
integraB = ModuleIdentity((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1))
integraB.setRevisions(('2015-09-17 00:00', '2015-09-15 00:00', '2015-08-12 00:00', '2015-07-20 00:00', '2015-05-20 00:00', '2015-04-14 00:00', '2015-03-24 00:00', '2015-02-10 00:00', '2015-02-04 00:00', '2015-01-12 00:00', '2015-01-08 00:00', '2015-01-06 00:00', '2014-12-18 00:00', '2014-12-12 00:00', '2014-12-10 00:00', '2014-12-09 00:00', '2014-11-22 00:00', '2014-10-29 00:00', '2014-09-04 00:00', '2014-08-01 00:00', '2014-06-11 00:00', '2014-04-16 00:00', '2014-02-12 00:00', '2014-02-11 00:00', '2014-01-30 00:00', '2014-01-29 00:00', '2013-12-18 00:00', '2013-12-09 00:00', '2013-12-05 00:00', '2013-09-27 00:00', '2013-09-19 00:00',))
if mibBuilder.loadTexts: integraB.setLastUpdated('201509170000Z')
if mibBuilder.loadTexts: integraB.setOrganization('SAF Tehnika')
integraBtimestamp = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBtimestamp.setStatus('current')
integraBradio = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2))
integraBradioTxPower = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 1), Integer32()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBradioTxPower.setStatus('current')
integraBradioTxFrequency = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 2), Integer32()).setUnits('kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBradioTxFrequency.setStatus('current')
integraBradioRxLevel = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 3), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRxLevel.setStatus('current')
integraBradioSide = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("high", 1), ("low", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioSide.setStatus('current')
integraBradioTxMute = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioTxMute.setStatus('current')
integraBradioDuplexShift = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 6), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioDuplexShift.setStatus('current')
integraBradioRxFrequency = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 7), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRxFrequency.setStatus('current')
integraBradioTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 8), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioTemperature.setStatus('current')
integraBradioTxMuteDuration = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214748364))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBradioTxMuteDuration.setStatus('current')
integraBradioRangesTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10), )
if mibBuilder.loadTexts: integraBradioRangesTable.setStatus('current')
integraBradioRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10, 1), ).setIndexNames((0, "SAF-INTEGRAB-MIB", "integraBradioRangeEntryIndex"))
if mibBuilder.loadTexts: integraBradioRangeEntry.setStatus('current')
integraBradioRangeEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRangeEntryIndex.setStatus('current')
integraBradioRangeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRangeDescr.setStatus('current')
integraBradioRangeTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10, 1, 3), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRangeTxPower.setStatus('current')
integraBradioRangeTxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 10, 1, 4), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioRangeTxFrequency.setStatus('current')
integraBradioPLL = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("ok", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBradioPLL.setStatus('current')
integraBmodem = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3))
integraBmodemAcquireStatus = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acquireInProgress", 1), ("acquireLocked", 2), ("acquireFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemAcquireStatus.setStatus('current')
integraBmodemRadialMse = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 2), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemRadialMse.setStatus('current')
integraBmodemFECload = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemFECload.setStatus('current')
integraBmodemAcquireLastStatusDetails = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 12, 13))).clone(namedValues=NamedValues(("acquireLocked", 1), ("acquireSweep", 4), ("acquireMSEerror", 5), ("acquireBITerror", 6), ("acquireStopped", 12), ("acquireSMerror", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemAcquireLastStatusDetails.setStatus('current')
integraBmodemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 5), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemTemperature.setStatus('current')
integraBmodemBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 6), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemBandwidth.setStatus('current')
integraBmodemModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemModulation.setStatus('current')
integraBmodemRxModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemRxModulation.setStatus('current')
integraBmodemTxModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemTxModulation.setStatus('current')
integraBmodemRxCapacity = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 10), Integer32()).setUnits('kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemRxCapacity.setStatus('current')
integraBmodemTxCapacity = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 11), Integer32()).setUnits('kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemTxCapacity.setStatus('current')
integraBmodemACMengine = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemACMengine.setStatus('current')
integraBmodemCarrierOffset = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 3, 13), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBmodemCarrierOffset.setStatus('current')
integraBsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4))
integraBsysCPUtemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 2), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysCPUtemperature.setStatus('current')
integraBsysLicenseExpire = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 3), Gauge32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysLicenseExpire.setStatus('current')
integraBsysLicenseGenStatus = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("expired", 2), ("unknown", 3), ("unlimitedTime", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysLicenseGenStatus.setStatus('current')
integraBsysPSUvoltage = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 5), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysPSUvoltage.setStatus('current')
integraBsysPSUcurrent = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 6), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysPSUcurrent.setStatus('current')
integraBsysPSUpower = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 7), Integer32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysPSUpower.setStatus('current')
integraBsysBoardTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 8), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysBoardTemperature.setStatus('current')
integraBsysFreeMemory = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 9), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysFreeMemory.setStatus('current')
integraBsysCPUidle = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 4, 10), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBsysCPUidle.setStatus('current')
integraBethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5))
integraBifStatusTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1), )
if mibBuilder.loadTexts: integraBifStatusTable.setStatus('current')
integraBifPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1), ).setIndexNames((0, "SAF-INTEGRAB-MIB", "integraBifPortStatIndex"))
if mibBuilder.loadTexts: integraBifPortEntry.setStatus('current')
integraBifPortStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortStatIndex.setStatus('current')
integraBifPortStatDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortStatDescr.setStatus('current')
integraBifPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortType.setStatus('current')
integraBifPortMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 4), Integer32()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortMtu.setStatus('current')
integraBifPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 5), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortSpeed.setStatus('current')
integraBifPortPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortPhysAddress.setStatus('current')
integraBifPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortAdminStatus.setStatus('current')
integraBifPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortOperStatus.setStatus('current')
integraBifPortLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortLastChange.setStatus('current')
integraBifPortAutoneg = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortAutoneg.setStatus('current')
integraBifPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortDuplex.setStatus('current')
integraBifPortSyncEthActive = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortSyncEthActive.setStatus('current')
integraBifPortSyncEthPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortSyncEthPrio.setStatus('current')
integraBifPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortFlowControl.setStatus('current')
integraBifStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2), )
if mibBuilder.loadTexts: integraBifStatisticsTable.setStatus('current')
integraBifPortStcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1), ).setIndexNames((0, "SAF-INTEGRAB-MIB", "integraBifPortStcIndex"))
if mibBuilder.loadTexts: integraBifPortStcEntry.setStatus('current')
integraBifPortStcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortStcIndex.setStatus('current')
integraBifPortStcDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortStcDescr.setStatus('current')
integraBifTimePassed = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 3), TimeTicks()).setUnits('s/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTimePassed.setStatus('current')
integraBifIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 4), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIngressPackets.setStatus('current')
integraBifIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 5), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIngressBytes.setStatus('current')
integraBifEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 6), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEgressPackets.setStatus('current')
integraBifEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 7), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEgressBytes.setStatus('current')
integraBifEtherStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 8), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsMulticastPkts.setStatus('current')
integraBifEtherStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 9), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsBroadcastPkts.setStatus('current')
integraBifEtherStatsPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 10), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts64Octets.setStatus('current')
integraBifEtherStatsPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 11), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts65to127Octets.setStatus('current')
integraBifEtherStatsPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 12), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts128to255Octets.setStatus('current')
integraBifEtherStatsPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 13), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts256to511Octets.setStatus('current')
integraBifEtherStatsPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 14), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts512to1023Octets.setStatus('current')
integraBifEtherStatsPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 15), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts1024to1518Octets.setStatus('current')
integraBifEtherStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 16), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsOversizePkts.setStatus('current')
integraBifEtherRxOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 17), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherRxOversizePkts.setStatus('current')
integraBifEtherTxOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 18), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherTxOversizePkts.setStatus('current')
integraBifEtherStatsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 19), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsOctets.setStatus('current')
integraBifEtherStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 20), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts.setStatus('current')
integraBifEtherStatsTXNoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 21), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsTXNoErrors.setStatus('current')
integraBifEtherStatsRXNoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 22), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsRXNoErrors.setStatus('current')
integraBifEtherStatsPkts1519to1522Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 23), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsPkts1519to1522Octets.setStatus('current')
integraBifIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 24), Counter64()).setUnits('octet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfInOctets.setStatus('current')
integraBifIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 25), Counter64()).setUnits('octet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfOutOctets.setStatus('current')
integraBifDot1dTpPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 26), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifDot1dTpPortInFrames.setStatus('current')
integraBifDot1dTpPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 27), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifDot1dTpPortOutFrames.setStatus('current')
integraBifReceivedPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 28), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts64Octets.setStatus('current')
integraBifTransmittedPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 29), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts64Octets.setStatus('current')
integraBifReceivedPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 30), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts65to127Octets.setStatus('current')
integraBifTransmittedPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 31), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts65to127Octets.setStatus('current')
integraBifReceivedPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 32), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts128to255Octets.setStatus('current')
integraBifTransmittedPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 33), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts128to255Octets.setStatus('current')
integraBifReceivedPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 34), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts256to511Octets.setStatus('current')
integraBifTransmittedPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 35), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts256to511Octets.setStatus('current')
integraBifReceivedPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 36), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts512to1023Octets.setStatus('current')
integraBifTransmittedPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 37), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts512to1023Octets.setStatus('current')
integraBifReceivedPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 38), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifReceivedPkts1024to1518Octets.setStatus('current')
integraBifTransmittedPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 39), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifTransmittedPkts1024to1518Octets.setStatus('current')
integraBifIfInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 40), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfInBroadcastPkts.setStatus('current')
integraBifIfOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 41), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfOutBroadcastPkts.setStatus('current')
integraBifIfInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 42), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfInMulticastPkts.setStatus('current')
integraBifIfOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 43), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIfOutMulticastPkts.setStatus('current')
integraBifDot3InPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 44), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifDot3InPauseFrames.setStatus('current')
integraBifDot3OutPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 45), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifDot3OutPauseFrames.setStatus('current')
integraBifEtherStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 46), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsUndersizePkts.setStatus('current')
integraBifEtherStatsFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 47), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsFragments.setStatus('current')
integraBifEtherStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 48), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsCRCAlignErrors.setStatus('current')
integraBifEtherStatsJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 49), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEtherStatsJabbers.setStatus('current')
integraBifIngressBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 50), Integer32()).setUnits('Bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIngressBPS.setStatus('current')
integraBifIngressPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 51), Integer32()).setUnits('pps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIngressPPS.setStatus('current')
integraBifEgressBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 52), Integer32()).setUnits('Bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEgressBPS.setStatus('current')
integraBifEgressPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 53), Integer32()).setUnits('pps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEgressPPS.setStatus('current')
integraBifMAClearnLimitDropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 54), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifMAClearnLimitDropIngressPackets.setStatus('current')
integraBifL2cacheDropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 55), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifL2cacheDropIngressPackets.setStatus('current')
integraBifEFMdropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 56), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEFMdropIngressPackets.setStatus('current')
integraBifEFMdropEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 57), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifEFMdropEgressPackets.setStatus('current')
integraBifSTPdropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 58), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifSTPdropIngressPackets.setStatus('current')
integraBifSTPdropEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 59), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifSTPdropEgressPackets.setStatus('current')
integraBifMRUdropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 60), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifMRUdropIngressPackets.setStatus('current')
integraBifMRUdropEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 61), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifMRUdropEgressPackets.setStatus('current')
integraBifFilterDropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 62), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifFilterDropIngressPackets.setStatus('current')
integraBifFlowClassifierDropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 63), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifFlowClassifierDropIngressPackets.setStatus('current')
integraBifFlowClassifierDropEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 64), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifFlowClassifierDropEgressPackets.setStatus('current')
integraBifIllegalSAdropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 65), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifIllegalSAdropIngressPackets.setStatus('current')
integraBifPortRateLimitDropIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 66), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortRateLimitDropIngressPackets.setStatus('current')
integraBifPortRateLimitDropIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 67), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPortRateLimitDropIngressBytes.setStatus('current')
integraBifPausePFCframesGeneratedIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 68), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPausePFCframesGeneratedIngressPackets.setStatus('current')
integraBifPausePFCframesGeneratedEgressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 69), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifPausePFCframesGeneratedEgressPackets.setStatus('current')
integraBifRateLimitDropForUnknownUnicastIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 70), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForUnknownUnicastIngressPackets.setStatus('current')
integraBifRateLimitDropForUnknownUnicastIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 71), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForUnknownUnicastIngressBytes.setStatus('current')
integraBifRateLimitDropForBroadcastIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 72), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForBroadcastIngressPackets.setStatus('current')
integraBifRateLimitDropForBroadcastIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 73), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForBroadcastIngressBytes.setStatus('current')
integraBifRateLimitDropForKnownMulticastIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 74), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForKnownMulticastIngressPackets.setStatus('current')
integraBifRateLimitDropForKnownMulticastIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 75), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForKnownMulticastIngressBytes.setStatus('current')
integraBifRateLimitDropForUnknownMulticastIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 76), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForUnknownMulticastIngressPackets.setStatus('current')
integraBifRateLimitDropForUnknownMulticastIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 77), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifRateLimitDropForUnknownMulticastIngressBytes.setStatus('current')
integraBifAllCoSQoutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 78), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifAllCoSQoutPackets.setStatus('current')
integraBifAllCoSQoutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 79), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifAllCoSQoutBytes.setStatus('current')
integraBifAllCoSQdroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 80), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifAllCoSQdroppedPackets.setStatus('current')
integraBifAllCoSQdroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 81), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifAllCoSQdroppedBytes.setStatus('current')
integraBifProcessedRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 82), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifProcessedRxPackets.setStatus('current')
integraBifProcessedRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 2, 1, 83), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifProcessedRxBytes.setStatus('current')
integraBifQosStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3), )
if mibBuilder.loadTexts: integraBifQosStatisticsTable.setStatus('current')
integraBifCosqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1), ).setIndexNames((0, "SAF-INTEGRAB-MIB", "integraBifCosqIfaceIndex"))
if mibBuilder.loadTexts: integraBifCosqEntry.setStatus('current')
integraBifCosqIfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqIfaceIndex.setStatus('current')
integraBifCosqIfaceDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqIfaceDescr.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 3), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ0.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 4), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ0.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 5), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ0.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 6), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ0.setStatus('current')
integraBifCosqStatOutPacketsCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 7), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ0.setStatus('current')
integraBifCosqStatOutBytesCoSQ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 8), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ0.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 9), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ1.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 10), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ1.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 11), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ1.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 12), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ1.setStatus('current')
integraBifCosqStatOutPacketsCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 13), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ1.setStatus('current')
integraBifCosqStatOutBytesCoSQ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 14), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ1.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 15), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ2.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 16), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ2.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 17), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ2.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 18), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ2.setStatus('current')
integraBifCosqStatOutPacketsCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 19), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ2.setStatus('current')
integraBifCosqStatOutBytesCoSQ2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 20), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ2.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 21), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ3.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 22), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ3.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 23), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ3.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 24), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ3.setStatus('current')
integraBifCosqStatOutPacketsCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 25), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ3.setStatus('current')
integraBifCosqStatOutBytesCoSQ3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 26), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ3.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 27), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ4.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 28), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ4.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 29), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ4.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 30), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ4.setStatus('current')
integraBifCosqStatOutPacketsCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 31), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ4.setStatus('current')
integraBifCosqStatOutBytesCoSQ4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 32), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ4.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 33), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ5.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 34), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ5.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 35), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ5.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 36), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ5.setStatus('current')
integraBifCosqStatOutPacketsCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 37), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ5.setStatus('current')
integraBifCosqStatOutBytesCoSQ5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 38), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ5.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 39), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ6.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 40), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ6.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 41), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ6.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 42), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ6.setStatus('current')
integraBifCosqStatOutPacketsCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 43), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ6.setStatus('current')
integraBifCosqStatOutBytesCoSQ6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 44), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ6.setStatus('current')
integraBifCosqStatDroppedPacketsCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 45), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedPacketsCoSQ7.setStatus('current')
integraBifCosqStatDroppedBytesCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 46), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatDroppedBytesCoSQ7.setStatus('current')
integraBifCosqStatGreenDiscardDroppedPacketsCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 47), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatGreenDiscardDroppedPacketsCoSQ7.setStatus('current')
integraBifCosqStatYellowDiscardDroppedPacketsCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 48), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatYellowDiscardDroppedPacketsCoSQ7.setStatus('current')
integraBifCosqStatOutPacketsCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 49), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutPacketsCoSQ7.setStatus('current')
integraBifCosqStatOutBytesCoSQ7 = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 5, 3, 1, 50), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBifCosqStatOutBytesCoSQ7.setStatus('current')
integraBexecuteConfig = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("execute", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBexecuteConfig.setStatus('current')
integraBneedStore = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBneedStore.setStatus('current')
integraBstoreConfig = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("store", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBstoreConfig.setStatus('current')
integraBnetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 9))
integraBnetCfgIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 9, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBnetCfgIPaddress.setStatus('current')
integraBnetCfgIPmask = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 9, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBnetCfgIPmask.setStatus('current')
integraBnetCfgIPgateway = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 9, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraBnetCfgIPgateway.setStatus('current')
integraBnetCfgRemoteIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 9, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraBnetCfgRemoteIPaddress.setStatus('current')
integraBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10))
integraBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 1))
integraBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 1, 1)).setObjects(("SAF-INTEGRAB-MIB", "integraBMiscGroup"), ("SAF-INTEGRAB-MIB", "integraBRadioGroup"), ("SAF-INTEGRAB-MIB", "integraBModemGroup"), ("SAF-INTEGRAB-MIB", "integraBSystemGroup"), ("SAF-INTEGRAB-MIB", "integraBEthernetGeneralGroup"), ("SAF-INTEGRAB-MIB", "integraBEthernetMiiPortGroup"), ("SAF-INTEGRAB-MIB", "integraBEthernetQosQueueGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBCompliance = integraBCompliance.setStatus('current')
integraBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2))
integraBMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 1)).setObjects(("SAF-INTEGRAB-MIB", "integraBtimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBMiscGroup = integraBMiscGroup.setStatus('current')
integraBRadioGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 2)).setObjects(("SAF-INTEGRAB-MIB", "integraBradioTxPower"), ("SAF-INTEGRAB-MIB", "integraBradioTxFrequency"), ("SAF-INTEGRAB-MIB", "integraBradioRxLevel"), ("SAF-INTEGRAB-MIB", "integraBradioSide"), ("SAF-INTEGRAB-MIB", "integraBradioTxMute"), ("SAF-INTEGRAB-MIB", "integraBradioDuplexShift"), ("SAF-INTEGRAB-MIB", "integraBradioRxFrequency"), ("SAF-INTEGRAB-MIB", "integraBradioTemperature"), ("SAF-INTEGRAB-MIB", "integraBradioTxMuteDuration"), ("SAF-INTEGRAB-MIB", "integraBradioRangeEntryIndex"), ("SAF-INTEGRAB-MIB", "integraBradioRangeDescr"), ("SAF-INTEGRAB-MIB", "integraBradioRangeTxPower"), ("SAF-INTEGRAB-MIB", "integraBradioRangeTxFrequency"), ("SAF-INTEGRAB-MIB", "integraBradioPLL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBRadioGroup = integraBRadioGroup.setStatus('current')
integraBModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 3)).setObjects(("SAF-INTEGRAB-MIB", "integraBmodemAcquireStatus"), ("SAF-INTEGRAB-MIB", "integraBmodemRadialMse"), ("SAF-INTEGRAB-MIB", "integraBmodemFECload"), ("SAF-INTEGRAB-MIB", "integraBmodemAcquireLastStatusDetails"), ("SAF-INTEGRAB-MIB", "integraBmodemTemperature"), ("SAF-INTEGRAB-MIB", "integraBmodemBandwidth"), ("SAF-INTEGRAB-MIB", "integraBmodemModulation"), ("SAF-INTEGRAB-MIB", "integraBmodemRxModulation"), ("SAF-INTEGRAB-MIB", "integraBmodemTxModulation"), ("SAF-INTEGRAB-MIB", "integraBmodemRxCapacity"), ("SAF-INTEGRAB-MIB", "integraBmodemTxCapacity"), ("SAF-INTEGRAB-MIB", "integraBmodemACMengine"), ("SAF-INTEGRAB-MIB", "integraBmodemCarrierOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBModemGroup = integraBModemGroup.setStatus('current')
integraBSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 4)).setObjects(("SAF-INTEGRAB-MIB", "integraBsysCPUtemperature"), ("SAF-INTEGRAB-MIB", "integraBsysLicenseExpire"), ("SAF-INTEGRAB-MIB", "integraBsysLicenseGenStatus"), ("SAF-INTEGRAB-MIB", "integraBsysPSUvoltage"), ("SAF-INTEGRAB-MIB", "integraBsysPSUcurrent"), ("SAF-INTEGRAB-MIB", "integraBsysPSUpower"), ("SAF-INTEGRAB-MIB", "integraBsysBoardTemperature"), ("SAF-INTEGRAB-MIB", "integraBsysFreeMemory"), ("SAF-INTEGRAB-MIB", "integraBsysCPUidle"), ("SAF-INTEGRAB-MIB", "integraBexecuteConfig"), ("SAF-INTEGRAB-MIB", "integraBneedStore"), ("SAF-INTEGRAB-MIB", "integraBstoreConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBSystemGroup = integraBSystemGroup.setStatus('current')
integraBEthernetGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 5)).setObjects(("SAF-INTEGRAB-MIB", "integraBifPortStatIndex"), ("SAF-INTEGRAB-MIB", "integraBifPortStatDescr"), ("SAF-INTEGRAB-MIB", "integraBifPortType"), ("SAF-INTEGRAB-MIB", "integraBifPortMtu"), ("SAF-INTEGRAB-MIB", "integraBifPortSpeed"), ("SAF-INTEGRAB-MIB", "integraBifPortPhysAddress"), ("SAF-INTEGRAB-MIB", "integraBifPortAdminStatus"), ("SAF-INTEGRAB-MIB", "integraBifPortOperStatus"), ("SAF-INTEGRAB-MIB", "integraBifPortLastChange"), ("SAF-INTEGRAB-MIB", "integraBifPortAutoneg"), ("SAF-INTEGRAB-MIB", "integraBifPortDuplex"), ("SAF-INTEGRAB-MIB", "integraBifPortSyncEthActive"), ("SAF-INTEGRAB-MIB", "integraBifPortSyncEthPrio"), ("SAF-INTEGRAB-MIB", "integraBifPortFlowControl"), ("SAF-INTEGRAB-MIB", "integraBifPortStcIndex"), ("SAF-INTEGRAB-MIB", "integraBifPortStcDescr"), ("SAF-INTEGRAB-MIB", "integraBifTimePassed"), ("SAF-INTEGRAB-MIB", "integraBifIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifEgressBytes"), ("SAF-INTEGRAB-MIB", "integraBifEtherRxOversizePkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherTxOversizePkts"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts64Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts64Octets"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts65to127Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts65to127Octets"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts128to255Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts128to255Octets"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts256to511Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts256to511Octets"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts512to1023Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts512to1023Octets"), ("SAF-INTEGRAB-MIB", "integraBifReceivedPkts1024to1518Octets"), ("SAF-INTEGRAB-MIB", "integraBifTransmittedPkts1024to1518Octets"), ("SAF-INTEGRAB-MIB", "integraBifIfInBroadcastPkts"), ("SAF-INTEGRAB-MIB", "integraBifIfOutBroadcastPkts"), ("SAF-INTEGRAB-MIB", "integraBifIfInMulticastPkts"), ("SAF-INTEGRAB-MIB", "integraBifIfOutMulticastPkts"), ("SAF-INTEGRAB-MIB", "integraBifIngressBPS"), ("SAF-INTEGRAB-MIB", "integraBifIngressPPS"), ("SAF-INTEGRAB-MIB", "integraBifEgressBPS"), ("SAF-INTEGRAB-MIB", "integraBifEgressPPS"), ("SAF-INTEGRAB-MIB", "integraBifMAClearnLimitDropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifL2cacheDropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifEFMdropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifEFMdropEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifSTPdropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifSTPdropEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifMRUdropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifMRUdropEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifFilterDropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifFlowClassifierDropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifFlowClassifierDropEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifIllegalSAdropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifPortRateLimitDropIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifPortRateLimitDropIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifPausePFCframesGeneratedIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifPausePFCframesGeneratedEgressPackets"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForUnknownUnicastIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForUnknownUnicastIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForBroadcastIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForBroadcastIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForKnownMulticastIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForKnownMulticastIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForUnknownMulticastIngressPackets"), ("SAF-INTEGRAB-MIB", "integraBifRateLimitDropForUnknownMulticastIngressBytes"), ("SAF-INTEGRAB-MIB", "integraBifAllCoSQoutPackets"), ("SAF-INTEGRAB-MIB", "integraBifAllCoSQoutBytes"), ("SAF-INTEGRAB-MIB", "integraBifAllCoSQdroppedPackets"), ("SAF-INTEGRAB-MIB", "integraBifAllCoSQdroppedBytes"), ("SAF-INTEGRAB-MIB", "integraBifProcessedRxPackets"), ("SAF-INTEGRAB-MIB", "integraBifProcessedRxBytes"), ("SAF-INTEGRAB-MIB", "integraBnetCfgIPaddress"), ("SAF-INTEGRAB-MIB", "integraBnetCfgIPmask"), ("SAF-INTEGRAB-MIB", "integraBnetCfgIPgateway"), ("SAF-INTEGRAB-MIB", "integraBnetCfgRemoteIPaddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBEthernetGeneralGroup = integraBEthernetGeneralGroup.setStatus('current')
integraBEthernetMiiPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 6)).setObjects(("SAF-INTEGRAB-MIB", "integraBifEtherStatsMulticastPkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsBroadcastPkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts64Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts65to127Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts128to255Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts256to511Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts512to1023Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts1024to1518Octets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsOversizePkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsOctets"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsTXNoErrors"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsRXNoErrors"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsPkts1519to1522Octets"), ("SAF-INTEGRAB-MIB", "integraBifIfInOctets"), ("SAF-INTEGRAB-MIB", "integraBifIfOutOctets"), ("SAF-INTEGRAB-MIB", "integraBifDot1dTpPortInFrames"), ("SAF-INTEGRAB-MIB", "integraBifDot1dTpPortOutFrames"), ("SAF-INTEGRAB-MIB", "integraBifDot3InPauseFrames"), ("SAF-INTEGRAB-MIB", "integraBifDot3OutPauseFrames"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsUndersizePkts"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsFragments"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsCRCAlignErrors"), ("SAF-INTEGRAB-MIB", "integraBifEtherStatsJabbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBEthernetMiiPortGroup = integraBEthernetMiiPortGroup.setStatus('current')
integraBEthernetQosQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 1, 10, 2, 7)).setObjects(("SAF-INTEGRAB-MIB", "integraBifCosqIfaceIndex"), ("SAF-INTEGRAB-MIB", "integraBifCosqIfaceDescr"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ0"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ1"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ2"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ3"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ4"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ5"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ6"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedPacketsCoSQ7"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatDroppedBytesCoSQ7"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatGreenDiscardDroppedPacketsCoSQ7"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatYellowDiscardDroppedPacketsCoSQ7"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutPacketsCoSQ7"), ("SAF-INTEGRAB-MIB", "integraBifCosqStatOutBytesCoSQ7"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraBEthernetQosQueueGroup = integraBEthernetQosQueueGroup.setStatus('current')
mibBuilder.exportSymbols("SAF-INTEGRAB-MIB", integraBradioTxPower=integraBradioTxPower, integraBmodemAcquireStatus=integraBmodemAcquireStatus, integraBifEtherStatsOctets=integraBifEtherStatsOctets, integraBifIfInBroadcastPkts=integraBifIfInBroadcastPkts, integraBsysPSUcurrent=integraBsysPSUcurrent, integraBmodemRxCapacity=integraBmodemRxCapacity, integraBifEtherStatsPkts65to127Octets=integraBifEtherStatsPkts65to127Octets, integraBifIngressPackets=integraBifIngressPackets, integraBRadioGroup=integraBRadioGroup, integraBifIngressBPS=integraBifIngressBPS, integraBradioRangeEntryIndex=integraBradioRangeEntryIndex, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ5=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ5, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ1=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ1, integraBnetCfgIPaddress=integraBnetCfgIPaddress, integraBifCosqStatOutBytesCoSQ6=integraBifCosqStatOutBytesCoSQ6, integraBifRateLimitDropForUnknownMulticastIngressPackets=integraBifRateLimitDropForUnknownMulticastIngressPackets, integraBEthernetGeneralGroup=integraBEthernetGeneralGroup, integraBifRateLimitDropForBroadcastIngressPackets=integraBifRateLimitDropForBroadcastIngressPackets, integraBifTimePassed=integraBifTimePassed, integraBifCosqStatDroppedPacketsCoSQ4=integraBifCosqStatDroppedPacketsCoSQ4, integraBifReceivedPkts65to127Octets=integraBifReceivedPkts65to127Octets, integraBifEtherStatsPkts=integraBifEtherStatsPkts, integraBifFilterDropIngressPackets=integraBifFilterDropIngressPackets, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ5=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ5, integraBsysFreeMemory=integraBsysFreeMemory, integraBradioSide=integraBradioSide, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ0=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ0, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ7=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ7, integraBsysLicenseExpire=integraBsysLicenseExpire, integraBifEtherStatsCRCAlignErrors=integraBifEtherStatsCRCAlignErrors, integraBifReceivedPkts128to255Octets=integraBifReceivedPkts128to255Octets, integraBifIfInMulticastPkts=integraBifIfInMulticastPkts, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ3=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ3, integraBifCosqStatDroppedBytesCoSQ1=integraBifCosqStatDroppedBytesCoSQ1, integraBifCosqStatOutPacketsCoSQ3=integraBifCosqStatOutPacketsCoSQ3, integraBifProcessedRxPackets=integraBifProcessedRxPackets, integraBradioRangeDescr=integraBradioRangeDescr, integraBifPortPhysAddress=integraBifPortPhysAddress, integraBifEtherStatsBroadcastPkts=integraBifEtherStatsBroadcastPkts, integraBifCosqStatOutBytesCoSQ3=integraBifCosqStatOutBytesCoSQ3, integraBmodemBandwidth=integraBmodemBandwidth, integraBsysCPUidle=integraBsysCPUidle, integraBmodemTemperature=integraBmodemTemperature, integraBifPortStatDescr=integraBifPortStatDescr, integraBifCosqStatDroppedPacketsCoSQ7=integraBifCosqStatDroppedPacketsCoSQ7, integraBifCosqStatOutBytesCoSQ0=integraBifCosqStatOutBytesCoSQ0, integraBifIfOutMulticastPkts=integraBifIfOutMulticastPkts, integraBifStatisticsTable=integraBifStatisticsTable, integraB=integraB, integraBifReceivedPkts1024to1518Octets=integraBifReceivedPkts1024to1518Octets, integraBifDot3OutPauseFrames=integraBifDot3OutPauseFrames, integraBifCosqStatDroppedBytesCoSQ0=integraBifCosqStatDroppedBytesCoSQ0, integraBifCosqStatOutBytesCoSQ5=integraBifCosqStatOutBytesCoSQ5, integraBifCosqStatDroppedBytesCoSQ5=integraBifCosqStatDroppedBytesCoSQ5, integraBConformance=integraBConformance, integraBEthernetMiiPortGroup=integraBEthernetMiiPortGroup, integraBCompliances=integraBCompliances, integraBsysLicenseGenStatus=integraBsysLicenseGenStatus, integraBifStatusTable=integraBifStatusTable, integraBifEtherStatsTXNoErrors=integraBifEtherStatsTXNoErrors, integraBmodemCarrierOffset=integraBmodemCarrierOffset, integraBifPortStcDescr=integraBifPortStcDescr, integraBifPortLastChange=integraBifPortLastChange, PYSNMP_MODULE_ID=integraB, integraBifQosStatisticsTable=integraBifQosStatisticsTable, integraBifCosqStatDroppedBytesCoSQ6=integraBifCosqStatDroppedBytesCoSQ6, integraBifAllCoSQoutBytes=integraBifAllCoSQoutBytes, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ0=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ0, integraBifMRUdropIngressPackets=integraBifMRUdropIngressPackets, integraBifProcessedRxBytes=integraBifProcessedRxBytes, integraBmodem=integraBmodem, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ3=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ3, integraBifAllCoSQdroppedBytes=integraBifAllCoSQdroppedBytes, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ6=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ6, integraBmodemModulation=integraBmodemModulation, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ7=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ7, integraBnetCfgIPgateway=integraBnetCfgIPgateway, integraBifCosqStatDroppedBytesCoSQ7=integraBifCosqStatDroppedBytesCoSQ7, integraBifCosqStatOutBytesCoSQ1=integraBifCosqStatOutBytesCoSQ1, integraBGroups=integraBGroups, integraBifCosqStatDroppedBytesCoSQ2=integraBifCosqStatDroppedBytesCoSQ2, integraBifRateLimitDropForBroadcastIngressBytes=integraBifRateLimitDropForBroadcastIngressBytes, integraBsysBoardTemperature=integraBsysBoardTemperature, integraBradioRangeTxPower=integraBradioRangeTxPower, integraBifCosqStatOutPacketsCoSQ6=integraBifCosqStatOutPacketsCoSQ6, integraBifEtherStatsPkts512to1023Octets=integraBifEtherStatsPkts512to1023Octets, integraBifEtherStatsPkts1024to1518Octets=integraBifEtherStatsPkts1024to1518Octets, integraBifPortEntry=integraBifPortEntry, integraBifEgressPackets=integraBifEgressPackets, integraBsysPSUvoltage=integraBsysPSUvoltage, integraBifPortType=integraBifPortType, integraBifAllCoSQdroppedPackets=integraBifAllCoSQdroppedPackets, integraBmodemFECload=integraBmodemFECload, integraBifEtherStatsJabbers=integraBifEtherStatsJabbers, integraBifPortStcEntry=integraBifPortStcEntry, integraBifRateLimitDropForUnknownUnicastIngressBytes=integraBifRateLimitDropForUnknownUnicastIngressBytes, integraBtimestamp=integraBtimestamp, integraBneedStore=integraBneedStore, integraBifEtherStatsPkts1519to1522Octets=integraBifEtherStatsPkts1519to1522Octets, integraBifEtherRxOversizePkts=integraBifEtherRxOversizePkts, integraBifEtherTxOversizePkts=integraBifEtherTxOversizePkts, integraBifEFMdropEgressPackets=integraBifEFMdropEgressPackets, integraBradioTxMute=integraBradioTxMute, integraBsysPSUpower=integraBsysPSUpower, integraBmodemTxCapacity=integraBmodemTxCapacity, integraBifCosqStatOutPacketsCoSQ0=integraBifCosqStatOutPacketsCoSQ0, integraBifCosqStatOutPacketsCoSQ4=integraBifCosqStatOutPacketsCoSQ4, integraBifCosqStatDroppedPacketsCoSQ6=integraBifCosqStatDroppedPacketsCoSQ6, integraBifEtherStatsOversizePkts=integraBifEtherStatsOversizePkts, integraBradio=integraBradio, integraBradioDuplexShift=integraBradioDuplexShift, integraBifEtherStatsPkts128to255Octets=integraBifEtherStatsPkts128to255Octets, integraBifTransmittedPkts65to127Octets=integraBifTransmittedPkts65to127Octets, integraBifCosqStatDroppedPacketsCoSQ2=integraBifCosqStatDroppedPacketsCoSQ2, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ4=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ4, integraBmodemAcquireLastStatusDetails=integraBmodemAcquireLastStatusDetails, integraBsystem=integraBsystem, integraBifPortDuplex=integraBifPortDuplex, integraBifIfOutOctets=integraBifIfOutOctets, integraBifPortMtu=integraBifPortMtu, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ4=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ4, integraBEthernetQosQueueGroup=integraBEthernetQosQueueGroup, integraBradioTemperature=integraBradioTemperature, integraBifReceivedPkts64Octets=integraBifReceivedPkts64Octets, integraBsysCPUtemperature=integraBsysCPUtemperature, integraBifPortRateLimitDropIngressPackets=integraBifPortRateLimitDropIngressPackets, integraBifIngressBytes=integraBifIngressBytes, integraBifReceivedPkts256to511Octets=integraBifReceivedPkts256to511Octets, integraBnetCfgRemoteIPaddress=integraBnetCfgRemoteIPaddress, integraBifEtherStatsPkts256to511Octets=integraBifEtherStatsPkts256to511Octets, integraBifCosqStatOutBytesCoSQ2=integraBifCosqStatOutBytesCoSQ2, integraBifEtherStatsUndersizePkts=integraBifEtherStatsUndersizePkts, integraBifTransmittedPkts128to255Octets=integraBifTransmittedPkts128to255Octets, integraBifEtherStatsPkts64Octets=integraBifEtherStatsPkts64Octets, integraBSystemGroup=integraBSystemGroup, integraBifCosqStatOutPacketsCoSQ2=integraBifCosqStatOutPacketsCoSQ2, integraBifCosqStatOutPacketsCoSQ7=integraBifCosqStatOutPacketsCoSQ7, integraBradioTxMuteDuration=integraBradioTxMuteDuration, integraBifTransmittedPkts64Octets=integraBifTransmittedPkts64Octets, integraBethernet=integraBethernet, integraBModemGroup=integraBModemGroup, integraBradioRxFrequency=integraBradioRxFrequency, integraBifCosqStatDroppedPacketsCoSQ0=integraBifCosqStatDroppedPacketsCoSQ0, integraBifCosqStatDroppedBytesCoSQ3=integraBifCosqStatDroppedBytesCoSQ3, integraBifDot1dTpPortInFrames=integraBifDot1dTpPortInFrames, integraBifIfOutBroadcastPkts=integraBifIfOutBroadcastPkts, integraBifIngressPPS=integraBifIngressPPS, integraBifEgressBPS=integraBifEgressBPS, integraBifFlowClassifierDropEgressPackets=integraBifFlowClassifierDropEgressPackets, integraBifRateLimitDropForUnknownUnicastIngressPackets=integraBifRateLimitDropForUnknownUnicastIngressPackets, integraBnetCfgIPmask=integraBnetCfgIPmask, integraBstoreConfig=integraBstoreConfig, integraBifIfInOctets=integraBifIfInOctets, integraBifPortAutoneg=integraBifPortAutoneg, integraBifCosqStatOutPacketsCoSQ1=integraBifCosqStatOutPacketsCoSQ1, integraBifTransmittedPkts1024to1518Octets=integraBifTransmittedPkts1024to1518Octets, integraBifPortSyncEthPrio=integraBifPortSyncEthPrio, integraBifFlowClassifierDropIngressPackets=integraBifFlowClassifierDropIngressPackets, integraBifCosqStatDroppedPacketsCoSQ3=integraBifCosqStatDroppedPacketsCoSQ3, integraBifCosqStatDroppedPacketsCoSQ1=integraBifCosqStatDroppedPacketsCoSQ1, integraBmodemRadialMse=integraBmodemRadialMse, integraBifCosqStatOutBytesCoSQ7=integraBifCosqStatOutBytesCoSQ7, integraBifRateLimitDropForUnknownMulticastIngressBytes=integraBifRateLimitDropForUnknownMulticastIngressBytes, integraBifPortStatIndex=integraBifPortStatIndex, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ1=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ1, integraBifRateLimitDropForKnownMulticastIngressBytes=integraBifRateLimitDropForKnownMulticastIngressBytes, integraBifPortFlowControl=integraBifPortFlowControl, integraBifEtherStatsMulticastPkts=integraBifEtherStatsMulticastPkts, integraBradioRangesTable=integraBradioRangesTable, integraBifPortRateLimitDropIngressBytes=integraBifPortRateLimitDropIngressBytes, integraBifPausePFCframesGeneratedIngressPackets=integraBifPausePFCframesGeneratedIngressPackets, integraBmodemACMengine=integraBmodemACMengine, integraBmodemTxModulation=integraBmodemTxModulation, integraBradioPLL=integraBradioPLL, integraBCompliance=integraBCompliance, integraBifCosqEntry=integraBifCosqEntry, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ2=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ2, integraBifCosqStatDroppedPacketsCoSQ5=integraBifCosqStatDroppedPacketsCoSQ5, integraBMiscGroup=integraBMiscGroup, integraBifReceivedPkts512to1023Octets=integraBifReceivedPkts512to1023Octets, integraBifPortAdminStatus=integraBifPortAdminStatus, integraBradioRangeTxFrequency=integraBradioRangeTxFrequency, integraBifDot3InPauseFrames=integraBifDot3InPauseFrames, integraBexecuteConfig=integraBexecuteConfig, integraBifCosqStatOutBytesCoSQ4=integraBifCosqStatOutBytesCoSQ4, integraBifPortOperStatus=integraBifPortOperStatus, integraBifL2cacheDropIngressPackets=integraBifL2cacheDropIngressPackets, integraBifTransmittedPkts256to511Octets=integraBifTransmittedPkts256to511Octets, integraBifMAClearnLimitDropIngressPackets=integraBifMAClearnLimitDropIngressPackets, integraBifRateLimitDropForKnownMulticastIngressPackets=integraBifRateLimitDropForKnownMulticastIngressPackets, integraBradioRxLevel=integraBradioRxLevel, integraBifCosqStatGreenDiscardDroppedPacketsCoSQ2=integraBifCosqStatGreenDiscardDroppedPacketsCoSQ2, integraBmodemRxModulation=integraBmodemRxModulation, integraBifPortSpeed=integraBifPortSpeed, integraBifDot1dTpPortOutFrames=integraBifDot1dTpPortOutFrames, integraBifCosqStatDroppedBytesCoSQ4=integraBifCosqStatDroppedBytesCoSQ4, integraBradioTxFrequency=integraBradioTxFrequency, integraBifSTPdropIngressPackets=integraBifSTPdropIngressPackets, integraBifCosqStatOutPacketsCoSQ5=integraBifCosqStatOutPacketsCoSQ5, integraBifPausePFCframesGeneratedEgressPackets=integraBifPausePFCframesGeneratedEgressPackets, integraBifEgressPPS=integraBifEgressPPS, integraBifEgressBytes=integraBifEgressBytes, integraBifEFMdropIngressPackets=integraBifEFMdropIngressPackets, integraBnetCfg=integraBnetCfg, integraBifMRUdropEgressPackets=integraBifMRUdropEgressPackets, integraBifIllegalSAdropIngressPackets=integraBifIllegalSAdropIngressPackets, integraBifAllCoSQoutPackets=integraBifAllCoSQoutPackets, integraBifCosqIfaceIndex=integraBifCosqIfaceIndex, integraBifPortStcIndex=integraBifPortStcIndex, integraBifCosqIfaceDescr=integraBifCosqIfaceDescr, integraBifCosqStatYellowDiscardDroppedPacketsCoSQ6=integraBifCosqStatYellowDiscardDroppedPacketsCoSQ6, integraBifSTPdropEgressPackets=integraBifSTPdropEgressPackets, integraBifPortSyncEthActive=integraBifPortSyncEthActive, integraBifEtherStatsFragments=integraBifEtherStatsFragments, integraBradioRangeEntry=integraBradioRangeEntry, integraBifEtherStatsRXNoErrors=integraBifEtherStatsRXNoErrors, integraBifTransmittedPkts512to1023Octets=integraBifTransmittedPkts512to1023Octets)
