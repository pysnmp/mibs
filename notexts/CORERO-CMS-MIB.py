#
# PySNMP MIB module CORERO-CMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/corero/CORERO-CMS-MIB
# Produced by pysmi-1.1.12 at Tue May 28 11:45:00 2024
# On host fv-az665-912 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, Integer32, Unsigned32, Counter32, Bits, TimeTicks, enterprises, ModuleIdentity, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Integer32", "Unsigned32", "Counter32", "Bits", "TimeTicks", "enterprises", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "NotificationType")
TimeStamp, RowStatus, TextualConvention, TestAndIncr, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "TestAndIncr", "DisplayString", "TruthValue")
coreroCMSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 41036, 4))
coreroCMSMIB.setRevisions(('2017-06-16 00:00', '2016-01-28 00:00', '2014-04-24 00:00',))
if mibBuilder.loadTexts: coreroCMSMIB.setLastUpdated('201706160000Z')
if mibBuilder.loadTexts: coreroCMSMIB.setOrganization('Corero Network Security')
corero = MibIdentifier((1, 3, 6, 1, 4, 1, 41036))
coreroCMSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1))
coreroCMSMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 2))
class UnsignedShort(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class ConfdString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class String(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class TYPE_CMS_MODULE_STATE(String):
    status = 'current'

defense = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1))
defenseStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1))
defenseStatusThreatAwareness = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1))
excessivePacketsFromBadClients = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessivePacketsFromBadClients.setStatus('current')
excessiveProxySetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveProxySetupRate.setStatus('obsolete')
excessiveNewIpAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveNewIpAddresses.setStatus('current')
excessiveAddressTableUsage = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveAddressTableUsage.setStatus('current')
excessiveTcpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveTcpSetupRate.setStatus('current')
excessiveNonTcpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveNonTcpSetupRate.setStatus('current')
excessiveFailedProxyRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: excessiveFailedProxyRate.setStatus('obsolete')
defenseStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2))
defenseBlockRateStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1))
allRulesBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: allRulesBlockRate.setStatus('current')
systemIssueBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemIssueBlockRate.setStatus('obsolete')
networkAccessRestrictionBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkAccessRestrictionBlockRate.setStatus('obsolete')
networkRateLimitBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkRateLimitBlockRate.setStatus('obsolete')
networkProtocolValidationBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkProtocolValidationBlockRate.setStatus('obsolete')
networkIntegrityAnalysisBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkIntegrityAnalysisBlockRate.setStatus('obsolete')
applicationAccessRestrictionBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationAccessRestrictionBlockRate.setStatus('obsolete')
applicationRateLimitBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationRateLimitBlockRate.setStatus('obsolete')
applicationProtocolValidationBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationProtocolValidationBlockRate.setStatus('obsolete')
applicationIntegrityAnalysisBlockRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationIntegrityAnalysisBlockRate.setStatus('obsolete')
defenseSetupRateStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2))
tcpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpSetupRate.setStatus('current')
nonTcpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nonTcpSetupRate.setStatus('current')
udpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpSetupRate.setStatus('current')
icmpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpSetupRate.setStatus('current')
otherIpSetupRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherIpSetupRate.setStatus('current')
defenseUsageStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3))
inUseFlows = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseFlows.setStatus('current')
inUseTcpFlows = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseTcpFlows.setStatus('current')
inUseUdpFlows = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseUdpFlows.setStatus('current')
inUseIcmpFlows = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseIcmpFlows.setStatus('current')
inUseOtherFlows = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseOtherFlows.setStatus('current')
totalProxySetups = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalProxySetups.setStatus('obsolete')
totalProxyFailedSetups = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 3, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalProxyFailedSetups.setStatus('obsolete')
defenseInterfaceStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4))
externalPortPacketReceiveRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortPacketReceiveRate.setStatus('current')
externalPortBitReceiveRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortBitReceiveRate.setStatus('current')
externalPortPacketTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortPacketTransmitRate.setStatus('current')
externalPortBitTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortBitTransmitRate.setStatus('current')
internalPortPacketReceiveRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortPacketReceiveRate.setStatus('current')
internalPortBitReceiveRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortBitReceiveRate.setStatus('current')
internalPortPacketTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortPacketTransmitRate.setStatus('current')
internalPortBitTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortBitTransmitRate.setStatus('current')
externalPortReceivedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortReceivedPackets.setStatus('current')
externalPortTransmittedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortTransmittedPackets.setStatus('current')
externalPortReceivedBytes = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortReceivedBytes.setStatus('current')
externalPortTransmittedBytes = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortTransmittedBytes.setStatus('current')
internalPortReceivedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortReceivedPackets.setStatus('current')
internalPortTransmittedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortTransmittedPackets.setStatus('current')
internalPortReceivedBytes = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortReceivedBytes.setStatus('current')
internalPortTransmittedBytes = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortTransmittedBytes.setStatus('current')
externalPortReceivedBadCrcPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortReceivedBadCrcPackets.setStatus('current')
internalPortReceivedBadCrcPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortReceivedBadCrcPackets.setStatus('current')
externalPortReceivedOversizedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortReceivedOversizedPackets.setStatus('current')
internalPortReceivedOversizedPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortReceivedOversizedPackets.setStatus('current')
externalPortReceivedJabberPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortReceivedJabberPackets.setStatus('current')
internalPortReceivedJabberPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortReceivedJabberPackets.setStatus('current')
externalPortTransmitErrorPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: externalPortTransmitErrorPackets.setStatus('current')
internalPortTransmitErrorPackets = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 4, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: internalPortTransmitErrorPackets.setStatus('current')
defenseIpAddressStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5))
inUseAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseAddresses.setStatus('current')
inUseTrustedAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseTrustedAddresses.setStatus('current')
inUseSuspiciousAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseSuspiciousAddresses.setStatus('current')
inUseMaliciousAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseMaliciousAddresses.setStatus('current')
inUseUnclassifiedAddresses = MibScalar((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 2, 5, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inUseUnclassifiedAddresses.setStatus('current')
protectionGroupStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3))
protectionGroupTable = MibTable((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1), )
if mibBuilder.loadTexts: protectionGroupTable.setStatus('current')
protectionGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1), ).setIndexNames((0, "CORERO-CMS-MIB", "pgName"))
if mibBuilder.loadTexts: protectionGroupEntry.setStatus('current')
pgName = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 1), OctetString())
if mibBuilder.loadTexts: pgName.setStatus('current')
pgExternalPortReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortReceivedPackets.setStatus('current')
pgExternalPortTransmittedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortTransmittedPackets.setStatus('current')
pgExternalPortReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortReceivedBytes.setStatus('current')
pgExternalPortTransmittedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortTransmittedBytes.setStatus('current')
pgInternalPortReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortReceivedPackets.setStatus('current')
pgInternalPortTransmittedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortTransmittedPackets.setStatus('current')
pgInternalPortReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortReceivedBytes.setStatus('current')
pgInternalPortTransmittedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortTransmittedBytes.setStatus('current')
pgExternalPortReceivedBadCrcPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortReceivedBadCrcPackets.setStatus('current')
pgInternalPortReceivedBadCrcPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortReceivedBadCrcPackets.setStatus('current')
pgExternalPortReceivedOversizedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortReceivedOversizedPackets.setStatus('current')
pgInternalPortReceivedOversizedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortReceivedOversizedPackets.setStatus('current')
pgExternalPortReceivedJabberPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortReceivedJabberPackets.setStatus('current')
pgInternalPortReceivedJabberPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortReceivedJabberPackets.setStatus('current')
pgExternalPortTransmitErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgExternalPortTransmitErrorPackets.setStatus('current')
pgInternalPortTransmitErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 41036, 4, 1, 1, 3, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgInternalPortTransmitErrorPackets.setStatus('current')
coreroCMSMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 2, 1))
coreroCMSMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41036, 4, 2, 2))
coreroCMSMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 41036, 4, 2, 1, 2)).setObjects(("CORERO-CMS-MIB", "defenseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coreroCMSMIBCompliance = coreroCMSMIBCompliance.setStatus('current')
defenseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 41036, 4, 2, 2, 1)).setObjects(("CORERO-CMS-MIB", "defenseStatus"), ("CORERO-CMS-MIB", "defenseStatistics"), ("CORERO-CMS-MIB", "protectionGroupStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    defenseGroup = defenseGroup.setStatus('current')
mibBuilder.exportSymbols("CORERO-CMS-MIB", tcpSetupRate=tcpSetupRate, excessiveNewIpAddresses=excessiveNewIpAddresses, nonTcpSetupRate=nonTcpSetupRate, pgExternalPortReceivedJabberPackets=pgExternalPortReceivedJabberPackets, pgExternalPortTransmitErrorPackets=pgExternalPortTransmitErrorPackets, externalPortTransmitErrorPackets=externalPortTransmitErrorPackets, defenseGroup=defenseGroup, externalPortReceivedOversizedPackets=externalPortReceivedOversizedPackets, defenseStatusThreatAwareness=defenseStatusThreatAwareness, coreroCMSMIBCompliances=coreroCMSMIBCompliances, defenseInterfaceStatistics=defenseInterfaceStatistics, pgExternalPortTransmittedPackets=pgExternalPortTransmittedPackets, inUseIcmpFlows=inUseIcmpFlows, internalPortBitReceiveRate=internalPortBitReceiveRate, coreroCMSMIBCompliance=coreroCMSMIBCompliance, internalPortReceivedBytes=internalPortReceivedBytes, inUseSuspiciousAddresses=inUseSuspiciousAddresses, externalPortReceivedJabberPackets=externalPortReceivedJabberPackets, pgInternalPortTransmittedPackets=pgInternalPortTransmittedPackets, String=String, inUseFlows=inUseFlows, allRulesBlockRate=allRulesBlockRate, defenseStatus=defenseStatus, internalPortReceivedOversizedPackets=internalPortReceivedOversizedPackets, excessiveNonTcpSetupRate=excessiveNonTcpSetupRate, pgInternalPortReceivedBadCrcPackets=pgInternalPortReceivedBadCrcPackets, externalPortReceivedPackets=externalPortReceivedPackets, internalPortPacketReceiveRate=internalPortPacketReceiveRate, defenseSetupRateStatistics=defenseSetupRateStatistics, pgInternalPortTransmittedBytes=pgInternalPortTransmittedBytes, excessiveTcpSetupRate=excessiveTcpSetupRate, defense=defense, coreroCMSMIB=coreroCMSMIB, defenseIpAddressStatistics=defenseIpAddressStatistics, internalPortBitTransmitRate=internalPortBitTransmitRate, internalPortTransmitErrorPackets=internalPortTransmitErrorPackets, pgName=pgName, corero=corero, networkProtocolValidationBlockRate=networkProtocolValidationBlockRate, protectionGroupTable=protectionGroupTable, externalPortBitTransmitRate=externalPortBitTransmitRate, applicationRateLimitBlockRate=applicationRateLimitBlockRate, coreroCMSMIBObjects=coreroCMSMIBObjects, defenseUsageStatistics=defenseUsageStatistics, inUseTrustedAddresses=inUseTrustedAddresses, pgExternalPortReceivedBadCrcPackets=pgExternalPortReceivedBadCrcPackets, networkAccessRestrictionBlockRate=networkAccessRestrictionBlockRate, pgInternalPortReceivedOversizedPackets=pgInternalPortReceivedOversizedPackets, udpSetupRate=udpSetupRate, defenseBlockRateStatistics=defenseBlockRateStatistics, excessiveAddressTableUsage=excessiveAddressTableUsage, inUseTcpFlows=inUseTcpFlows, coreroCMSMIBConformance=coreroCMSMIBConformance, excessivePacketsFromBadClients=excessivePacketsFromBadClients, protectionGroupEntry=protectionGroupEntry, applicationProtocolValidationBlockRate=applicationProtocolValidationBlockRate, internalPortTransmittedBytes=internalPortTransmittedBytes, protectionGroupStatistics=protectionGroupStatistics, inUseUnclassifiedAddresses=inUseUnclassifiedAddresses, UnsignedShort=UnsignedShort, externalPortReceivedBytes=externalPortReceivedBytes, internalPortReceivedPackets=internalPortReceivedPackets, externalPortTransmittedBytes=externalPortTransmittedBytes, defenseStatistics=defenseStatistics, externalPortReceivedBadCrcPackets=externalPortReceivedBadCrcPackets, applicationIntegrityAnalysisBlockRate=applicationIntegrityAnalysisBlockRate, networkRateLimitBlockRate=networkRateLimitBlockRate, externalPortPacketTransmitRate=externalPortPacketTransmitRate, inUseMaliciousAddresses=inUseMaliciousAddresses, otherIpSetupRate=otherIpSetupRate, applicationAccessRestrictionBlockRate=applicationAccessRestrictionBlockRate, coreroCMSMIBGroups=coreroCMSMIBGroups, systemIssueBlockRate=systemIssueBlockRate, ConfdString=ConfdString, pgInternalPortReceivedJabberPackets=pgInternalPortReceivedJabberPackets, icmpSetupRate=icmpSetupRate, inUseAddresses=inUseAddresses, pgExternalPortTransmittedBytes=pgExternalPortTransmittedBytes, pgExternalPortReceivedBytes=pgExternalPortReceivedBytes, inUseOtherFlows=inUseOtherFlows, externalPortBitReceiveRate=externalPortBitReceiveRate, networkIntegrityAnalysisBlockRate=networkIntegrityAnalysisBlockRate, excessiveFailedProxyRate=excessiveFailedProxyRate, pgExternalPortReceivedPackets=pgExternalPortReceivedPackets, PYSNMP_MODULE_ID=coreroCMSMIB, inUseUdpFlows=inUseUdpFlows, pgInternalPortTransmitErrorPackets=pgInternalPortTransmitErrorPackets, externalPortPacketReceiveRate=externalPortPacketReceiveRate, pgExternalPortReceivedOversizedPackets=pgExternalPortReceivedOversizedPackets, pgInternalPortReceivedPackets=pgInternalPortReceivedPackets, internalPortReceivedBadCrcPackets=internalPortReceivedBadCrcPackets, pgInternalPortReceivedBytes=pgInternalPortReceivedBytes, excessiveProxySetupRate=excessiveProxySetupRate, internalPortReceivedJabberPackets=internalPortReceivedJabberPackets, internalPortTransmittedPackets=internalPortTransmittedPackets, TYPE_CMS_MODULE_STATE=TYPE_CMS_MODULE_STATE, externalPortTransmittedPackets=externalPortTransmittedPackets, totalProxyFailedSetups=totalProxyFailedSetups, totalProxySetups=totalProxySetups, internalPortPacketTransmitRate=internalPortPacketTransmitRate)
