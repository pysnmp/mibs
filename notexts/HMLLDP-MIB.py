#
# PySNMP MIB module HMLLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hirschmann/hmLLDP.mib
# Produced by pysmi-1.1.12 at Tue Sep 17 13:29:43 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
hmConfiguration, = mibBuilder.importSymbols("HMPRIV-MGMT-SNMP-MIB", "hmConfiguration")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, Gauge32, ObjectIdentity, IpAddress, Integer32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Unsigned32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Gauge32", "ObjectIdentity", "IpAddress", "Integer32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Unsigned32", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hmLLDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 14, 7))
hmLLDP.setRevisions(('2004-11-22 00:00',))
if mibBuilder.loadTexts: hmLLDP.setLastUpdated('200411220000Z')
if mibBuilder.loadTexts: hmLLDP.setOrganization('Hirschmann Automation and Control GmbH')
hmLLDPConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 14, 7, 1))
hmLLDPStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 14, 7, 2))
hmLLDPAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmLLDPAdminStatus.setStatus('current')
hmLLDPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2), )
if mibBuilder.loadTexts: hmLLDPInterfaceTable.setStatus('current')
hmLLDPIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1), ).setIndexNames((0, "HMLLDP-MIB", "hmLLDPIfaceGroupID"), (0, "HMLLDP-MIB", "hmLLDPIfaceID"))
if mibBuilder.loadTexts: hmLLDPIfEntry.setStatus('current')
hmLLDPIfaceGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPIfaceGroupID.setStatus('current')
hmLLDPIfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPIfaceID.setStatus('current')
hmLLDPIfaceHirmaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("txOnly", 1), ("rxOnly", 2), ("txAndRx", 3), ("disabled", 4))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmLLDPIfaceHirmaMode.setStatus('current')
hmLLDPIfaceFDBMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lldpOnly", 1), ("macOnly", 2), ("both", 3), ("autoDetect", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmLLDPIfaceFDBMode.setStatus('current')
hmLLDPIfaceMaxNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmLLDPIfaceMaxNeighbors.setStatus('current')
hmLLDPStatsIfTable = MibTable((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1), )
if mibBuilder.loadTexts: hmLLDPStatsIfTable.setStatus('current')
hmLLDPStatsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1), ).setIndexNames((0, "HMLLDP-MIB", "hmLLDPStatsIfaceGroupID"), (0, "HMLLDP-MIB", "hmLLDPStatsIfaceID"))
if mibBuilder.loadTexts: hmLLDPStatsIfEntry.setStatus('current')
hmLLDPStatsIfaceGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceGroupID.setStatus('current')
hmLLDPStatsIfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceID.setStatus('current')
hmLLDPStatsIfaceTotalFDBEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceTotalFDBEntryCount.setStatus('current')
hmLLDPStatsIfaceTotalEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceTotalEntryCount.setStatus('current')
hmLLDPStatsIfaceIEEEEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceIEEEEntryCount.setStatus('current')
hmLLDPStatsIfaceHirmaEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceHirmaEntryCount.setStatus('current')
hmLLDPStatsIfaceFDBEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 14, 7, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmLLDPStatsIfaceFDBEntryCount.setStatus('current')
mibBuilder.exportSymbols("HMLLDP-MIB", hmLLDP=hmLLDP, hmLLDPStatsIfaceHirmaEntryCount=hmLLDPStatsIfaceHirmaEntryCount, hmLLDPIfaceFDBMode=hmLLDPIfaceFDBMode, hmLLDPConfig=hmLLDPConfig, hmLLDPStatsIfaceFDBEntryCount=hmLLDPStatsIfaceFDBEntryCount, hmLLDPStatsIfaceGroupID=hmLLDPStatsIfaceGroupID, hmLLDPStatsIfaceTotalEntryCount=hmLLDPStatsIfaceTotalEntryCount, hmLLDPAdminStatus=hmLLDPAdminStatus, hmLLDPStatsIfaceID=hmLLDPStatsIfaceID, hmLLDPStatsIfaceIEEEEntryCount=hmLLDPStatsIfaceIEEEEntryCount, hmLLDPInterfaceTable=hmLLDPInterfaceTable, hmLLDPStatsIfTable=hmLLDPStatsIfTable, hmLLDPStatistics=hmLLDPStatistics, PYSNMP_MODULE_ID=hmLLDP, hmLLDPStatsIfaceTotalFDBEntryCount=hmLLDPStatsIfaceTotalFDBEntryCount, hmLLDPIfaceHirmaMode=hmLLDPIfaceHirmaMode, hmLLDPIfEntry=hmLLDPIfEntry, hmLLDPStatsIfEntry=hmLLDPStatsIfEntry, hmLLDPIfaceID=hmLLDPIfaceID, hmLLDPIfaceGroupID=hmLLDPIfaceGroupID, hmLLDPIfaceMaxNeighbors=hmLLDPIfaceMaxNeighbors)
