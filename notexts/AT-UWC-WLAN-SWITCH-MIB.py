#
# PySNMP MIB module AT-UWC-WLAN-SWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/allied/AT-UWC-WLAN-SWITCH-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 15:06:56 2024
# On host fv-az692-788 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
atUWC, wirelesslan = mibBuilder.importSymbols("AT-SMI-MIB", "atUWC", "wirelesslan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, Counter64, ModuleIdentity, NotificationType, iso, Bits, TimeTicks, IpAddress, Unsigned32, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Counter64", "ModuleIdentity", "NotificationType", "iso", "Bits", "TimeTicks", "IpAddress", "Unsigned32", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TruthValue, DisplayString, RowStatus, TextualConvention, MacAddress, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "MacAddress", "TimeStamp")
fastPathWLANSwitch = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34))
fastPathWLANSwitch.setRevisions(('2014-12-04 00:00', '2014-11-07 00:00', '2014-10-29 00:00', '2014-09-30 00:00', '2014-05-29 00:00', '2012-11-29 00:00', '2012-06-15 00:00',))
if mibBuilder.loadTexts: fastPathWLANSwitch.setLastUpdated('201412040000Z')
if mibBuilder.loadTexts: fastPathWLANSwitch.setOrganization('Allied Telesis, Inc.')
at_uwc = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 13, 21)).setLabel("at-uwc")
class WsOui(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class TspecSuppAC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("voice", 0), ("video", 1))

wsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0))
wsGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1))
discovery = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2))
apProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3))
apCodeDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4))
rfManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5))
managedAP = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6))
associatedClient = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7))
peerSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8))
intrusionDetection = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9))
snmpTrapsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10))
wsMibInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 11))
wsCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12))
l2centTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 13))
wsOuiDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14))
rrmNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15))
rrmChannelLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16))
tspec = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17))
provisioning = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18))
wdsManagedAP = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19))
deviceLocation = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20))
authenticatedClient = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21))
wsMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMibVersion.setStatus('current')
wsMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMode.setStatus('current')
wsCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone('US')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCountryCode.setStatus('current')
wsPeerGroupId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerGroupId.setStatus('current')
wsAPValidationMethod = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("radius", 2))).clone('local'))
if mibBuilder.loadTexts: wsAPValidationMethod.setStatus('current')
wsAPAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPAuthenticationMode.setStatus('current')
wsClientRoamAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRoamAgeTime.setStatus('current')
wsRFScanAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 168)).clone(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAgeTime.setStatus('current')
wsAPFailureAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 168)).clone(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPFailureAgeTime.setStatus('current')
wsAdHocClientAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 168)).clone(24))
if mibBuilder.loadTexts: wsAdHocClientAgeTime.setStatus('current')
wsDetectedClientAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 168)).clone(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAgeTime.setStatus('current')
wsValidAPConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11), )
if mibBuilder.loadTexts: wsValidAPConfigTable.setStatus('current')
wsValidAPConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPMacAddress"))
if mibBuilder.loadTexts: wsValidAPConfigEntry.setStatus('current')
wsAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPMacAddress.setStatus('current')
wsAPLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPLocation.setStatus('current')
wsAPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wsManaged", 1), ("standalone", 2), ("rogue", 3))).clone('wsManaged')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPMode.setStatus('current')
wsAPAuthenticationPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPAuthenticationPasswd.setStatus('current')
wsUseAPProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsUseAPProfileId.setStatus('current')
wsAPRadio1Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadio1Channel.setStatus('current')
wsAPRadio2Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadio2Channel.setStatus('current')
wsAPRadio1TxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadio1TxPower.setStatus('current')
wsAPRadio2TxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadio2TxPower.setStatus('current')
wsAPStandaloneExpectedChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStandaloneExpectedChannel.setStatus('current')
wsAPStandaloneExpectedSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("any", 0), ("open", 1), ("wep", 2), ("wpa", 3))).clone('any')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStandaloneExpectedSecurity.setStatus('current')
wsAPStandaloneExpectedSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStandaloneExpectedSsid.setStatus('current')
wsAPStandaloneExpectedWds = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("any", 0), ("normal", 1), ("bridge", 2))).clone('any')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStandaloneExpectedWds.setStatus('current')
wsAPStandaloneExpectedWired = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("allowed", 0), ("not-allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStandaloneExpectedWired.setStatus('current')
wsAPConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 11, 1, 15), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPConfigRowStatus.setStatus('current')
wsGlobalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12))
wsIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPAddress.setStatus('current')
wsOperationalStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("enable-pending", 2), ("disabled", 3), ("disable-pending", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOperationalStatus.setStatus('current')
wsOperationalStatusDisableReason = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("admin-disabled", 2), ("no-ipAddress", 3), ("no-sslFiles", 4), ("no-loopback-interface", 5), ("routing-disabled", 6), ("no-active-interface", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOperationalStatusDisableReason.setStatus('current')
wsTotalPeerSwitches = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalPeerSwitches.setStatus('current')
wsTotalAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalAPs.setStatus('current')
wsTotalManagedAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalManagedAPs.setStatus('current')
wsTotalStandaloneAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalStandaloneAPs.setStatus('current')
wsTotalDiscoveredAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalDiscoveredAPs.setStatus('current')
wsTotalConnectionFailedAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalConnectionFailedAPs.setStatus('current')
wsTotalRogueAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalRogueAPs.setStatus('current')
wsTotalUnknownAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalUnknownAPs.setStatus('current')
wsMaximumManagedAPsInPeerGroup = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumManagedAPsInPeerGroup.setStatus('current')
wsTotalClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalClients.setStatus('current')
wsTotalAuthenticatedClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalAuthenticatedClients.setStatus('current')
wsMaximumAssociatedClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumAssociatedClients.setStatus('current')
wsWLANUtilization = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWLANUtilization.setStatus('current')
wsGlobalStatusRegulatoryDomainFor2GHz = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalStatusRegulatoryDomainFor2GHz.setStatus('current')
wsGlobalStatusRegulatoryDomainFor5GHz = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalStatusRegulatoryDomainFor5GHz.setStatus('current')
wsGlobalPeerConfigRequestAction = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigRequestAction.setStatus('current')
wsGlobalPeerConfigRequestStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notStarted", 0), ("requested", 1), ("savingConfig", 2), ("sendingConfig", 3), ("applyingAPprofileConfig", 4), ("complete", 5))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigRequestStatus.setStatus('current')
wsGlobalPeerConfigReceiveStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("notStarted", 0), ("receivingConfig", 1), ("savingConfig", 2), ("applyingAPprofileConfig", 3), ("failureInvalidCodeVersion", 4), ("failureInvalidHwVersion", 5), ("failureInvalidConfig", 6), ("failureInvalidPacketFormat", 7), ("failureTimeout", 8), ("success", 9))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigReceiveStatus.setStatus('current')
wsGlobalPeerConfigSwitchIp = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigSwitchIp.setStatus('current')
wsGlobalPeerConfigReceived = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 24), Bits().clone(namedValues=NamedValues(("none", 1), ("globalConfig", 2), ("discoveryConfig", 3), ("validAPDatabase", 4), ("channelPowerConfig", 5), ("profileNetworkConfig", 6), ("knownClientConfig", 7), ("captivePortalConfig", 8), ("radiusClientConfig", 9), ("qosAclConfig", 10), ("qosDiffServConfig", 11), ("wdsGroupConfig", 12), ("deviceLocationConfig", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigReceived.setStatus('current')
wsGlobalPeerConfigReceivedTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGlobalPeerConfigReceivedTimestamp.setStatus('current')
wsClusterControllerIndicator = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClusterControllerIndicator.setStatus('current')
wsClusterController = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClusterController.setStatus('current')
wsRogueAPMitigationCount = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRogueAPMitigationCount.setStatus('current')
wsRogueAPMitigationLimit = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRogueAPMitigationLimit.setStatus('current')
wsRogueAPAcknowledgeAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-action", 0), ("acknowledge", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRogueAPAcknowledgeAll.setStatus('current')
wsTotalDetectedClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalDetectedClients.setStatus('current')
wsMaximumDetectedClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumDetectedClients.setStatus('current')
wsMaximumDetectedClientPreAuthenticationHistoryEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumDetectedClientPreAuthenticationHistoryEntries.setStatus('current')
wsTotalDetectedClientPreAuthenticationHistoryEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalDetectedClientPreAuthenticationHistoryEntries.setStatus('current')
wsMaximumDetectedClientRoamHistoryEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumDetectedClientRoamHistoryEntries.setStatus('current')
wsTotalDetectedClientRoamHistoryEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalDetectedClientRoamHistoryEntries.setStatus('current')
wsRegenerateX509CertificateAction = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2))).clone('none'))
if mibBuilder.loadTexts: wsRegenerateX509CertificateAction.setStatus('current')
wsRegenerateX509CertificateStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-in-progress", 1), ("started", 2), ("in-progress", 3))).clone('not-in-progress'))
if mibBuilder.loadTexts: wsRegenerateX509CertificateStatus.setStatus('current')
wsNetworkMutualAuthenticationStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("not-started", 1), ("exchange-start", 2), ("in-progress", 3), ("provisioning-in-progress", 4), ("exchange-in-progress", 5), ("provisioning-complete", 6), ("exchange-complete", 7), ("complete-without-errors", 8), ("complete-with-errors-refer-to-event-log-for-details", 9))).clone('not-started'))
if mibBuilder.loadTexts: wsNetworkMutualAuthenticationStatus.setStatus('current')
wsTotalProvisioningAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 40), Unsigned32())
if mibBuilder.loadTexts: wsTotalProvisioningAPs.setStatus('current')
wsMaximumProvisioningAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 12, 41), Unsigned32())
if mibBuilder.loadTexts: wsMaximumProvisioningAPs.setStatus('current')
wsGlobalStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13))
wsTotalWLANBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANBytesTransmitted.setStatus('current')
wsTotalWLANBytesRecvd = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANBytesRecvd.setStatus('current')
wsTotalWLANPktsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANPktsTransmitted.setStatus('current')
wsTotalWLANPktsRecvd = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANPktsRecvd.setStatus('current')
wsAllStatisticsReset = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsAllStatisticsReset.setStatus('current')
wsAllStatisticsResetStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("not-started", 0), ("requested", 1), ("in-progress", 2), ("success", 3), ("partial-success", 4), ("failure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAllStatisticsResetStatus.setStatus('current')
wsTotalWLANBytesTransmitDropped = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANBytesTransmitDropped.setStatus('current')
wsTotalWLANBytesRecvDropped = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANBytesRecvDropped.setStatus('current')
wsTotalWLANPktsTransmitDropped = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANPktsTransmitDropped.setStatus('current')
wsTotalWLANPktsRecvDropped = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANPktsRecvDropped.setStatus('current')
wsTotalWLANDistTunnelPktsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANDistTunnelPktsTransmitted.setStatus('current')
wsTotalWLANDistTunnelRoamedClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANDistTunnelRoamedClients.setStatus('current')
wsTotalWLANDistTunnelClientDenials = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 13, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalWLANDistTunnelClientDenials.setStatus('current')
wsPeerConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14))
wsPeerConfigurationGlobal = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationGlobal.setStatus('current')
wsPeerConfigurationDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationDiscovery.setStatus('current')
wsPeerConfigurationAPDatabase = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationAPDatabase.setStatus('current')
wsPeerConfigurationChannelPower = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationChannelPower.setStatus('current')
wsPeerConfigurationAPProfiles = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationAPProfiles.setStatus('current')
wsPeerConfigurationKnownClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationKnownClients.setStatus('current')
wsPeerConfigurationCaptivePortal = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationCaptivePortal.setStatus('current')
wsPeerConfigurationRadiusClient = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationRadiusClient.setStatus('current')
wsPeerConfigurationQosAcl = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationQosAcl.setStatus('current')
wsPeerConfigurationQosDiffServ = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationQosDiffServ.setStatus('current')
wsPeerConfigurationWdsGroup = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationWdsGroup.setStatus('current')
wsPeerConfigurationDeviceLocation = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 14, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigurationDeviceLocation.setStatus('current')
wsClusterPriority = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClusterPriority.setStatus('current')
wsAPClientQosMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPClientQosMode.setStatus('current')
wsAPAutoUpgradeMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPAutoUpgradeMode.setStatus('current')
wsDistTunnelIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDistTunnelIdleTimeout.setStatus('current')
wsDistTunnelMaxTimeout = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(7200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDistTunnelMaxTimeout.setStatus('current')
wsDistTunnelMaxMcastRepl = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDistTunnelMaxMcastRepl.setStatus('current')
wsDistTunnelMaxClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8000)).clone(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDistTunnelMaxClients.setStatus('current')
wsMACAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("whitelist", 1), ("blacklist", 2))).clone('whitelist')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMACAuthenticationMode.setStatus('current')
wsKnownClientTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24), )
if mibBuilder.loadTexts: wsKnownClientTable.setStatus('current')
wsKnownClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsKnownClientMacAddress"))
if mibBuilder.loadTexts: wsKnownClientEntry.setStatus('current')
wsKnownClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsKnownClientMacAddress.setStatus('current')
wsKnownClientAuthAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("global", 1), ("grant", 2), ("deny", 3))).clone('global')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsKnownClientAuthAction.setStatus('current')
wsKnownClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsKnownClientName.setStatus('current')
wsKnownClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 24, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsKnownClientRowStatus.setStatus('current')
wsWidsSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25))
wsWidsApSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1))
rogueAdminConfig = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueAdminConfig.setStatus('current')
rogueUnknownApManagedSsid = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueUnknownApManagedSsid.setStatus('current')
rogueFakeManagedApManagedSsid = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueFakeManagedApManagedSsid.setStatus('current')
rogueManagedApNoSsid = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueManagedApNoSsid.setStatus('current')
rogueManagedApInvalidChannel = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueManagedApInvalidChannel.setStatus('current')
rogueManagedSsidInvalidSecurity = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueManagedSsidInvalidSecurity.setStatus('current')
rogueManagedApInvalidSsid = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueManagedApInvalidSsid.setStatus('current')
rogueApIllegalChannel = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApIllegalChannel.setStatus('current')
rogueStandaloneApInvalidConfig = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueStandaloneApInvalidConfig.setStatus('current')
rogueUnexpectedWdsDevice = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueUnexpectedWdsDevice.setStatus('current')
rogueUnmanagedApWiredNetwork = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueUnmanagedApWiredNetwork.setStatus('current')
wiredNetworkDetectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wiredNetworkDetectionInterval.setStatus('current')
rogueDetectedTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 3600), )).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectedTrapInterval.setStatus('current')
apDeauthenticationAttack = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDeauthenticationAttack.setStatus('current')
wsWidsClientSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2))
rogueDetectedTrapIntvl = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 3600), )).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectedTrapIntvl.setStatus('current')
knownClientDatabaseTest = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: knownClientDatabaseTest.setStatus('current')
authReqTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: authReqTransmitRate.setStatus('current')
probeReqTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeReqTransmitRate.setStatus('current')
deauthReqTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: deauthReqTransmitRate.setStatus('current')
maxFailingAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxFailingAuthentication.setStatus('current')
authWithUnknownAP = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: authWithUnknownAP.setStatus('current')
clientThreatMitigation = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientThreatMitigation.setStatus('current')
deauthThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: deauthThresholdInterval.setStatus('current')
deauthThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: deauthThresholdValue.setStatus('current')
authThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: authThresholdInterval.setStatus('current')
authThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: authThresholdValue.setStatus('current')
probeThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeThresholdInterval.setStatus('current')
probeThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeThresholdValue.setStatus('current')
authFailureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)).clone(50)).setMaxAccess("readonly")
if mibBuilder.loadTexts: authFailureThreshold.setStatus('current')
knownClientDatabaseLocation = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("radius", 2))).clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: knownClientDatabaseLocation.setStatus('current')
knownClientDatabaseRadiusServerName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Default-RADIUS-Server')).setMaxAccess("readonly")
if mibBuilder.loadTexts: knownClientDatabaseRadiusServerName.setStatus('current')
knownClientDatabaseRadiusServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-configured", 1), ("configured", 2))).clone('not-configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: knownClientDatabaseRadiusServerStatus.setStatus('current')
notInOUIDatabase = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 25, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: notInOUIDatabase.setStatus('current')
wsGlobalRadiusConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26))
wsRadiusConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1))
wsAuthRadiusServerName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Default-RADIUS-Server')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthRadiusServerName.setStatus('current')
wsAuthRadiusServerConfiguredStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-configured", 1), ("configured", 2))).clone('not-configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthRadiusServerConfiguredStatus.setStatus('current')
wsAcctRadiusServerName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Default-RADIUS-Server')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAcctRadiusServerName.setStatus('current')
wsAcctRadiusServerConfiguredStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-configured", 1), ("configured", 2))).clone('not-configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAcctRadiusServerConfiguredStatus.setStatus('current')
wsRadiusAcctMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 26, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRadiusAcctMode.setStatus('current')
wsAutoIPAssignMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAutoIPAssignMode.setStatus('current')
wsSwitchStaticIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 30), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchStaticIPAddress.setStatus('current')
wsGlobalTspecConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 31))
wsTspecViolationReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 31, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900)).clone(300))
if mibBuilder.loadTexts: wsTspecViolationReportInterval.setStatus('current')
wsSwitchStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27), )
if mibBuilder.loadTexts: wsSwitchStatusTable.setStatus('current')
wsSwitchStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"))
if mibBuilder.loadTexts: wsSwitchStatusEntry.setStatus('current')
wsSwitchIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchIPAddress.setStatus('current')
wsSwitchClusterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchClusterPriority.setStatus('current')
wsSwitchAPImageDownloadMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: wsSwitchAPImageDownloadMode.setStatus('current')
wsSwitchTotalAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchTotalAPs.setStatus('current')
wsSwitchManagedAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchManagedAPs.setStatus('current')
wsSwitchDiscoveredAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchDiscoveredAPs.setStatus('current')
wsSwitchConnectionFailedAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchConnectionFailedAPs.setStatus('current')
wsSwitchMaximumManagedAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchMaximumManagedAPs.setStatus('current')
wsSwitchTotalClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchTotalClients.setStatus('current')
wsSwitchAuthenticatedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchAuthenticatedClients.setStatus('current')
wsSwitchWLANUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANUtilization.setStatus('current')
wsSwitchDistTunnelClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 27, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchDistTunnelClients.setStatus('current')
wsSwitchStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28), )
if mibBuilder.loadTexts: wsSwitchStatisticsTable.setStatus('current')
wsSwitchStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"))
if mibBuilder.loadTexts: wsSwitchStatisticsEntry.setStatus('current')
wsSwitchWLANBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANBytesTransmitted.setStatus('current')
wsSwitchWLANBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANBytesReceived.setStatus('current')
wsSwitchWLANPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANPktsTransmitted.setStatus('current')
wsSwitchWLANPktsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANPktsReceived.setStatus('current')
wsSwitchWLANBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANBytesTransmitDropped.setStatus('current')
wsSwitchWLANBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANBytesRecvDropped.setStatus('current')
wsSwitchWLANPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANPktsTransmitDropped.setStatus('current')
wsSwitchWLANPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 28, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchWLANPktsRecvDropped.setStatus('current')
networkMutualAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: networkMutualAuthMode.setStatus('current')
unmanagedAPReprovisioning = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable'))
if mibBuilder.loadTexts: unmanagedAPReprovisioning.setStatus('current')
apProvisionDbAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(72))
if mibBuilder.loadTexts: apProvisionDbAgeTime.setStatus('current')
switchProvisioning = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable'))
if mibBuilder.loadTexts: switchProvisioning.setStatus('current')
wsIpBasePort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000)).clone(57775)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIpBasePort.setStatus('current')
devLocMeasurementSys = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("metric", 1), ("english", 2))).clone('metric')).setMaxAccess("readonly")
if mibBuilder.loadTexts: devLocMeasurementSys.setStatus('current')
devLocRfScanLocMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: devLocRfScanLocMode.setStatus('current')
devLocRfScanLocInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: devLocRfScanLocInterval.setStatus('current')
wsIPPollMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollMode.setStatus('current')
wsL2DiscoveryMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsL2DiscoveryMode.setStatus('current')
wsIPPollListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 3), )
if mibBuilder.loadTexts: wsIPPollListTable.setStatus('current')
wsIPPollListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPollIpAddress"))
if mibBuilder.loadTexts: wsIPPollListEntry.setStatus('current')
wsPollIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPollIpAddress.setStatus('current')
wsPollIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-polled", 1), ("polled", 2), ("discovered", 3), ("discovered-failed", 4))).clone('not-polled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPollIPStatus.setStatus('current')
wsIPPollRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 3, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollRowStatus.setStatus('current')
wsL2DiscoveryVlanListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 4), )
if mibBuilder.loadTexts: wsL2DiscoveryVlanListTable.setStatus('current')
wsL2DiscoveryVlanListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsL2DiscoveryVlanId"))
if mibBuilder.loadTexts: wsL2DiscoveryVlanListEntry.setStatus('current')
wsL2DiscoveryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsL2DiscoveryVlanId.setStatus('current')
wsL2DiscoveryVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 4, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsL2DiscoveryVlanRowStatus.setStatus('current')
wsIPPollListMaxNumOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListMaxNumOfEntries.setStatus('current')
wsIPPollListNumOfConfigEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListNumOfConfigEntries.setStatus('current')
wsIPPollListNumOfPolledEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListNumOfPolledEntries.setStatus('current')
wsIPPollListNumOfNotPolledEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListNumOfNotPolledEntries.setStatus('current')
wsIPPollListNumOfDiscoveredEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListNumOfDiscoveredEntries.setStatus('current')
wsIPPollListNumOfDiscoveredFailedEntries = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 2, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIPPollListNumOfDiscoveredFailedEntries.setStatus('current')
wsL2CentTnnlVlanListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 13, 1), )
if mibBuilder.loadTexts: wsL2CentTnnlVlanListTable.setStatus('current')
wsL2CentTnnlVlanListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 13, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsL2CentTnnlVlanId"))
if mibBuilder.loadTexts: wsL2CentTnnlVlanListEntry.setStatus('current')
wsL2CentTnnlVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: wsL2CentTnnlVlanId.setStatus('current')
wsL2CentTnnlVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 13, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsL2CentTnnlVlanRowStatus.setStatus('current')
wsOuiTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14, 1), )
if mibBuilder.loadTexts: wsOuiTable.setStatus('current')
wsOuiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsOuiValue"))
if mibBuilder.loadTexts: wsOuiEntry.setStatus('current')
wsOuiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14, 1, 1, 1), WsOui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOuiValue.setStatus('current')
wsOuiDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOuiDescription.setStatus('current')
wsOuiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 14, 1, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOuiRowStatus.setStatus('current')
wsAPProfileTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1), )
if mibBuilder.loadTexts: wsAPProfileTable.setStatus('current')
wsAPProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"))
if mibBuilder.loadTexts: wsAPProfileEntry.setStatus('current')
wsAPProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileId.setStatus('current')
wsAPProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileName.setStatus('current')
wsAPProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("configured", 1), ("requested", 2), ("in-progress", 3), ("associated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileState.setStatus('current')
wsAPProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileRowStatus.setStatus('current')
wsCopyAPProfileToProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCopyAPProfileToProfileId.setStatus('current')
wsAPProfileApply = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("apply", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileApply.setStatus('current')
wsAPHardwareTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6)))
if mibBuilder.loadTexts: wsAPHardwareTypeID.setStatus('current')
wsAPWiredDetectionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPWiredDetectionVlanId.setStatus('current')
wsAPProfileDisconnAPFwdingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileDisconnAPFwdingMode.setStatus('current')
wsAPProfileDisconnAPMgmtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileDisconnAPMgmtMode.setStatus('current')
wsAPProfileAeroScoutSupportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPProfileAeroScoutSupportMode.setStatus('current')
wsAPProfileRadioTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3), )
if mibBuilder.loadTexts: wsAPProfileRadioTable.setStatus('current')
wsAPProfileRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"))
if mibBuilder.loadTexts: wsAPProfileRadioEntry.setStatus('current')
wsAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioInterface.setStatus('current')
wsAPRadioAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioAdminMode.setStatus('current')
wsAPRadioFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11bg", 2), ("ieee802dot11an", 3), ("ieee802dot11bgn", 4), ("fiveGHzIeee802dot11n", 5), ("twoDotFourGHzIeee802dot11n", 6), ("fiveGHzIeee802dot11anac", 7), ("fiveGHzIeee802dot11nac", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioFrequency.setStatus('current')
wsAPRadioOtherChannelsScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioOtherChannelsScanMode.setStatus('current')
wsAPRadioOtherChannelsScanInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 120)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioOtherChannelsScanInterval.setStatus('current')
wsAPRadioSentryScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioSentryScanMode.setStatus('current')
wsAPRadioSentryScanChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2), ("all", 3))).clone('all')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioSentryScanChannel.setStatus('current')
wsAPRadioScanDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioScanDuration.setStatus('current')
wsAPRadioRateLimitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioRateLimitMode.setStatus('current')
wsAPRadioRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(50)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioRateLimit.setStatus('current')
wsAPRadioRateLimitBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 75)).clone(75)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioRateLimitBurst.setStatus('current')
wsAPRadioBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioBeaconInterval.setStatus('current')
wsAPRadioDTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioDTIMPeriod.setStatus('current')
wsAPRadioFragmentationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346)).clone(2346)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioFragmentationThreshold.setStatus('current')
wsAPRadioRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347)).clone(2347)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioRTSThreshold.setStatus('current')
wsAPRadioShortRetryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioShortRetryLimit.setStatus('current')
wsAPRadioLongRetryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioLongRetryLimit.setStatus('current')
wsAPRadioMaxTransmitLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 18), Unsigned32().clone(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMaxTransmitLifetime.setStatus('current')
wsAPRadioMaxReceiveLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 19), Unsigned32().clone(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMaxReceiveLifetime.setStatus('current')
wsAPRadioMaxClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMaxClients.setStatus('current')
wsAPRadioAutoPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioAutoPowerMode.setStatus('current')
wsAPRadioTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioTxPower.setStatus('current')
wsAPRadioWMMMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioWMMMode.setStatus('current')
wsAPRadioLoadBalancingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioLoadBalancingMode.setStatus('current')
wsAPRadioUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioUtilization.setStatus('current')
wsAPRadioAutoChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioAutoChannelMode.setStatus('current')
wsAPRadioStationIsolationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioStationIsolationMode.setStatus('current')
wsAPRadioChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("twentyMHz", 1), ("fortyMHz", 2), ("eightyMHz", 3))).clone('fortyMHz')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioChannelBandwidth.setStatus('current')
wsAPRadioPrimaryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upper", 1), ("lower", 2))).clone('lower')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioPrimaryChannel.setStatus('current')
wsAPRadioProtectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("off", 2))).clone('auto')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioProtectionMode.setStatus('current')
wsAPRadioShortGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioShortGuardInterval.setStatus('current')
wsAPRadioSTBCMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable'))
if mibBuilder.loadTexts: wsAPRadioSTBCMode.setStatus('current')
wsAPRadioMulticastTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 127), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMulticastTxRate.setStatus('current')
wsAPRadioAPSDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioAPSDMode.setStatus('current')
wsAPRadioNoAckMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioNoAckMode.setStatus('current')
wsAPRadioResourceMeasEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable'))
if mibBuilder.loadTexts: wsAPRadioResourceMeasEnabled.setStatus('current')
wsAPRadioQOSEDCATemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("custom", 0), ("factory-default", 1), ("voice", 2))))
if mibBuilder.loadTexts: wsAPRadioQOSEDCATemplate.setStatus('current')
wsAPRadioMinTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 3, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMinTxPower.setStatus('current')
wsAPProfileRadioSupportedRatesTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 4), )
if mibBuilder.loadTexts: wsAPProfileRadioSupportedRatesTable.setStatus('current')
wsAPProfileRadioSupportedRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsSupportedDataRate"))
if mibBuilder.loadTexts: wsAPProfileRadioSupportedRatesEntry.setStatus('current')
wsSupportedDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSupportedDataRate.setStatus('current')
wsAPProfileRadioSupportedDataMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("not-supported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileRadioSupportedDataMode.setStatus('current')
wsAPProfileRadioBasicRatesTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 5), )
if mibBuilder.loadTexts: wsAPProfileRadioBasicRatesTable.setStatus('current')
wsAPProfileRadioBasicRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsBasicDataRate"))
if mibBuilder.loadTexts: wsAPProfileRadioBasicRatesEntry.setStatus('current')
wsBasicDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsBasicDataRate.setStatus('current')
wsAPProfileRadioBasicDataMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("not-basic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPProfileRadioBasicDataMode.setStatus('current')
wsAPProfileVAPTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 6), )
if mibBuilder.loadTexts: wsAPProfileVAPTable.setStatus('current')
wsAPProfileVAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 6, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsVAPId"))
if mibBuilder.loadTexts: wsAPProfileVAPEntry.setStatus('current')
wsVAPId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPId.setStatus('current')
wsVAPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPMode.setStatus('current')
wsVAPNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPNetworkId.setStatus('current')
wsAPProfileQOSTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7), )
if mibBuilder.loadTexts: wsAPProfileQOSTable.setStatus('current')
wsAPProfileQOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsQOSQueueId"))
if mibBuilder.loadTexts: wsAPProfileQOSEntry.setStatus('current')
wsQOSQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("voice", 0), ("video", 1), ("besteffort", 2), ("background", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsQOSQueueId.setStatus('current')
wsAPEDCAAIFS = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPEDCAAIFS.setStatus('current')
wsAPEDCAMinContentionWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7, 15, 31, 63, 127, 255, 511, 1023))).clone(namedValues=NamedValues(("one", 1), ("three", 3), ("seven", 7), ("fifteen", 15), ("thirty-one", 31), ("sixty-three", 63), ("onetwenty-seven", 127), ("twofifty-five", 255), ("fivehundred-eleven", 511), ("onethousand-twentythree", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPEDCAMinContentionWindow.setStatus('current')
wsAPEDCAMaxContentionWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7, 15, 31, 63, 127, 255, 511, 1023))).clone(namedValues=NamedValues(("one", 1), ("three", 3), ("seven", 7), ("fifteen", 15), ("thirty-one", 31), ("sixty-three", 63), ("onetwenty-seven", 127), ("twofifty-five", 255), ("fivehundred-eleven", 511), ("onethousand-twentythree", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPEDCAMaxContentionWindow.setStatus('current')
wsAPEDCAMaxBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPEDCAMaxBurst.setStatus('current')
wsStationEDCAAIFS = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsStationEDCAAIFS.setStatus('current')
wsStationEDCAMinContentionWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7, 15, 31, 63, 127, 255, 511, 1023))).clone(namedValues=NamedValues(("one", 1), ("three", 3), ("seven", 7), ("fifteen", 15), ("thirty-one", 31), ("sixty-three", 63), ("onetwenty-seven", 127), ("twofifty-five", 255), ("fivehundred-eleven", 511), ("onethousand-twentythree", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsStationEDCAMinContentionWindow.setStatus('current')
wsStationEDCAMaxContentionWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7, 15, 31, 63, 127, 255, 511, 1023))).clone(namedValues=NamedValues(("one", 1), ("three", 3), ("seven", 7), ("fifteen", 15), ("thirty-one", 31), ("sixty-three", 63), ("onetwenty-seven", 127), ("twofifty-five", 255), ("fivehundred-eleven", 511), ("onethousand-twentythree", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsStationEDCAMaxContentionWindow.setStatus('current')
wsStationEDCATXOPLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsStationEDCATXOPLimit.setStatus('current')
wsNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8), )
if mibBuilder.loadTexts: wsNetworkTable.setStatus('current')
wsNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsNetworkId"))
if mibBuilder.loadTexts: wsNetworkEntry.setStatus('current')
wsNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkId.setStatus('current')
wsNetworkIdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkIdRowStatus.setStatus('current')
wsNetworkSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Guest Network')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkSSID.setStatus('current')
wsNetworkDefaultVLANId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkDefaultVLANId.setStatus('current')
wsNetworkHideSSIDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkHideSSIDMode.setStatus('current')
wsNetworkDenyBcastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkDenyBcastMode.setStatus('current')
wsNetworkMACAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("radius", 2), ("disable", 3))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkMACAuthenticationMode.setStatus('current')
wsNetworkRadiusAccountingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkRadiusAccountingMode.setStatus('current')
wsNetworkSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("wepStatic", 2), ("wep802dot1x", 3), ("wpaPersonal", 4), ("wpaEnterprise", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkSecurityMode.setStatus('current')
wsNetworkWPAVersionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wpa", 1), ("wpa2", 2), ("both", 3))).clone('both')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPAVersionsSupported.setStatus('current')
wsNetworkWPACipherSuites = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tkip", 1), ("ccmp", 2), ("both", 3))).clone('tkip')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPACipherSuites.setStatus('current')
wsNetworkWPAKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ascii", 1))).clone('ascii')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPAKeyType.setStatus('current')
wsNetworkWPAKey = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPAKey.setStatus('current')
wsNetworkWPA2PreAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPA2PreAuthenticationMode.setStatus('current')
wsNetworkWPA2PreAuthenticationLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPA2PreAuthenticationLimit.setStatus('current')
wsNetworkWPA2RoambackKeyCacheHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWPA2RoambackKeyCacheHoldtime.setStatus('current')
wsNetworkStaticWEPAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("openSystem", 1), ("sharedKey", 2), ("both", 3))).clone('openSystem')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkStaticWEPAuthenticationMode.setStatus('current')
wsNetworkUseWEPTransferKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkUseWEPTransferKeyIndex.setStatus('current')
wsNetworkWEPKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2))).clone('hex')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKeyType.setStatus('current')
wsNetworkWEPKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 128))).clone(namedValues=NamedValues(("sixty-four", 64), ("one-twentyeight", 128))).clone('one-twentyeight')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKeyLength.setStatus('current')
wsNetworkWEPKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 28), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKey1.setStatus('current')
wsNetworkWEPKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 29), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKey2.setStatus('current')
wsNetworkWEPKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 30), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKey3.setStatus('current')
wsNetworkWEPKey4 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 31), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkWEPKey4.setStatus('current')
wsClearNetworkEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClearNetworkEntry.setStatus('current')
wsNetworkRedirectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("http", 2))).clone('none'))
if mibBuilder.loadTexts: wsNetworkRedirectMode.setStatus('deprecated')
wsNetworkRedirectURL = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: wsNetworkRedirectURL.setStatus('deprecated')
wsIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsIfNumber.setStatus('current')
wsNetworkAuthRadiusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Default-RADIUS-Server')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkAuthRadiusServerName.setStatus('current')
wsNetworkAuthRadiusServerConfiguredStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-configured", 1), ("configured", 2))).clone('not-configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkAuthRadiusServerConfiguredStatus.setStatus('current')
wsNetworkAcctRadiusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Default-RADIUS-Server')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkAcctRadiusServerName.setStatus('current')
wsNetworkAcctRadiusServerConfiguredStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-configured", 1), ("configured", 2))).clone('not-configured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkAcctRadiusServerConfiguredStatus.setStatus('current')
wsUseNetworkRadiusConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsUseNetworkRadiusConfig.setStatus('current')
wsNetworkDistTunnelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkDistTunnelMode.setStatus('current')
wsNetworkBcastKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkBcastKeyRefreshRate.setStatus('current')
wsNetworkSessionKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkSessionKeyRefreshRate.setStatus('current')
wsNetworkARPSuppressionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNetworkARPSuppressionMode.setStatus('current')
wsNetworkBandSteerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 8, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsNetworkBandSteerMode.setStatus('current')
wsNetworkClientQosTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9), )
if mibBuilder.loadTexts: wsNetworkClientQosTable.setStatus('current')
wsNetworkClientQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1), )
wsNetworkEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsNetworkClientQosEntry"))
wsNetworkClientQosEntry.setIndexNames(*wsNetworkEntry.getIndexNames())
if mibBuilder.loadTexts: wsNetworkClientQosEntry.setStatus('current')
wsNetworkClientQosBandwidthLimitDown = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsNetworkClientQosBandwidthLimitDown.setStatus('current')
wsNetworkClientQosBandwidthLimitUp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsNetworkClientQosBandwidthLimitUp.setStatus('current')
wsNetworkClientQosAccessControlDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))).clone('none'))
if mibBuilder.loadTexts: wsNetworkClientQosAccessControlDownType.setStatus('current')
wsNetworkClientQosAccessControlDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsNetworkClientQosAccessControlDownName.setStatus('current')
wsNetworkClientQosAccessControlUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))).clone('none'))
if mibBuilder.loadTexts: wsNetworkClientQosAccessControlUpType.setStatus('current')
wsNetworkClientQosAccessControlUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsNetworkClientQosAccessControlUpName.setStatus('current')
wsNetworkClientQosDiffservPolicyDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))).clone('none'))
if mibBuilder.loadTexts: wsNetworkClientQosDiffservPolicyDownType.setStatus('current')
wsNetworkClientQosDiffservPolicyDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsNetworkClientQosDiffservPolicyDownName.setStatus('current')
wsNetworkClientQosDiffservPolicyUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))).clone('none'))
if mibBuilder.loadTexts: wsNetworkClientQosDiffservPolicyUpType.setStatus('current')
wsNetworkClientQosDiffservPolicyUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsNetworkClientQosDiffservPolicyUpName.setStatus('current')
wsNetworkClientQosMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsNetworkClientQosMode.setStatus('current')
wsAPProfileRadioSupportedChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 10), )
if mibBuilder.loadTexts: wsAPProfileRadioSupportedChannelsTable.setStatus('current')
wsAPProfileRadioSupportedChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 10, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsSupportedChannel"))
if mibBuilder.loadTexts: wsAPProfileRadioSupportedChannelsEntry.setStatus('current')
wsSupportedChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSupportedChannel.setStatus('current')
wsAPProfileRadioEligibleChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 11), )
if mibBuilder.loadTexts: wsAPProfileRadioEligibleChannelsTable.setStatus('current')
wsAPProfileRadioEligibleChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 11, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsEligibleChannel"))
if mibBuilder.loadTexts: wsAPProfileRadioEligibleChannelsEntry.setStatus('current')
wsEligibleChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsEligibleChannel.setStatus('current')
wsEligibleChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 11, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsEligibleChannelRowStatus.setStatus('current')
wsAPProfileRadioTspecTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12), )
if mibBuilder.loadTexts: wsAPProfileRadioTspecTable.setStatus('current')
wsAPProfileRadioTspecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1), )
wsAPProfileRadioEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileRadioTspecEntry"))
wsAPProfileRadioTspecEntry.setIndexNames(*wsAPProfileRadioEntry.getIndexNames())
if mibBuilder.loadTexts: wsAPProfileRadioTspecEntry.setStatus('current')
wsAPRadioTspecMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPRadioTspecMode.setStatus('current')
wsAPRadioTspecVoiceAcmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPRadioTspecVoiceAcmMode.setStatus('current')
wsAPRadioTspecVideoAcmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPRadioTspecVideoAcmMode.setStatus('current')
wsAPRadioTspecVoiceAcmLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 70), )).clone(20))
if mibBuilder.loadTexts: wsAPRadioTspecVoiceAcmLimit.setStatus('current')
wsAPRadioTspecVideoAcmLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 70), )).clone(15))
if mibBuilder.loadTexts: wsAPRadioTspecVideoAcmLimit.setStatus('current')
wsAPRadioTspecRoamReserveLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 70), )).clone(5))
if mibBuilder.loadTexts: wsAPRadioTspecRoamReserveLimit.setStatus('current')
wsAPRadioTspecApInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 120), )).clone(30))
if mibBuilder.loadTexts: wsAPRadioTspecApInactivityTimeout.setStatus('current')
wsAPRadioTspecStaInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 120), )).clone(30))
if mibBuilder.loadTexts: wsAPRadioTspecStaInactivityTimeout.setStatus('current')
wsAPRadioTspecLegacyWmmQueueMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsAPRadioTspecLegacyWmmQueueMapMode.setStatus('current')
wsAPProfileRadioMCSIndexTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 13), )
if mibBuilder.loadTexts: wsAPProfileRadioMCSIndexTable.setStatus('obsolete')
wsAPProfileRadioMCSIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 13, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProfileId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRadioMCSIndexValue"))
if mibBuilder.loadTexts: wsAPProfileRadioMCSIndexEntry.setStatus('obsolete')
wsAPRadioMCSIndexValue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMCSIndexValue.setStatus('obsolete')
wsAPRadioMCSIndexAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRadioMCSIndexAvailable.setStatus('obsolete')
wsAPCodeDownloadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadServerIP.setStatus('current')
wsAPImageTypeFileTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 2), )
if mibBuilder.loadTexts: wsAPImageTypeFileTable.setStatus('current')
wsAPImageTypeFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPImageTypeID"))
if mibBuilder.loadTexts: wsAPImageTypeFileEntry.setStatus('current')
wsAPImageFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPImageFilePath.setStatus('current')
wsAPImageFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPImageFileName.setStatus('current')
wsAPCodeDownloadMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadMACAddress.setStatus('current')
wsAPCodeDownloadGroupSize = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadGroupSize.setStatus('current')
wsAPCodeDownloadImageType = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("tq3600", 1), ("image2", 2), ("image3", 3), ("tq2450", 4), ("tq4400", 5), ("tq4600", 6), ("tq3200", 7), ("tq3400", 8), ("all", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadImageType.setStatus('current')
wsAPCodeDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("code-transfer-in-progress", 3), ("aborted", 4), ("nvram-update-in-progress", 5), ("success", 6), ("failure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadStatus.setStatus('current')
wsAPCodeDownloadTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadTotalCount.setStatus('current')
wsAPCodeDownloadSuccessCount = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadSuccessCount.setStatus('current')
wsAPCodeDownloadFailureCount = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadFailureCount.setStatus('current')
wsAPCodeDownloadAbortCount = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadAbortCount.setStatus('current')
wsAPCodeDownloadAbort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPCodeDownloadAbort.setStatus('current')
wsChannelPlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1), )
if mibBuilder.loadTexts: wsChannelPlanTable.setStatus('current')
wsChannelPlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlan"))
if mibBuilder.loadTexts: wsChannelPlanEntry.setStatus('current')
wsChannelPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlan.setStatus('current')
wsChannelPlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("interval", 2), ("time", 3))).clone('manual')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanMode.setStatus('current')
wsChannelPlanInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanInterval.setStatus('current')
wsChannelPlanTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanTime.setStatus('current')
wsChannelPlanHistoryDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanHistoryDepth.setStatus('obsolete')
wsChannelPlanOperatingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanOperatingStatus.setStatus('current')
wsChannelPlanLastIterationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanLastIterationStatus.setStatus('obsolete')
wsChannelPlanManualAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("start", 2), ("abort", 3), ("clear", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanManualAction.setStatus('current')
wsChannelPlanManualStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("algorithm-in-progress", 2), ("algorithm-complete", 3), ("apply-in-process", 4), ("apply-complete", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanManualStatus.setStatus('obsolete')
wsChannelPlanLastAlgorithmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanLastAlgorithmTime.setStatus('current')
wsChannelPlanChangeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, -1)).clone(-82)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanChangeThreshold.setStatus('current')
wsChannelPlanChangeThresholdAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanChangeThresholdAdj.setStatus('current')
wsChannelPlanIgnoreUnamangedAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanIgnoreUnamangedAPs.setStatus('current')
wsChannelPlanRunOnManagedApFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanRunOnManagedApFailure.setStatus('current')
wsChannelPlanManagedAPFailureInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanManagedAPFailureInterval.setStatus('current')
wsChannelPlanNumOfRadios = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanNumOfRadios.setStatus('current')
wsChannelPlanNumOfRadiosAnalysed = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanNumOfRadiosAnalysed.setStatus('current')
wsChannelPlanNumOfRadiosScanned = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanNumOfRadiosScanned.setStatus('current')
wsChannelPlanNumOfRadiosChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanNumOfRadiosChanged.setStatus('current')
wsChannelPlanNumOfRadiosChangedToOrigChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanNumOfRadiosChangedToOrigChannel.setStatus('current')
wsChannelPlanEstimatedTimeOfCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanEstimatedTimeOfCompletion.setStatus('current')
wsChannelPlanPercentageComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanPercentageComplete.setStatus('current')
wsChannelPlanHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2), )
if mibBuilder.loadTexts: wsChannelPlanHistoryTable.setStatus('obsolete')
wsChannelPlanHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanHistory"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanAPRadioInterface"))
if mibBuilder.loadTexts: wsChannelPlanHistoryEntry.setStatus('obsolete')
wsChannelPlanHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2))))
if mibBuilder.loadTexts: wsChannelPlanHistory.setStatus('obsolete')
wsChannelPlanAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsChannelPlanAPMacAddress.setStatus('obsolete')
wsChannelPlanAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsChannelPlanAPRadioInterface.setStatus('obsolete')
wsChannelPlanAPLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPLocation.setStatus('obsolete')
wsChannelPlanAPHistoryIteration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPHistoryIteration.setStatus('obsolete')
wsChannelPlanAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(6, 6), ValueRangeConstraint(11, 11), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPChannel.setStatus('obsolete')
wsChannelPlanManualProposedAdjustmentTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3), )
if mibBuilder.loadTexts: wsChannelPlanManualProposedAdjustmentTable.setStatus('obsolete')
wsChannelPlanManualProposedAdjustmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanManual"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanManualMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanManualAPRadioInterface"))
if mibBuilder.loadTexts: wsChannelPlanManualProposedAdjustmentEntry.setStatus('obsolete')
wsChannelPlanManual = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2))))
if mibBuilder.loadTexts: wsChannelPlanManual.setStatus('obsolete')
wsChannelPlanManualMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsChannelPlanManualMacAddress.setStatus('obsolete')
wsChannelPlanManualAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsChannelPlanManualAPRadioInterface.setStatus('obsolete')
wsChannelPlanManualCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanManualCurrentChannel.setStatus('obsolete')
wsChannelPlanManualNewChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanManualNewChannel.setStatus('obsolete')
wsPowerAdjustmentMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("interval", 2))).clone('manual')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerAdjustmentMode.setStatus('current')
wsPowerAdjustmentStrength = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, -1)).clone(-85)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerAdjustmentStrength.setStatus('current')
wsPowerManualProposedAdjustmentAction = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("start", 2), ("apply", 3), ("clear", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentAction.setStatus('current')
wsManualPowerAdjustmentStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("algorithm-in-progress", 2), ("algorithm-complete", 3), ("apply-in-process", 4), ("apply-complete", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManualPowerAdjustmentStatus.setStatus('obsolete')
wsPowerManualProposedAdjustmentTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8), )
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentTable.setStatus('obsolete')
wsPowerManualProposedAdjustmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPowerManualProposedAdjustmentAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsPowerManualProposedAdjustmentAPRadioInterface"))
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentEntry.setStatus('obsolete')
wsPowerManualProposedAdjustmentAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentAPMacAddress.setStatus('obsolete')
wsPowerManualProposedAdjustmentAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentAPRadioInterface.setStatus('obsolete')
wsPowerManualProposedAdjustmentAPCurrentTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentAPCurrentTxPower.setStatus('obsolete')
wsPowerManualProposedAdjustmentAPNewTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerManualProposedAdjustmentAPNewTxPower.setStatus('obsolete')
wsPowerPlanOperatingStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("inactive", 0), ("gatheringNbrData", 1), ("changingPower", 2), ("powerPlanComplete", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanOperatingStatus.setStatus('current')
wsPowerPlanAvgNumInterferingAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAvgNumInterferingAPs.setStatus('current')
wsPowerPlanAvgNumInterferingVAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAvgNumInterferingVAPs.setStatus('current')
wsPowerPlanAPNumOpRadios = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumOpRadios.setStatus('current')
wsPowerPlanAPNumPwrCycles = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumPwrCycles.setStatus('current')
wsPowerPlanGlobalNumPwrChanges = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanGlobalNumPwrChanges.setStatus('current')
wsPowerPlanGlobalNumPwrInc = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanGlobalNumPwrInc.setStatus('current')
wsPowerPlanGlobalNumPwrDec = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanGlobalNumPwrDec.setStatus('current')
wsPowerPlanTimeSinceLastPowerPLan = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 17), DisplayString().clone('Never')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanTimeSinceLastPowerPLan.setStatus('current')
wsChannelPlanPerRadioPerBandTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18), )
if mibBuilder.loadTexts: wsChannelPlanPerRadioPerBandTable.setStatus('current')
wsChannelPlanPerRadioPerBandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanType"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanAPMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsChannelPlanAPRadioIntf"))
if mibBuilder.loadTexts: wsChannelPlanPerRadioPerBandEntry.setStatus('current')
wsChannelPlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2))))
if mibBuilder.loadTexts: wsChannelPlanType.setStatus('current')
wsChannelPlanAPMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsChannelPlanAPMacAddr.setStatus('current')
wsChannelPlanAPRadioIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsChannelPlanAPRadioIntf.setStatus('current')
wsChannelPlanAPIsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("peerSwitch", 0), ("local", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPIsLocal.setStatus('current')
wsChannelPlanAPCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPCurrentChannel.setStatus('current')
wsChannelPlanAPOldChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPOldChannel.setStatus('current')
wsChannelPlanAPStrongestOldSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 7), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestOldSignal.setStatus('current')
wsChannelPlanAPStrongestNewSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 8), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestNewSignal.setStatus('current')
wsChannelPlanAPChannelChangeInd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("wait", 2))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPChannelChangeInd.setStatus('current')
wsChannelPlanAPReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("chanPlanNeverExecuted", 0), ("channelIsStatic", 1), ("oneEligibleChannel", 2), ("detectedAPSignalBelowThresh", 3), ("chanFoundWithLowInterference", 4), ("chanNotFoundWithLowInterference", 5), ("partOfWDSLink", 6))).clone('chanPlanNeverExecuted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPReasonCode.setStatus('current')
wsChannelPlanAPStrongestOldManagedAPandSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 11), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestOldManagedAPandSignal.setStatus('current')
wsChannelPlanAPStrongestNewManagedAPandSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 12), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestNewManagedAPandSignal.setStatus('current')
wsChannelPlanAPStrongestOldUnmanagedAPandSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 13), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestOldUnmanagedAPandSignal.setStatus('current')
wsChannelPlanAPStrongestNewUnmanagedAPandSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 14), DisplayString().clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPStrongestNewUnmanagedAPandSignal.setStatus('current')
wsChannelPlanAPTimeSinceLastChannelChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPTimeSinceLastChannelChange.setStatus('current')
wsChannelPlanAPLastChanScanDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 18, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsChannelPlanAPLastChanScanDuration.setStatus('current')
wsPowerPlanPerRadioTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19), )
if mibBuilder.loadTexts: wsPowerPlanPerRadioTable.setStatus('current')
wsPowerPlanPerRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPowerPlanAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsPowerPlanAPRadioInterface"))
if mibBuilder.loadTexts: wsPowerPlanPerRadioEntry.setStatus('current')
wsPowerPlanAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsPowerPlanAPMacAddress.setStatus('current')
wsPowerPlanAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsPowerPlanAPRadioInterface.setStatus('current')
wsPowerPlanAPIsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("peerSwitch", 0), ("local", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPIsLocal.setStatus('current')
wsPowerPlanAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 4), DisplayString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPChannel.setStatus('current')
wsPowerPlanAPTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPTxPower.setStatus('current')
wsPowerPlanAPNumInterferingAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumInterferingAPs.setStatus('current')
wsPowerPlanAPNumInterferingVAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumInterferingVAPs.setStatus('current')
wsPowerPlanAPStrongestDetectorAP = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPStrongestDetectorAP.setStatus('current')
wsPowerPlanAPStrongestDetectorRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPStrongestDetectorRadio.setStatus('current')
wsPowerPlanAPStrongestDetectorSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 10), DisplayString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPStrongestDetectorSignal.setStatus('current')
wsPowerPlanAPStrongestDetectedNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPStrongestDetectedNeighbor.setStatus('current')
wsPowerPlanAPStrongestDetectedSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 12), DisplayString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPStrongestDetectedSignal.setStatus('current')
wsPowerPlanAPLastPwrAdjStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unchanged", 0), ("increased", 1), ("reduced", 2))).clone('unchanged')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPLastPwrAdjStatus.setStatus('current')
wsPowerPlanAPLastPwrAdjReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("powerPlanNeverExecuted", 0), ("powerPlanRadioInSentryMode", 1), ("powerPlanRadioAutoPowerDisable", 2), ("powerPlanRadioPowerUnchanged", 3), ("powerPlanRadioOperatingInMaxPower", 4), ("powerPlanRadioOperatingInMinPower", 5), ("powerPlanRadioMinPowerIs100", 6), ("powerPlanRadioPowerIncreaseRequired", 7), ("powerPlanRadioPowerDecreaseRequired", 8), ("powerPlanRadioPowerAdjNone", 9), ("powerPlanRadioPowerPartOfWDSLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPLastPwrAdjReasonCode.setStatus('current')
wsPowerPlanAPNumPwrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumPwrChanges.setStatus('current')
wsPowerPlanAPNumPwrInc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumPwrInc.setStatus('current')
wsPowerPlanAPNumPwrDec = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 19, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanAPNumPwrDec.setStatus('current')
wsPowerPlanPerProfileTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20), )
if mibBuilder.loadTexts: wsPowerPlanPerProfileTable.setStatus('current')
wsPowerPlanPerProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPowerPlanProfileId"))
if mibBuilder.loadTexts: wsPowerPlanPerProfileEntry.setStatus('current')
wsPowerPlanProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999)))
if mibBuilder.loadTexts: wsPowerPlanProfileId.setStatus('current')
wsPowerPlanPerProfileAvgNumInterferingAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanPerProfileAvgNumInterferingAPs.setStatus('current')
wsPowerPlanPerProfileAvgNumInterferingVAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanPerProfileAvgNumInterferingVAPs.setStatus('current')
wsPowerPlanNumPwrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanNumPwrChanges.setStatus('current')
wsPowerPlanNumPwrInc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanNumPwrInc.setStatus('current')
wsPowerPlanNumPwrDec = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPowerPlanNumPwrDec.setStatus('current')
wsNtwProvisoningAction = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("start", 1), ("stop", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsNtwProvisoningAction.setStatus('current')
wsNtwProvisioningOperatingStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notstarted", 0), ("running", 1), ("finished", 2), ("aborted", 3), ("failed", 4))).clone('notstarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNtwProvisioningOperatingStatus.setStatus('current')
wsNtwProvisioningTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNtwProvisioningTimeStamp.setStatus('current')
wsNtwProvisioningChanBGCompletion = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNtwProvisioningChanBGCompletion.setStatus('current')
wsNtwProvisioningChanACompletion = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNtwProvisioningChanACompletion.setStatus('current')
wsNtwProvisioningPowerPlanCnt = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 5, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNtwProvisioningPowerPlanCnt.setStatus('current')
wsManagedAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1), )
if mibBuilder.loadTexts: wsManagedAPStatusTable.setStatus('current')
wsManagedAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsManagedAPStatusEntry.setStatus('current')
wsManagedAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPMacAddress.setStatus('current')
wsManagedAPIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPIpAddress.setStatus('current')
wsManagedAPVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: wsManagedAPVendorId.setStatus('current')
wsManagedAPSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPSoftwareVersion.setStatus('current')
wsManagedAPHWType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 5), Integer32())
if mibBuilder.loadTexts: wsManagedAPHWType.setStatus('current')
wsManagedAPSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: wsManagedAPSerialNumber.setStatus('current')
wsManagedAPPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: wsManagedAPPartNumber.setStatus('current')
wsManagedAPDiscoveryReason = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ip-poll", 1), ("peer-switch-initiated", 2), ("switch-ip-configured-in-ap", 3), ("switch-ip-obtained-via-dhcp", 4), ("l2Discovery", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDiscoveryReason.setStatus('current')
wsManagedAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discovered", 1), ("authenticated", 2), ("upgrading", 3), ("managed", 4), ("connection-failed", 5), ("deleted", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPStatus.setStatus('current')
wsManagedAPAuthenticatedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPAuthenticatedClients.setStatus('current')
wsManagedAPSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPSysUpTime.setStatus('current')
wsManagedAPProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPProfileId.setStatus('current')
wsManagedAPProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPProfileName.setStatus('current')
wsManagedAPProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPProtocolVersion.setStatus('current')
wsManagedAPCodeDownloadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("code-transfer-in-progress", 3), ("waiting-for-aps-to-download", 4), ("aborted", 5), ("nvram-update-in-progress", 6), ("timed-out", 7), ("failure", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCodeDownloadStatus.setStatus('current')
wsManagedAPLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPLocation.setStatus('current')
wsManagedAPLastFailingConfigElement = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPLastFailingConfigElement.setStatus('current')
wsManagedAPConfigFailureErrMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPConfigFailureErrMsg.setStatus('current')
wsManagedAPReset = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPReset.setStatus('current')
wsManagedAPResetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-started", 1), ("in-progress", 2), ("success", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPResetStatus.setStatus('current')
wsManagedAPFailedEntryPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPFailedEntryPurge.setStatus('current')
wsManagedAPDebugPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: wsManagedAPDebugPassword.setStatus('current')
wsManagedAPDebugMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsManagedAPDebugMode.setStatus('current')
wsManagedAPDebugStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("in-progress", 3), ("success", 4), ("failure", 5))))
if mibBuilder.loadTexts: wsManagedAPDebugStatus.setStatus('current')
wsManagedAPAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPAge.setStatus('current')
wsManagedAPManagingSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local-switch", 1), ("peer-switch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPManagingSwitch.setStatus('current')
wsManagedAPSwitchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 27), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPSwitchMacAddress.setStatus('current')
wsManagedAPSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPSwitchIpAddress.setStatus('current')
wsManagedAPIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 29), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPIpMask.setStatus('current')
wsManagedAPDistTunnelHomeAPClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelHomeAPClients.setStatus('current')
wsManagedAPDistTunnelAssocAPClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelAssocAPClients.setStatus('current')
wsManagedAPDistTunnelsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelsTotal.setStatus('current')
wsManagedAPDistTunnelsMaxMcastRepl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelsMaxMcastRepl.setStatus('current')
wsManagedAPDistTunnelsMaxVlanMcastRepl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelsMaxVlanMcastRepl.setStatus('current')
wsManagedAPFailedEntriesPurge = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPFailedEntriesPurge.setStatus('current')
wsManagedAPStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3), )
if mibBuilder.loadTexts: wsManagedAPStatisticsTable.setStatus('current')
wsManagedAPStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1), )
wsManagedAPStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPStatisticsEntry"))
wsManagedAPStatisticsEntry.setIndexNames(*wsManagedAPStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPStatisticsEntry.setStatus('current')
wsManagedAPWLANPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANPktsRecvd.setStatus('current')
wsManagedAPWLANBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANBytesRecvd.setStatus('current')
wsManagedAPWLANPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANPktsTransmitted.setStatus('current')
wsManagedAPWLANBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANBytesTransmitted.setStatus('current')
wsManagedAPEthernetPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetPktsRecvd.setStatus('current')
wsManagedAPEthernetBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetBytesRecvd.setStatus('current')
wsManagedAPEthernetMcastPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetMcastPktsRecvd.setStatus('current')
wsManagedAPEthernetPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetPktsTransmitted.setStatus('current')
wsManagedAPEthernetBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetBytesTransmitted.setStatus('current')
wsManagedAPEthernetTransmitErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetTransmitErrorCount.setStatus('current')
wsManagedAPEthernetRecvdErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPEthernetRecvdErrorCount.setStatus('current')
wsManagedAPCL2TunnelBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelBytesRecvd.setStatus('current')
wsManagedAPCL2TunnelPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelPktsRecvd.setStatus('current')
wsManagedAPCL2TunnelMcastRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelMcastRecvd.setStatus('current')
wsManagedAPCL2TunnelBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelBytesTransmitted.setStatus('current')
wsManagedAPCL2TunnelPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelPktsTransmitted.setStatus('current')
wsManagedAPCL2TunnelMcastTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPCL2TunnelMcastTransmitted.setStatus('current')
wsManagedAPWLANPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANPktsRecvDropped.setStatus('current')
wsManagedAPWLANBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANBytesRecvDropped.setStatus('current')
wsManagedAPWLANPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANPktsTransmitDropped.setStatus('current')
wsManagedAPWLANBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPWLANBytesTransmitDropped.setStatus('current')
wsManagedAPDistTunnelBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelBytesTransmitted.setStatus('current')
wsManagedAPDistTunnelBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelBytesReceived.setStatus('current')
wsManagedAPDistTunnelPacketsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelPacketsTransmitted.setStatus('current')
wsManagedAPDistTunnelPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelPacketsReceived.setStatus('current')
wsManagedAPDistTunnelMcastPacketsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelMcastPacketsTransmitted.setStatus('current')
wsManagedAPDistTunnelMcastPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelMcastPacketsReceived.setStatus('current')
wsManagedAPDistTunnelRoamedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelRoamedClients.setStatus('current')
wsManagedAPDistTunnelRoamedClientsIdleTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelRoamedClientsIdleTimedOut.setStatus('current')
wsManagedAPDistTunnelRoamedClientsAgeTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelRoamedClientsAgeTimedOut.setStatus('current')
wsManagedAPDistTunnelMaxClientLimitSetupDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelMaxClientLimitSetupDenials.setStatus('current')
wsManagedAPDistTunnelMaxReplSetupDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPDistTunnelMaxReplSetupDenials.setStatus('current')
wsManagedAPARPReqsFromBcastToUcast = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPARPReqsFromBcastToUcast.setStatus('current')
wsManagedAPFilteredARPRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPFilteredARPRequest.setStatus('current')
wsManagedAPBroadcastedARPRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 3, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPBroadcastedARPRequests.setStatus('current')
wsManagedAPRadioStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4), )
if mibBuilder.loadTexts: wsManagedAPRadioStatusTable.setStatus('current')
wsManagedAPRadioStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"))
if mibBuilder.loadTexts: wsManagedAPRadioStatusEntry.setStatus('current')
wsManagedAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioInterface.setStatus('current')
wsManagedAPRadioMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMacAddress.setStatus('current')
wsManagedAPRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioChannel.setStatus('current')
wsManagedAPRadioTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioTxPower.setStatus('current')
wsManagedAPRadioAuthenticatedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioAuthenticatedClients.setStatus('current')
wsManagedAPRadioWLANUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWLANUtilization.setStatus('current')
wsManagedAPRadioFixedChannelIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedChannelIndicator.setStatus('current')
wsManagedAPRadioMCAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("in-progress", 2), ("complete", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMCAStatus.setStatus('current')
wsManagedAPRadioFixedPowerIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedPowerIndicator.setStatus('current')
wsManagedAPRadioMPAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("in-progress", 2), ("complete", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMPAStatus.setStatus('current')
wsManagedAPRadioNeighborCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioNeighborCount.setStatus('current')
wsManagedAPRadioFixedChannelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("apply", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedChannelAction.setStatus('current')
wsManagedAPRadioFixedChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedChannel.setStatus('current')
wsManagedAPRadioFixedPowerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("apply", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedPowerAction.setStatus('current')
wsManagedAPRadioFixedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFixedPower.setStatus('current')
wsManagedAPRadioBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("twentyMHz", 1), ("fortyMHz", 2), ("eightyMHz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioBandwidth.setStatus('current')
wsManagedAPRadioResourceMeasEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))))
if mibBuilder.loadTexts: wsManagedAPRadioResourceMeasEnabled.setStatus('current')
wsManagedAPRadioStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5), )
if mibBuilder.loadTexts: wsManagedAPRadioStatisticsTable.setStatus('current')
wsManagedAPRadioStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1), )
wsManagedAPRadioStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioStatisticsEntry"))
wsManagedAPRadioStatisticsEntry.setIndexNames(*wsManagedAPRadioStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPRadioStatisticsEntry.setStatus('current')
wsManagedAPRadioWLANPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWLANPktsRecvd.setStatus('current')
wsManagedAPRadioWLANBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWLANBytesRecvd.setStatus('current')
wsManagedAPRadioWLANPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWLANPktsTransmitted.setStatus('current')
wsManagedAPRadioWLANBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWLANBytesTransmitted.setStatus('current')
wsManagedAPRadioTxFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioTxFragmentCount.setStatus('current')
wsManagedAPRadioMcastTxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMcastTxFrameCount.setStatus('current')
wsManagedAPRadioFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFailedCount.setStatus('current')
wsManagedAPRadioRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioRetryCount.setStatus('current')
wsManagedAPRadioMultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMultipleRetryCount.setStatus('current')
wsManagedAPRadioFrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFrameDuplicateCount.setStatus('current')
wsManagedAPRadioRTSSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioRTSSuccessCount.setStatus('current')
wsManagedAPRadioRTSFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioRTSFailureCount.setStatus('current')
wsManagedAPRadioACKFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioACKFailureCount.setStatus('current')
wsManagedAPRadioRecvdFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioRecvdFragmentCount.setStatus('current')
wsManagedAPRadioMcastRecvdFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioMcastRecvdFrameCount.setStatus('current')
wsManagedAPRadioFCSErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioFCSErrorCount.setStatus('current')
wsManagedAPRadioTxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioTxFrameCount.setStatus('current')
wsManagedAPRadioWEPUndecryptableCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioWEPUndecryptableCount.setStatus('current')
wsManagedAPRadioWLANPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 19), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioWLANPktsRecvDropped.setStatus('current')
wsManagedAPRadioWLANBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 20), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioWLANBytesRecvDropped.setStatus('current')
wsManagedAPRadioWLANPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 21), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioWLANPktsTransmitDropped.setStatus('current')
wsManagedAPRadioWLANBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 5, 1, 22), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioWLANBytesTransmitDropped.setStatus('current')
wsManagedAPNeighborAPListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6), )
if mibBuilder.loadTexts: wsManagedAPNeighborAPListTable.setStatus('current')
wsManagedAPNeighborAPListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsNeighborMacAddress"))
if mibBuilder.loadTexts: wsManagedAPNeighborAPListEntry.setStatus('current')
wsNeighborMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborMacAddress.setStatus('current')
wsNeighborSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborSSID.setStatus('current')
wsNeighborRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborRSSI.setStatus('current')
wsNeighborStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("managed", 1), ("unknown", 2), ("standalone", 3), ("rogue", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborStatus.setStatus('current')
wsNeighborAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborAge.setStatus('current')
wsManagedAPNeighborEntriesPurge = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPNeighborEntriesPurge.setStatus('current')
wsManagedAPNeighborClientListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8), )
if mibBuilder.loadTexts: wsManagedAPNeighborClientListTable.setStatus('current')
wsManagedAPNeighborClientListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsNeighborClientMacAddress"))
if mibBuilder.loadTexts: wsManagedAPNeighborClientListEntry.setStatus('current')
wsNeighborClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborClientMacAddress.setStatus('current')
wsNeighborClientRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborClientRSSI.setStatus('current')
wsNeighborClientChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborClientChannel.setStatus('current')
wsNeighborClientAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborClientAge.setStatus('current')
wsNeighborClientDiscoveryReason = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 8, 1, 5), Bits().clone(namedValues=NamedValues(("none", 0), ("rfscan-discovered", 1), ("neighbor-ap-associated", 2), ("current-ap-associated", 3), ("probe-request-discovered", 4), ("peer-ap-associated", 5), ("ad-hoc-rogue", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighborClientDiscoveryReason.setStatus('current')
wsManagedAPVAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9), )
if mibBuilder.loadTexts: wsManagedAPVAPStatusTable.setStatus('current')
wsManagedAPVAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedVAPId"))
if mibBuilder.loadTexts: wsManagedAPVAPStatusEntry.setStatus('current')
wsManagedVAPId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPId.setStatus('current')
wsManagedVAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPMacAddress.setStatus('current')
wsManagedVAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPSSID.setStatus('current')
wsManagedVAPAuthenticatedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPAuthenticatedClients.setStatus('current')
wsManagedAPVAPStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10), )
if mibBuilder.loadTexts: wsManagedAPVAPStatisticsTable.setStatus('current')
wsManagedAPVAPStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1), )
wsManagedAPVAPStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPVAPStatisticsEntry"))
wsManagedAPVAPStatisticsEntry.setIndexNames(*wsManagedAPVAPStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPVAPStatisticsEntry.setStatus('current')
wsManagedVAPAssociationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPAssociationFailures.setStatus('current')
wsManagedVAPAuthenticationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPAuthenticationFailures.setStatus('current')
wsManagedVAPWLANPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPWLANPktsRecvd.setStatus('current')
wsManagedVAPWLANBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPWLANBytesRecvd.setStatus('current')
wsManagedVAPWLANPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPWLANPktsTransmitted.setStatus('current')
wsManagedVAPWLANBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedVAPWLANBytesTransmitted.setStatus('current')
wsManagedVAPWLANPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 7), Counter64())
if mibBuilder.loadTexts: wsManagedVAPWLANPktsRecvDropped.setStatus('current')
wsManagedVAPWLANBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 8), Counter64())
if mibBuilder.loadTexts: wsManagedVAPWLANBytesRecvDropped.setStatus('current')
wsManagedVAPWLANPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 9), Counter64())
if mibBuilder.loadTexts: wsManagedVAPWLANPktsTransmitDropped.setStatus('current')
wsManagedVAPWLANBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 10, 1, 10), Counter64())
if mibBuilder.loadTexts: wsManagedVAPWLANBytesTransmitDropped.setStatus('current')
wsManagedAPResetAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPResetAll.setStatus('current')
wsManagedAPRadioEligibleChannelListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12), )
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannelListTable.setStatus('current')
wsManagedAPRadioEligibleChannelListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioEligibleChannel"))
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannelListEntry.setStatus('current')
wsManagedAPRadioEligibleChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannel.setStatus('current')
wsManagedAPRadioEligibleChannelRdrDetRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannelRdrDetRequired.setStatus('current')
wsManagedAPRadioEligibleChannelRdrDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannelRdrDetected.setStatus('current')
wsManagedAPRadioEligibleChannelLastRdrDetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 6, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsManagedAPRadioEligibleChannelLastRdrDetTime.setStatus('current')
wsAssociatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1), )
if mibBuilder.loadTexts: wsAssociatedClientStatusTable.setStatus('obsolete')
wsAssociatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsAssociatedClientStatusEntry.setStatus('obsolete')
wsAssociatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientMacAddress.setStatus('obsolete')
wsAssociatedClientTunnelIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: wsAssociatedClientTunnelIpAddress.setStatus('obsolete')
wsAssociatedClientUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientUserName.setStatus('obsolete')
wsAssociatedClientSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSSID.setStatus('obsolete')
wsAssociatedClientVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientVLAN.setStatus('obsolete')
wsAssociatedClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authenticated", 1), ("associated", 2), ("disassociated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientStatus.setStatus('obsolete')
wsAssociatedClientTxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientTxDataRate.setStatus('obsolete')
wsAssociatedClientInactivePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientInactivePeriod.setStatus('obsolete')
wsAssociatedClientDisassociateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDisassociateAction.setStatus('obsolete')
wsAssociatedClientAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientAge.setStatus('obsolete')
wsAssociatedClientAssociatingSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local-switch", 1), ("peer-switch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientAssociatingSwitch.setStatus('obsolete')
wsAssociatedClientSwitchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSwitchMacAddress.setStatus('obsolete')
wsAssociatedClientSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSwitchIpAddress.setStatus('obsolete')
wsAssociatedClientDot11nCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDot11nCapable.setStatus('obsolete')
wsAssociatedClientStbcCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))))
if mibBuilder.loadTexts: wsAssociatedClientStbcCapable.setStatus('obsolete')
wsAssociatedClientDistTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDistTunnelStatus.setStatus('obsolete')
wsAssociatedClientDistTunnelRoamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("associated", 0), ("home", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDistTunnelRoamStatus.setStatus('obsolete')
wsAssociatedClientDistTunnelHomeAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 18), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDistTunnelHomeAPMac.setStatus('obsolete')
wsAssociatedClientDistTunnelAssocAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 19), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDistTunnelAssocAPMac.setStatus('obsolete')
wsAssociatedClientAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientAPMacAddress.setStatus('obsolete')
wsAssociatedClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientBSSID.setStatus('obsolete')
wsAssociatedClientRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientRadioInterface.setStatus('obsolete')
wsAssociatedClientChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientChannel.setStatus('obsolete')
wsAssociatedClientNwTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientNwTime.setStatus('obsolete')
wsAssociatedClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientIpAddress.setStatus('obsolete')
wsAssociatedClientNetBiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientNetBiosName.setStatus('obsolete')
wsAssociatedClientRRMSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("supported", 2), ("unsupported", 3))))
if mibBuilder.loadTexts: wsAssociatedClientRRMSupported.setStatus('obsolete')
wsAssociatedClientRRMLocationReportSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAssociatedClientRRMLocationReportSupported.setStatus('obsolete')
wsAssociatedClientRRMBeaconTableMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAssociatedClientRRMBeaconTableMeasurementSupported.setStatus('obsolete')
wsAssociatedClientRRMBeaconActiveMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAssociatedClientRRMBeaconActiveMeasurementSupported.setStatus('obsolete')
wsAssociatedClientRRMBeaconPassiveMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAssociatedClientRRMBeaconPassiveMeasurementSupported.setStatus('obsolete')
wsAssociatedClientRRMChannelLoadMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAssociatedClientRRMChannelLoadMeasurementSupported.setStatus('obsolete')
wsAssociatedClientStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2), )
if mibBuilder.loadTexts: wsAssociatedClientStatisticsTable.setStatus('obsolete')
wsAssociatedClientStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1), )
wsAssociatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientStatisticsEntry"))
wsAssociatedClientStatisticsEntry.setIndexNames(*wsAssociatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAssociatedClientStatisticsEntry.setStatus('obsolete')
wsAssociatedClientPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientPktsRecvd.setStatus('obsolete')
wsAssociatedClientBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientBytesRecvd.setStatus('obsolete')
wsAssociatedClientPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientPktsTransmitted.setStatus('obsolete')
wsAssociatedClientBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientBytesTransmitted.setStatus('obsolete')
wsAssociatedClientDuplicatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientDuplicatePktsRecvd.setStatus('obsolete')
wsAssociatedClientFragmentedPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientFragmentedPktsRecvd.setStatus('obsolete')
wsAssociatedClientFragmentedPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientFragmentedPktsTransmitted.setStatus('obsolete')
wsAssociatedClientTransmitRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientTransmitRetryCount.setStatus('obsolete')
wsAssociatedClientTransmitRetryFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientTransmitRetryFailedCount.setStatus('obsolete')
wsAssociatedClientPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 10), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientPktsRecvDropped.setStatus('obsolete')
wsAssociatedClientBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 11), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientBytesRecvDropped.setStatus('obsolete')
wsAssociatedClientPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 12), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientPktsTransmitDropped.setStatus('obsolete')
wsAssociatedClientBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 13), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientBytesTransmitDropped.setStatus('obsolete')
wsAssociatedClientTsViolatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 14), Counter32())
if mibBuilder.loadTexts: wsAssociatedClientTsViolatePktsRecvd.setStatus('obsolete')
wsAssociatedClientTsViolatePktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 2, 1, 15), Counter32())
if mibBuilder.loadTexts: wsAssociatedClientTsViolatePktsTransmitted.setStatus('obsolete')
wsAssociatedClientNeighborManagedAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3), )
if mibBuilder.loadTexts: wsAssociatedClientNeighborManagedAPStatusTable.setStatus('obsolete')
wsAssociatedClientNeighborManagedAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsClientStationMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsClientNeighborWSManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsClientNeighborWSManagedAPRadioInterface"))
if mibBuilder.loadTexts: wsAssociatedClientNeighborManagedAPStatusEntry.setStatus('obsolete')
wsClientStationMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsClientStationMacAddress.setStatus('obsolete')
wsClientNeighborWSManagedAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsClientNeighborWSManagedAPMacAddress.setStatus('obsolete')
wsClientNeighborWSManagedAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsClientNeighborWSManagedAPRadioInterface.setStatus('obsolete')
wsClientStationDiscoveryReason = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 3, 1, 4), Bits().clone(namedValues=NamedValues(("none", 0), ("rfscan-discovered", 1), ("neighbor-ap-associated", 2), ("current-ap-associated", 3), ("probe-request-discovered", 4), ("ad-hoc-rogue", 5), ("associated-to-peer-ap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientStationDiscoveryReason.setStatus('obsolete')
wsVAPAssociatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 4), )
if mibBuilder.loadTexts: wsVAPAssociatedClientStatusTable.setStatus('obsolete')
wsVAPAssociatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsVAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsVAPAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsVAPAssociatedClientStatusEntry.setStatus('obsolete')
wsVAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPMacAddress.setStatus('obsolete')
wsVAPAssociatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPAssociatedClientMacAddress.setStatus('obsolete')
wsSSIDAssociatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 5), )
if mibBuilder.loadTexts: wsSSIDAssociatedClientStatusTable.setStatus('obsolete')
wsSSIDAssociatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSSIDAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsSSIDAssociatedClientStatusEntry.setStatus('obsolete')
wsSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: wsSSID.setStatus('obsolete')
wsSSIDAssociatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSSIDAssociatedClientMacAddress.setStatus('obsolete')
wsSwitchAssociatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 6), )
if mibBuilder.loadTexts: wsSwitchAssociatedClientStatusTable.setStatus('obsolete')
wsSwitchAssociatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 6, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsSwitchAssociatedClientStatusEntry.setStatus('obsolete')
wsAssociatedClientSwitchIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: wsAssociatedClientSwitchIPAddress.setStatus('obsolete')
wsSwitchAssociatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 6, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchAssociatedClientMacAddress.setStatus('obsolete')
wsAssociatedClientQosStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7), )
if mibBuilder.loadTexts: wsAssociatedClientQosStatusTable.setStatus('obsolete')
wsAssociatedClientQosStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1), )
wsAssociatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientQosStatusEntry"))
wsAssociatedClientQosStatusEntry.setIndexNames(*wsAssociatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAssociatedClientQosStatusEntry.setStatus('obsolete')
wsAssociatedClientQosBandwidthLimitDown = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientQosBandwidthLimitDown.setStatus('obsolete')
wsAssociatedClientQosBandwidthLimitUp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientQosBandwidthLimitUp.setStatus('obsolete')
wsAssociatedClientQosAccessControlDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAssociatedClientQosAccessControlDownType.setStatus('obsolete')
wsAssociatedClientQosAccessControlDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosAccessControlDownName.setStatus('obsolete')
wsAssociatedClientQosAccessControlUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAssociatedClientQosAccessControlUpType.setStatus('obsolete')
wsAssociatedClientQosAccessControlUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosAccessControlUpName.setStatus('obsolete')
wsAssociatedClientQosDiffservPolicyDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAssociatedClientQosDiffservPolicyDownType.setStatus('obsolete')
wsAssociatedClientQosDiffservPolicyDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosDiffservPolicyDownName.setStatus('obsolete')
wsAssociatedClientQosDiffservPolicyUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAssociatedClientQosDiffservPolicyUpType.setStatus('obsolete')
wsAssociatedClientQosDiffservPolicyUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosDiffservPolicyUpName.setStatus('obsolete')
wsAssociatedClientQosOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAssociatedClientQosOperStatus.setStatus('obsolete')
wsAssociatedClientSessionStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8), )
if mibBuilder.loadTexts: wsAssociatedClientSessionStatisticsTable.setStatus('obsolete')
wsAssociatedClientSessionStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1), )
wsAssociatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientSessionStatisticsEntry"))
wsAssociatedClientSessionStatisticsEntry.setIndexNames(*wsAssociatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAssociatedClientSessionStatisticsEntry.setStatus('obsolete')
wsAssociatedClientSessionPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionPktsRecvd.setStatus('obsolete')
wsAssociatedClientSessionBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionBytesRecvd.setStatus('obsolete')
wsAssociatedClientSessionPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionPktsTransmitted.setStatus('obsolete')
wsAssociatedClientSessionBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionBytesTransmitted.setStatus('obsolete')
wsAssociatedClientSessionDuplicatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionDuplicatePktsRecvd.setStatus('obsolete')
wsAssociatedClientSessionFragmentedPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionFragmentedPktsRecvd.setStatus('obsolete')
wsAssociatedClientSessionFragmentedPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionFragmentedPktsTransmitted.setStatus('obsolete')
wsAssociatedClientSessionTransmitRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionTransmitRetryCount.setStatus('obsolete')
wsAssociatedClientSessionTransmitRetryFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAssociatedClientSessionTransmitRetryFailedCount.setStatus('obsolete')
wsAssociatedClientSessionPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 10), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientSessionPktsRecvDropped.setStatus('obsolete')
wsAssociatedClientSessionBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 11), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientSessionBytesRecvDropped.setStatus('obsolete')
wsAssociatedClientSessionPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 12), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientSessionPktsTransmitDropped.setStatus('obsolete')
wsAssociatedClientSessionBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 13), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientSessionBytesTransmitDropped.setStatus('obsolete')
wsAssociatedClientSessionTSViolatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 14), Counter32())
if mibBuilder.loadTexts: wsAssociatedClientSessionTSViolatePktsRecvd.setStatus('obsolete')
wsAssociatedClientSessionTSViolatePktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 8, 1, 15), Counter32())
if mibBuilder.loadTexts: wsAssociatedClientSessionTSViolatePktsTransmitted.setStatus('obsolete')
wsAssociatedClientQosCachedStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9), )
if mibBuilder.loadTexts: wsAssociatedClientQosCachedStatusTable.setStatus('obsolete')
wsAssociatedClientQosCachedStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1), )
wsAssociatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientQosCachedStatusEntry"))
wsAssociatedClientQosCachedStatusEntry.setIndexNames(*wsAssociatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAssociatedClientQosCachedStatusEntry.setStatus('obsolete')
wsAssociatedClientQosCachedBandwidthLimitDown = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientQosCachedBandwidthLimitDown.setStatus('obsolete')
wsAssociatedClientQosCachedBandwidthLimitUp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientQosCachedBandwidthLimitUp.setStatus('obsolete')
wsAssociatedClientQosCachedAccessControlDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedAccessControlDownType.setStatus('obsolete')
wsAssociatedClientQosCachedAccessControlDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedAccessControlDownName.setStatus('obsolete')
wsAssociatedClientQosCachedAccessControlUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedAccessControlUpType.setStatus('obsolete')
wsAssociatedClientQosCachedAccessControlUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedAccessControlUpName.setStatus('obsolete')
wsAssociatedClientQosCachedDiffservPolicyDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedDiffservPolicyDownType.setStatus('obsolete')
wsAssociatedClientQosCachedDiffservPolicyDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedDiffservPolicyDownName.setStatus('obsolete')
wsAssociatedClientQosCachedDiffservPolicyUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedDiffservPolicyUpType.setStatus('obsolete')
wsAssociatedClientQosCachedDiffservPolicyUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 7, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAssociatedClientQosCachedDiffservPolicyUpName.setStatus('obsolete')
wsPeerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1), )
if mibBuilder.loadTexts: wsPeerStatusTable.setStatus('current')
wsPeerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"))
if mibBuilder.loadTexts: wsPeerStatusEntry.setStatus('current')
wsPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerIpAddress.setStatus('current')
wsPeerClusterControllerIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerClusterControllerIndicator.setStatus('current')
wsPeerTotalPeerSwitches = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerTotalPeerSwitches.setStatus('current')
wsPeerVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerVendorId.setStatus('current')
wsPeerProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerProtocolVersion.setStatus('current')
wsPeerSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSoftwareVersion.setStatus('current')
wsPeerDiscoveryReason = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip-poll", 1), ("l2-poll", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerDiscoveryReason.setStatus('current')
wsPeerAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerAge.setStatus('current')
wsPeerManagedAPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerManagedAPCount.setStatus('current')
wsPeerConfigRequestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigRequestAction.setStatus('current')
wsPeerConfigRequestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("notStarted", 0), ("requested", 1), ("inProgress", 2), ("invalidCodeVersion", 3), ("invalidHwVersion", 4), ("operationInProgress", 5), ("invalidConfig", 6), ("invalidPacketFormat", 7), ("failureTimeout", 8), ("failureGeneric", 9), ("success", 10))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigRequestStatus.setStatus('current')
wsPeerConfigSwitchIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigSwitchIp.setStatus('current')
wsPeerConfigReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 13), Bits().clone(namedValues=NamedValues(("none", 1), ("globalConfig", 2), ("discoveryConfig", 3), ("validAPDatabase", 4), ("channelPowerConfig", 5), ("profileNetworkConfig", 6), ("knownClientConfig", 7), ("captivePortalConfig", 8), ("radiusClientConfig", 9), ("qosAclConfig", 10), ("qosDiffServConfig", 11), ("wdsGroupConfig", 12), ("deviceLocationConfig", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigReceived.setStatus('current')
wsPeerConfigReceivedTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerConfigReceivedTimestamp.setStatus('current')
wsPeerSwitchManagedAPTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3), )
if mibBuilder.loadTexts: wsPeerSwitchManagedAPTable.setStatus('current')
wsPeerSwitchManagedAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsPeerSwitchIpAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsPeerSwitchAPMacAddress"))
if mibBuilder.loadTexts: wsPeerSwitchManagedAPEntry.setStatus('current')
wsPeerSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchIpAddress.setStatus('current')
wsPeerSwitchAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchAPMacAddress.setStatus('current')
wsPeerSwitchAPLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchAPLocation.setStatus('current')
wsPeerSwitchAPIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchAPIPAddress.setStatus('current')
wsPeerSwitchAPProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchAPProfileId.setStatus('current')
wsPeerSwitchAPProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerSwitchAPProfileName.setStatus('current')
wsPeerSwitchAPHardwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 8, 3, 1, 7), Integer32())
if mibBuilder.loadTexts: wsPeerSwitchAPHardwareType.setStatus('current')
wsRFScanAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1), )
if mibBuilder.loadTexts: wsRFScanAPStatusTable.setStatus('current')
wsRFScanAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsRFScanAPMacAddress"))
if mibBuilder.loadTexts: wsRFScanAPStatusEntry.setStatus('current')
wsRFScanAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPMacAddress.setStatus('current')
wsRFScanAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPRadioInterface.setStatus('current')
wsRFScanAPBaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPBaseMacAddress.setStatus('current')
wsRFScanAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPSSID.setStatus('current')
wsRFScanAPPhysicalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot11an", 1), ("ieee802dot11bORgn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPPhysicalMode.setStatus('current')
wsRFScanAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 13), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPChannel.setStatus('current')
wsRFScanAPTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPTxRate.setStatus('current')
wsRFScanAPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPBeaconInterval.setStatus('current')
wsRFScanAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("managed", 1), ("unknown", 2), ("standalone", 3), ("rogue", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPStatus.setStatus('current')
wsRFScanAPDiscoveredAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPDiscoveredAge.setStatus('current')
wsRFScanAPAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPAge.setStatus('current')
wsRFScanAPStatusInitial = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("managed", 1), ("unknown", 2), ("standalone", 3), ("rogue", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPStatusInitial.setStatus('current')
wsRFScanAPSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("open", 1), ("wep", 2), ("wpa", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPSecurityMode.setStatus('current')
wsRFScanAPHighRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPHighRate.setStatus('current')
wsRFScanAPDot11nMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPDot11nMode.setStatus('current')
wsRFScanAPAdHoc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notadhoc", 0), ("adhoc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPAdHoc.setStatus('current')
wsRFScanAPPeerManaged = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("localswitch", 0), ("peerswitch", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPPeerManaged.setStatus('current')
wsRFScanAPRogueMitigation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notrogue", 0), ("inprogress", 1), ("attackdisabled", 2), ("toomany", 3), ("illegalchannel", 4), ("spoofing", 5), ("adhoc", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPRogueMitigation.setStatus('current')
wsRFScanAPAcknowledgeRogue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-action", 0), ("acknowledge", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPAcknowledgeRogue.setStatus('current')
wsRFScanAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPBSSID.setStatus('current')
wsRFScanAPOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPOUI.setStatus('current')
wsRFScanAPRRMSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unsupported", 0), ("supported", 1))))
if mibBuilder.loadTexts: wsRFScanAPRRMSupported.setStatus('current')
wsRFScanAPDot11acMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPDot11acMode.setStatus('current')
wsRFScanAPEntriesPurge = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanAPEntriesPurge.setStatus('current')
wsFailureAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3), )
if mibBuilder.loadTexts: wsFailureAPStatusTable.setStatus('current')
wsFailureAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsFailedAPMacAddress"))
if mibBuilder.loadTexts: wsFailureAPStatusEntry.setStatus('current')
wsFailedAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPMacAddress.setStatus('current')
wsFailedAPIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPIpAddress.setStatus('current')
wsFailedAPVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("broadcom", 1), ("others", 65535))))
if mibBuilder.loadTexts: wsFailedAPVendorId.setStatus('current')
wsFailedAPSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPSoftwareVersion.setStatus('current')
wsFailedAPHWType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("reserved-1", 1), ("reserved-2", 2), ("reserved-3", 3), ("reserved-4", 4), ("tq3600", 5), ("reserved-6", 6), ("reserved-7", 7), ("tq3200", 8), ("tq2450", 9), ("tq3400", 10), ("reserved-11", 11), ("tq4400", 12), ("tq4600", 13))))
if mibBuilder.loadTexts: wsFailedAPHWType.setStatus('current')
wsFailedAPFailureType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("localAuthentication", 1), ("noDbEntry", 2), ("notManaged", 3), ("radiusAuthentication", 4), ("radiusChallenged", 5), ("radiusUnreachable", 6), ("invalidRadiusResponse", 7), ("invalidProfileId", 8), ("profileMismatch", 9), ("radiusMsgSendFailed", 10), ("noAPImageAvailable", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPFailureType.setStatus('current')
wsFailedAPValidationFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 7), Unsigned32())
if mibBuilder.loadTexts: wsFailedAPValidationFailureCount.setStatus('current')
wsFailedAPAuthenticationFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPAuthenticationFailureCount.setStatus('current')
wsFailedAPProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPProtocolVersion.setStatus('current')
wsFailedAPAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPAge.setStatus('current')
wsFailedAPReportingSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local-switch", 1), ("peer-switch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPReportingSwitch.setStatus('current')
wsFailedAPSwitchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPSwitchMacAddress.setStatus('current')
wsFailedAPSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 3, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFailedAPSwitchIpAddress.setStatus('current')
wsAPFailureEntriesPurge = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPFailureEntriesPurge.setStatus('current')
wsAdHocClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5), )
if mibBuilder.loadTexts: wsAdHocClientStatusTable.setStatus('current')
wsAdHocClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAdHocClientMacAddress"))
if mibBuilder.loadTexts: wsAdHocClientStatusEntry.setStatus('current')
wsAdHocClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAdHocClientMacAddress.setStatus('current')
wsDetectedAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedAPMacAddress.setStatus('current')
wsDetectedAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedAPRadioInterface.setStatus('current')
wsAdHocClientDetectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("beacon-frame", 1), ("data-frame", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAdHocClientDetectionMode.setStatus('current')
wsAdHocClientAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 5, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAdHocClientAge.setStatus('current')
wsAdHocClientEntriesPurge = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAdHocClientEntriesPurge.setStatus('current')
wsAPTriangulationNonSentryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7), )
if mibBuilder.loadTexts: wsAPTriangulationNonSentryStatusTable.setStatus('current')
wsAPTriangulationNonSentryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPTriangulationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPTriangulationId"))
if mibBuilder.loadTexts: wsAPTriangulationNonSentryStatusEntry.setStatus('current')
wsAPTriangulationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationMacAddr.setStatus('current')
wsAPTriangulationId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationId.setStatus('current')
wsAPTriangulationNonSentryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationNonSentryMacAddr.setStatus('current')
wsAPTriangulationNonSentryRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationNonSentryRadio.setStatus('current')
wsAPTriangulationRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationRssi.setStatus('current')
wsAPTriangulationStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationStrength.setStatus('current')
wsAPTriangulationNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationNoise.setStatus('current')
wsAPTriangulationAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPTriangulationAge.setStatus('current')
wsAPTriangulationSentryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8), )
if mibBuilder.loadTexts: wsAPTriangulationSentryStatusTable.setStatus('current')
wsAPTriangulationSentryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPSentryTriangulationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPSentryTriangulationId"))
if mibBuilder.loadTexts: wsAPTriangulationSentryStatusEntry.setStatus('current')
wsAPSentryTriangulationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationMacAddr.setStatus('current')
wsAPSentryTriangulationId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationId.setStatus('current')
wsAPSentryTriangulationSentryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationSentryMacAddr.setStatus('current')
wsAPSentryTriangulationSentryRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationSentryRadio.setStatus('current')
wsAPSentryTriangulationRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationRssi.setStatus('current')
wsAPSentryTriangulationStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationStrength.setStatus('current')
wsAPSentryTriangulationNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationNoise.setStatus('current')
wsAPSentryTriangulationAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 8, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPSentryTriangulationAge.setStatus('current')
wsAPRogueClassificationStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9), )
if mibBuilder.loadTexts: wsAPRogueClassificationStatusTable.setStatus('current')
wsAPRogueClassificationStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRogueClassificationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPRogueClassificationTestId"))
if mibBuilder.loadTexts: wsAPRogueClassificationStatusEntry.setStatus('current')
wsAPRogueClassificationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationMacAddr.setStatus('current')
wsAPRogueClassificationTestId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationTestId.setStatus('current')
wsAPRogueClassificationTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("widsaprogue01", 0), ("widsaprogue02", 1), ("widsaprogue03", 2), ("widsaprogue04", 3), ("widsaprogue05", 4), ("widsaprogue06", 5), ("widsaprogue07", 6), ("widsaprogue08", 7), ("widsaprogue09", 8), ("widsaprogue10", 9), ("widsaprogue11", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationTestName.setStatus('current')
wsAPRogueClassificationDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notdetected", 0), ("detected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationDetected.setStatus('current')
wsAPRogueClassificationReportingAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationReportingAPMac.setStatus('current')
wsAPRogueClassificationReportingAPRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationReportingAPRadio.setStatus('current')
wsAPRogueClassificationTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationTestState.setStatus('current')
wsAPRogueClassificationTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notreported", 0), ("roguereported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationTestResult.setStatus('current')
wsAPRogueClassificationFirstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationFirstTime.setStatus('current')
wsAPRogueClassificationLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 9, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPRogueClassificationLastTime.setStatus('current')
wsAPDeAuthenticationAttackStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10), )
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackStatusTable.setStatus('current')
wsAPDeAuthenticationAttackStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPDeAuthenticationAttackStatusId"))
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackStatusEntry.setStatus('current')
wsAPDeAuthenticationAttackStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackStatusId.setStatus('current')
wsAPDeAuthenticationAttackBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackBSSID.setStatus('current')
wsAPDeAuthenticationAttackChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 161))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackChannel.setStatus('current')
wsAPDeAuthenticationAttackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackTime.setStatus('current')
wsAPDeAuthenticationAttackAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 10, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPDeAuthenticationAttackAge.setStatus('current')
wsDetectedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11), )
if mibBuilder.loadTexts: wsDetectedClientStatusTable.setStatus('current')
wsDetectedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientMacAddress"))
if mibBuilder.loadTexts: wsDetectedClientStatusEntry.setStatus('current')
wsDetectedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientMacAddress.setStatus('current')
wsDetectedClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("authenticated", 0), ("detected", 1), ("known", 2), ("black-listed", 3), ("rogue", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientStatus.setStatus('current')
wsDetectedClientAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-authenticated", 0), ("authenticated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthStatus.setStatus('current')
wsDetectedClientEntryLastUpdatedAt = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientEntryLastUpdatedAt.setStatus('current')
wsDetectedClientThreatDetectedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-detected", 0), ("detected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientThreatDetectedStatus.setStatus('current')
wsDetectedClientThreatMitigationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-done", 0), ("done", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientThreatMitigationStatus.setStatus('current')
wsDetectedClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientName.setStatus('current')
wsDetectedClientEntryCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientEntryCreateTime.setStatus('current')
wsDetectedClientChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientChannel.setStatus('current')
wsDetectedClientAuthRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthRSSI.setStatus('current')
wsDetectedClientAuthSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthSignal.setStatus('current')
wsDetectedClientAuthNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthNoise.setStatus('current')
wsDetectedClientProbeReqRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientProbeReqRecorded.setStatus('current')
wsDetectedClientProbeCollectionIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientProbeCollectionIntvl.setStatus('current')
wsDetectedClientHighestNumProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientHighestNumProbes.setStatus('current')
wsDetectedClientAuthMsgsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthMsgsRecorded.setStatus('current')
wsDetectedClientAuthCollectionIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthCollectionIntvl.setStatus('current')
wsDetectedClientHighestNumAuthMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientHighestNumAuthMsgs.setStatus('current')
wsDetectedClientDeAuthMsgsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientDeAuthMsgsRecorded.setStatus('current')
wsDetectedClientDeAuthCollectionIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientDeAuthCollectionIntvl.setStatus('current')
wsDetectedClientHighestNumDeAuthMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientHighestNumDeAuthMsgs.setStatus('current')
wsDetectedClientAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAuthFailures.setStatus('current')
wsDetectedClientProbesDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientProbesDetected.setStatus('current')
wsDetectedClientBcastBSSIDProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientBcastBSSIDProbes.setStatus('current')
wsDetectedClientBcastSSIDProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientBcastSSIDProbes.setStatus('current')
wsDetectedClientSpecificBSSIDProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSpecificBSSIDProbes.setStatus('current')
wsDetectedClientSpecificSSIDProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSpecificSSIDProbes.setStatus('current')
wsDetectedClientLastNonBcastBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 28), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientLastNonBcastBSSID.setStatus('current')
wsDetectedClientLastNonBcastSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientLastNonBcastSSID.setStatus('current')
wsDetectedClientThreatMitigationSent = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 30), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientThreatMitigationSent.setStatus('current')
wsDetectedClientEntryPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientEntryPurge.setStatus('current')
wsDetectedClientEntryAcknowledge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-action", 0), ("acknowledge", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientEntryAcknowledge.setStatus('current')
wsDetectedClientOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 11, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientOUI.setStatus('current')
wsDetectedClientPurgeAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPurgeAll.setStatus('current')
wsDetectedClientAcknowledgeAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-action", 0), ("acknowledge", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientAcknowledgeAll.setStatus('current')
wsClientRogueClassificationStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14), )
if mibBuilder.loadTexts: wsClientRogueClassificationStatusTable.setStatus('current')
wsClientRogueClassificationStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsClientRogueClassificationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsClientRogueClassificationTestId"))
if mibBuilder.loadTexts: wsClientRogueClassificationStatusEntry.setStatus('current')
wsClientRogueClassificationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationMacAddr.setStatus('current')
wsClientRogueClassificationTestId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationTestId.setStatus('current')
wsClientRogueClassificationTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("widsclientrogue01", 0), ("widsclientrogue02", 1), ("widsclientrogue03", 2), ("widsclientrogue04", 3), ("widsclientrogue05", 4), ("widsclientrogue06", 5), ("widsclientrogue07", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationTestName.setStatus('current')
wsClientRogueClassificationDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notdetected", 0), ("detected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationDetected.setStatus('current')
wsClientRogueClassificationReportingAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationReportingAPMac.setStatus('current')
wsClientRogueClassificationReportingAPRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationReportingAPRadio.setStatus('current')
wsClientRogueClassificationTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationTestState.setStatus('current')
wsClientRogueClassificationTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notreported", 0), ("roguereported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationTestResult.setStatus('current')
wsClientRogueClassificationFirstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationFirstTime.setStatus('current')
wsClientRogueClassificationLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 14, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientRogueClassificationLastTime.setStatus('current')
wsDetectedClientTriangulationNonSentryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15), )
if mibBuilder.loadTexts: wsDetectedClientTriangulationNonSentryStatusTable.setStatus('current')
wsDetectedClientTriangulationNonSentryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientTriangulationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientTriangulationId"))
if mibBuilder.loadTexts: wsDetectedClientTriangulationNonSentryStatusEntry.setStatus('current')
wsDetectedClientTriangulationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationMacAddr.setStatus('current')
wsDetectedClientTriangulationId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationId.setStatus('current')
wsDetectedClientTriangulationNonSentryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationNonSentryMacAddr.setStatus('current')
wsDetectedClientTriangulationNonSentryRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationNonSentryRadio.setStatus('current')
wsDetectedClientTriangulationRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationRssi.setStatus('current')
wsDetectedClientTriangulationStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationStrength.setStatus('current')
wsDetectedClientTriangulationNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationNoise.setStatus('current')
wsDetectedClientTriangulationAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 15, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientTriangulationAge.setStatus('current')
wsDetectedClientTriangulationSentryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16), )
if mibBuilder.loadTexts: wsDetectedClientTriangulationSentryStatusTable.setStatus('current')
wsDetectedClientTriangulationSentryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientSentryTriangulationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientSentryTriangulationId"))
if mibBuilder.loadTexts: wsDetectedClientTriangulationSentryStatusEntry.setStatus('current')
wsDetectedClientSentryTriangulationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationMacAddr.setStatus('current')
wsDetectedClientSentryTriangulationId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationId.setStatus('current')
wsDetectedClientSentryTriangulationSentryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationSentryMacAddr.setStatus('current')
wsDetectedClientSentryTriangulationSentryRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationSentryRadio.setStatus('current')
wsDetectedClientSentryTriangulationRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationRssi.setStatus('current')
wsDetectedClientSentryTriangulationStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationStrength.setStatus('current')
wsDetectedClientSentryTriangulationNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationNoise.setStatus('current')
wsDetectedClientSentryTriangulationAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 16, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientSentryTriangulationAge.setStatus('current')
wsDetectedClientPreAuthenticationHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17), )
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationHistoryTable.setStatus('current')
wsDetectedClientPreAuthenticationHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientPreAuthenticationMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientPreAuthenticationId"))
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationHistoryEntry.setStatus('current')
wsDetectedClientPreAuthenticationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationMacAddr.setStatus('current')
wsDetectedClientPreAuthenticationId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationId.setStatus('current')
wsDetectedClientPreAuthenticationApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationApMac.setStatus('current')
wsDetectedClientPreAuthenticationApRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationApRadioId.setStatus('current')
wsDetectedClientPreAuthenticationVapMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationVapMac.setStatus('current')
wsDetectedClientPreAuthenticationSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationSSID.setStatus('current')
wsDetectedClientPreAuthenticationAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationAge.setStatus('current')
wsDetectedClientPreAuthenticationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("success", 0), ("failure", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationStatus.setStatus('current')
wsDetectedClientPreAuthenticationHistoryPurgeAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientPreAuthenticationHistoryPurgeAll.setStatus('current')
wsDetectedClientRoamHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19), )
if mibBuilder.loadTexts: wsDetectedClientRoamHistoryTable.setStatus('current')
wsDetectedClientRoamHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientRoamMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDetectedClientRoamId"))
if mibBuilder.loadTexts: wsDetectedClientRoamHistoryEntry.setStatus('current')
wsDetectedClientRoamMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamMacAddr.setStatus('current')
wsDetectedClientRoamId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamId.setStatus('current')
wsDetectedClientRoamApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamApMac.setStatus('current')
wsDetectedClientRoamApRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamApRadioId.setStatus('current')
wsDetectedClientRoamVapMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamVapMac.setStatus('current')
wsDetectedClientRoamSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamSSID.setStatus('current')
wsDetectedClientRoamAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamAge.setStatus('current')
wsDetectedClientRoamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 19, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("newAuthentication", 1), ("roam", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamStatus.setStatus('current')
wsDetectedClientRoamHistoryPurgeAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 9, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDetectedClientRoamHistoryPurgeAll.setStatus('current')
wsRrmNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1), )
if mibBuilder.loadTexts: wsRrmNeighborTable.setStatus('current')
wsRrmNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsRrmNeighborApMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsRrmNeighborVapMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsRrmNeighborMacAddr"))
if mibBuilder.loadTexts: wsRrmNeighborEntry.setStatus('current')
wsRrmNeighborApMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsRrmNeighborApMacAddr.setStatus('current')
wsRrmNeighborVapMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsRrmNeighborVapMacAddr.setStatus('current')
wsRrmNeighborMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 3), MacAddress())
if mibBuilder.loadTexts: wsRrmNeighborMacAddr.setStatus('current')
wsRrmNeighborRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: wsRrmNeighborRSSI.setStatus('current')
wsRrmNeighborSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: wsRrmNeighborSSID.setStatus('current')
wsRrmNeighborChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), )))
if mibBuilder.loadTexts: wsRrmNeighborChannel.setStatus('current')
wsRrmNeighborAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 7), TimeTicks())
if mibBuilder.loadTexts: wsRrmNeighborAge.setStatus('current')
wsRrmNeighborAllPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsRrmNeighborAllPurge.setStatus('current')
wsRrmNeighborApPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsRrmNeighborApPurge.setStatus('current')
wsRrmNeighborVapPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsRrmNeighborVapPurge.setStatus('current')
wsRrmChannelLoadHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1), )
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryTable.setStatus('current')
wsRrmChannelLoadHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsRrmChannelLoadHistoryEntryId"))
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntry.setStatus('current')
wsRrmChannelLoadHistoryEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryId.setStatus('current')
wsRrmChannelLoadHistoryEntryApMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryApMacAddr.setStatus('current')
wsRrmChannelLoadHistoryEntryClientMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 3), MacAddress())
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryClientMacAddr.setStatus('current')
wsRrmChannelLoadHistoryEntryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), )))
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryChannel.setStatus('current')
wsRrmChannelLoadHistoryEntryAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 5), TimeTicks())
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryAge.setStatus('current')
wsRrmChannelLoadHistoryEntryLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryLoad.setStatus('current')
wsRrmChannelLoadHistoryEntryDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: wsRrmChannelLoadHistoryEntryDuration.setStatus('current')
wsRrmChannelLoadCurrentRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2))
wsRrmChannelLoadCurrentRequestClientMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 1), MacAddress())
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestClientMacAddr.setStatus('current')
wsRrmChannelLoadCurrentRequestApMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 2), MacAddress())
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestApMacAddr.setStatus('current')
wsRrmChannelLoadCurrentRequestChannel = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), )))
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestChannel.setStatus('current')
wsRrmChannelLoadCurrentRequestDuration = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestDuration.setStatus('current')
wsRrmChannelLoadCurrentRequestStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notStarted", 0), ("success", 1), ("inProgress", 2), ("timedOut", 3), ("aborted", 4), ("incapable", 5), ("refused", 6))))
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestStatus.setStatus('current')
wsRrmChannelLoadCurrentRequestTimeRemaining = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 6), TimeTicks())
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestTimeRemaining.setStatus('current')
wsRrmChannelLoadCurrentRequestAbort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))))
if mibBuilder.loadTexts: wsRrmChannelLoadCurrentRequestAbort.setStatus('current')
wsRrmChannelLoadNewRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 3))
wsRrmChannelLoadNewRequestClientMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 3, 1), MacAddress())
if mibBuilder.loadTexts: wsRrmChannelLoadNewRequestClientMacAddr.setStatus('current')
wsRrmChannelLoadNewRequestChannel = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 3, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(42, 42), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(50, 50), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(58, 58), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(149, 149), ValueRangeConstraint(152, 152), ValueRangeConstraint(153, 153), ValueRangeConstraint(157, 157), ValueRangeConstraint(160, 160), ValueRangeConstraint(161, 161), ValueRangeConstraint(165, 165), )))
if mibBuilder.loadTexts: wsRrmChannelLoadNewRequestChannel.setStatus('current')
wsRrmChannelLoadNewRequestDuration = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 3, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1000))
if mibBuilder.loadTexts: wsRrmChannelLoadNewRequestDuration.setStatus('current')
wsRrmChannelLoadNewRequestSend = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 16, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))))
if mibBuilder.loadTexts: wsRrmChannelLoadNewRequestSend.setStatus('current')
wsAPHardwareCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1), )
if mibBuilder.loadTexts: wsAPHardwareCapabilityTable.setStatus('current')
wsAPHardwareCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPHWTypeID"))
if mibBuilder.loadTexts: wsAPHardwareCapabilityEntry.setStatus('current')
wsAPHWTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 13)))
if mibBuilder.loadTexts: wsAPHWTypeID.setStatus('current')
wsAPHWTypeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: wsAPHWTypeDescription.setStatus('current')
wsAPHWTypeRadioCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsAPHWTypeRadioCount.setStatus('current')
wsAPImageTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsAPImageTypeID.setStatus('current')
wsAPHWDualBootSuppport = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1))))
if mibBuilder.loadTexts: wsAPHWDualBootSuppport.setStatus('current')
wsAPHardwareRadioCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2), )
if mibBuilder.loadTexts: wsAPHardwareRadioCapabilityTable.setStatus('current')
wsAPHardwareRadioCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPHWTypeID"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPHWTypeRadioNum"))
if mibBuilder.loadTexts: wsAPHardwareRadioCapabilityEntry.setStatus('current')
wsAPHWTypeRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsAPHWTypeRadioNum.setStatus('current')
wsAPHWTypeRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 43421))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPHWTypeRadioID.setStatus('current')
wsAPHWTypeRadioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: wsAPHWTypeRadioDescription.setStatus('current')
wsAPHWTypeRadioVapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: wsAPHWTypeRadioVapCount.setStatus('current')
wsAPHWTypeRadioAmodeSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPHWTypeRadioAmodeSupport.setStatus('current')
wsAPHWTypeRadioBGmodeSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPHWTypeRadioBGmodeSupport.setStatus('current')
wsAPHWTypeRadioNmodeSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPHWTypeRadioNmodeSupport.setStatus('current')
wsAPHWTypeRadioACmodeSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPHWTypeRadioACmodeSupport.setStatus('current')
wsAPImageTypeCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 3), )
if mibBuilder.loadTexts: wsAPImageTypeCapabilityTable.setStatus('current')
wsAPImageTypeCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPImageTypeID"))
if mibBuilder.loadTexts: wsAPImageTypeCapabilityEntry.setStatus('current')
wsAPImageTypeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 96)))
if mibBuilder.loadTexts: wsAPImageTypeDescription.setStatus('current')
wsAPImageAvailabilityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 4), )
if mibBuilder.loadTexts: wsAPImageAvailabilityTable.setStatus('current')
wsAPImageAvailabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPImageTypeID"))
if mibBuilder.loadTexts: wsAPImageAvailabilityEntry.setStatus('current')
wsAPImageAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 12, 4, 1, 1), DisplayString())
if mibBuilder.loadTexts: wsAPImageAvailability.setStatus('current')
wsStatusTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsStatusTrapMode.setStatus('current')
wsPeerWSTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPeerWSTrapMode.setStatus('current')
wsAPStateTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPStateTrapMode.setStatus('current')
wsAPFailureTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAPFailureTrapMode.setStatus('current')
wsRogueAPTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRogueAPTrapMode.setStatus('current')
wsRFScanTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsRFScanTrapMode.setStatus('current')
wsClientStateTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientStateTrapMode.setStatus('current')
wsWidsStatusMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWidsStatusMode.setStatus('current')
wsTspecTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsTspecTrapMode.setStatus('current')
wsClientFailureTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 10, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsClientFailureTrapMode.setStatus('current')
wsModeEnabled = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 1))
if mibBuilder.loadTexts: wsModeEnabled.setStatus('current')
wsModeDisabled = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 2))
if mibBuilder.loadTexts: wsModeDisabled.setStatus('current')
wsManagedAPDatabaseFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 3)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsManagedAPDatabaseFull.setStatus('current')
wsManagedAPNeighborAPListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 4))
if mibBuilder.loadTexts: wsManagedAPNeighborAPListFull.setStatus('current')
wsManagedAPNeighborClientListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 5))
if mibBuilder.loadTexts: wsManagedAPNeighborClientListFull.setStatus('current')
wsAPFailureListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 6))
if mibBuilder.loadTexts: wsAPFailureListFull.setStatus('current')
wsRFScanAPListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 7))
if mibBuilder.loadTexts: wsRFScanAPListFull.setStatus('current')
wsClientAssociationDatabaseFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 8)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsClientAssociationDatabaseFull.setStatus('current')
wsPeerSwitchDiscovered = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 9)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"))
if mibBuilder.loadTexts: wsPeerSwitchDiscovered.setStatus('current')
wsPeerSwitchFailed = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 10)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"))
if mibBuilder.loadTexts: wsPeerSwitchFailed.setStatus('current')
wsPeerSwitchUnknownProtocol = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 11)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsPeerProtocolVersion"))
if mibBuilder.loadTexts: wsPeerSwitchUnknownProtocol.setStatus('current')
wsManagedAPDiscovered = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 12)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsManagedAPDiscovered.setStatus('current')
wsManagedAPFailed = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 13)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsManagedAPFailed.setStatus('current')
wsManagedAPUnknownProtocol = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 14)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsFailedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsFailedAPProtocolVersion"))
if mibBuilder.loadTexts: wsManagedAPUnknownProtocol.setStatus('current')
wsAPAssociationFailure = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 15)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsFailedAPMacAddress"))
if mibBuilder.loadTexts: wsAPAssociationFailure.setStatus('current')
wsAPAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 16)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsFailedAPMacAddress"))
if mibBuilder.loadTexts: wsAPAuthenticationFailure.setStatus('current')
wsRFScanRogueAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 17)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), ("AT-UWC-WLAN-SWITCH-MIB", "wsRFScanAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsRFScanAPSSID"))
if mibBuilder.loadTexts: wsRFScanRogueAPDetected.setStatus('current')
wsRFScanAPDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 18)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), ("AT-UWC-WLAN-SWITCH-MIB", "wsRFScanAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsRFScanAPSSID"))
if mibBuilder.loadTexts: wsRFScanAPDetected.setStatus('current')
wsRFScanNewClientDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 19)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), ("AT-UWC-WLAN-SWITCH-MIB", "wsNeighborClientMacAddress"))
if mibBuilder.loadTexts: wsRFScanNewClientDetected.setStatus('current')
wsClientAssociationDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 20)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsVAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsClientAssociationDetected.setStatus('current')
wsClientDisassociationDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 21)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsVAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsClientDisassociationDetected.setStatus('current')
wsClientRoamDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 22)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsVAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsClientRoamDetected.setStatus('current')
wsClientAssociationFailure = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 23)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsNeighborClientMacAddress"))
if mibBuilder.loadTexts: wsClientAssociationFailure.setStatus('current')
wsClientAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 24)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsNeighborClientMacAddress"))
if mibBuilder.loadTexts: wsClientAuthenticationFailure.setStatus('current')
wsAdHocClientDetected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 25)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsAdHocClientMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsDetectedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsDetectedAPRadioInterface"))
if mibBuilder.loadTexts: wsAdHocClientDetected.setStatus('current')
wsWLANBandwidthUtilizationExceeded = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 26)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioWLANUtilization"))
if mibBuilder.loadTexts: wsWLANBandwidthUtilizationExceeded.setStatus('current')
wsAdHocClientListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 27))
if mibBuilder.loadTexts: wsAdHocClientListFull.setStatus('current')
wsPeerSwitchConfigurationCommandReceived = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 28)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsPeerConfigReceived"))
if mibBuilder.loadTexts: wsPeerSwitchConfigurationCommandReceived.setStatus('current')
wsPeerSwitchManagedAPLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 29)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsPeerSwitchAPMacAddress"))
if mibBuilder.loadTexts: wsPeerSwitchManagedAPLimitExceeded.setStatus('current')
wsPeerSwitchClientLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 30)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsPeerIpAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"))
if mibBuilder.loadTexts: wsPeerSwitchClientLimitExceeded.setStatus('current')
wsClusterControllerElected = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 32)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsIPAddress"))
if mibBuilder.loadTexts: wsClusterControllerElected.setStatus('current')
wsClusterMaxAPExceeded = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 33)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsIPAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPIpAddress"), ("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPSwitchIpAddress"))
if mibBuilder.loadTexts: wsClusterMaxAPExceeded.setStatus('current')
wsRoguesPresent = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 34))
if mibBuilder.loadTexts: wsRoguesPresent.setStatus('current')
wsDetectedClientListFull = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 35))
if mibBuilder.loadTexts: wsDetectedClientListFull.setStatus('current')
wsRogueClientsPresent = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 36))
if mibBuilder.loadTexts: wsRogueClientsPresent.setStatus('current')
wsChannelPlanAlgoComplete = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 37))
if mibBuilder.loadTexts: wsChannelPlanAlgoComplete.setStatus('current')
wsPowerPlanAlgoComplete = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 38))
if mibBuilder.loadTexts: wsPowerPlanAlgoComplete.setStatus('current')
wsLocallyManagedAPLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 0, 41)).setObjects(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"))
if mibBuilder.loadTexts: wsLocallyManagedAPLimitExceeded.setStatus('current')
tspecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1))
tspecSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2))
tspecManagedAP = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3))
tspecClient = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4))
wsGlobalTspecStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 1))
wsTspecTotalVoiceTrafficStreams = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsTspecTotalVoiceTrafficStreams.setStatus('current')
wsTspecTotalVideoTrafficStreams = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsTspecTotalVideoTrafficStreams.setStatus('current')
wsTspecTotalTrafficStreamClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wsTspecTotalTrafficStreamClients.setStatus('current')
wsTspecTotalTrafficStreamRoamingClients = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 1, 4), Unsigned32())
if mibBuilder.loadTexts: wsTspecTotalTrafficStreamRoamingClients.setStatus('current')
wsGlobalTspecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2), )
if mibBuilder.loadTexts: wsGlobalTspecStatisticsTable.setStatus('current')
wsGlobalTspecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsTspecACIndex"))
if mibBuilder.loadTexts: wsGlobalTspecStatisticsEntry.setStatus('current')
wsTspecACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 1), TspecSuppAC())
if mibBuilder.loadTexts: wsTspecACIndex.setStatus('current')
wsTotalWLANTspecPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 2), Counter64())
if mibBuilder.loadTexts: wsTotalWLANTspecPktsRecvd.setStatus('current')
wsTotalWLANTspecPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 3), Counter64())
if mibBuilder.loadTexts: wsTotalWLANTspecPktsTransmitted.setStatus('current')
wsTotalWLANTspecBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 4), Counter64())
if mibBuilder.loadTexts: wsTotalWLANTspecBytesRecvd.setStatus('current')
wsTotalWLANTspecBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 5), Counter64())
if mibBuilder.loadTexts: wsTotalWLANTspecBytesTransmitted.setStatus('current')
wsTotalWLANTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 6), Counter32())
if mibBuilder.loadTexts: wsTotalWLANTspecsAccepted.setStatus('current')
wsTotalWLANTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 7), Counter32())
if mibBuilder.loadTexts: wsTotalWLANTspecsRejected.setStatus('current')
wsTotalWLANRoamingTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 8), Counter32())
if mibBuilder.loadTexts: wsTotalWLANRoamingTspecsAccepted.setStatus('current')
wsTotalWLANRoamingTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 1, 2, 1, 9), Counter32())
if mibBuilder.loadTexts: wsTotalWLANRoamingTspecsRejected.setStatus('current')
wsSwitchTspecStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1), )
if mibBuilder.loadTexts: wsSwitchTspecStatusTable.setStatus('current')
wsSwitchTspecStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"))
if mibBuilder.loadTexts: wsSwitchTspecStatusEntry.setStatus('current')
wsSwitchTspecTotalVoiceTrafficStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsSwitchTspecTotalVoiceTrafficStreams.setStatus('current')
wsSwitchTspecTotalVideoTrafficStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsSwitchTspecTotalVideoTrafficStreams.setStatus('current')
wsSwitchTspecTotalTrafficStreamClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wsSwitchTspecTotalTrafficStreamClients.setStatus('current')
wsSwitchTspecTotalTrafficStreamRoamingClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 1, 1, 4), Unsigned32())
if mibBuilder.loadTexts: wsSwitchTspecTotalTrafficStreamRoamingClients.setStatus('current')
wsSwitchTspecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2), )
if mibBuilder.loadTexts: wsSwitchTspecStatisticsTable.setStatus('current')
wsSwitchTspecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsTspecACIndex"))
if mibBuilder.loadTexts: wsSwitchTspecStatisticsEntry.setStatus('current')
wsSwitchWLANTspecPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 1), Counter64())
if mibBuilder.loadTexts: wsSwitchWLANTspecPktsRecvd.setStatus('current')
wsSwitchWLANTspecPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 2), Counter64())
if mibBuilder.loadTexts: wsSwitchWLANTspecPktsTransmitted.setStatus('current')
wsSwitchWLANTspecBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 3), Counter64())
if mibBuilder.loadTexts: wsSwitchWLANTspecBytesRecvd.setStatus('current')
wsSwitchWLANTspecBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 4), Counter64())
if mibBuilder.loadTexts: wsSwitchWLANTspecBytesTransmitted.setStatus('current')
wsSwitchWLANTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 5), Counter32())
if mibBuilder.loadTexts: wsSwitchWLANTspecsAccepted.setStatus('current')
wsSwitchWLANTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 6), Counter32())
if mibBuilder.loadTexts: wsSwitchWLANTspecsRejected.setStatus('current')
wsSwitchWLANRoamingTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 7), Counter32())
if mibBuilder.loadTexts: wsSwitchWLANRoamingTspecsAccepted.setStatus('current')
wsSwitchWLANRoamingTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 2, 2, 1, 8), Counter32())
if mibBuilder.loadTexts: wsSwitchWLANRoamingTspecsRejected.setStatus('current')
wsManagedAPTspecStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 1), )
if mibBuilder.loadTexts: wsManagedAPTspecStatusTable.setStatus('current')
wsManagedAPTspecStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsTspecACIndex"))
if mibBuilder.loadTexts: wsManagedAPTspecStatusEntry.setStatus('current')
wsManagedAPTspecNumActiveTrafficStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPTspecNumActiveTrafficStreams.setStatus('current')
wsManagedAPTspecNumTrafficStreamClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPTspecNumTrafficStreamClients.setStatus('current')
wsManagedAPTspecNumTrafficStreamRoamingClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPTspecNumTrafficStreamRoamingClients.setStatus('current')
wsManagedAPTspecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2), )
if mibBuilder.loadTexts: wsManagedAPTspecStatisticsTable.setStatus('current')
wsManagedAPTspecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1), )
wsManagedAPTspecStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPTspecStatisticsEntry"))
wsManagedAPTspecStatisticsEntry.setIndexNames(*wsManagedAPTspecStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPTspecStatisticsEntry.setStatus('current')
wsManagedAPTspecPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 1), Counter64())
if mibBuilder.loadTexts: wsManagedAPTspecPktsRecvd.setStatus('current')
wsManagedAPTspecPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 2), Counter64())
if mibBuilder.loadTexts: wsManagedAPTspecPktsTransmitted.setStatus('current')
wsManagedAPTspecBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 3), Counter64())
if mibBuilder.loadTexts: wsManagedAPTspecBytesRecvd.setStatus('current')
wsManagedAPTspecBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 4), Counter64())
if mibBuilder.loadTexts: wsManagedAPTspecBytesTransmitted.setStatus('current')
wsManagedAPTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 5), Counter32())
if mibBuilder.loadTexts: wsManagedAPTspecsAccepted.setStatus('current')
wsManagedAPTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 6), Counter32())
if mibBuilder.loadTexts: wsManagedAPTspecsRejected.setStatus('current')
wsManagedAPRoamingTspecsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 7), Counter32())
if mibBuilder.loadTexts: wsManagedAPRoamingTspecsAccepted.setStatus('current')
wsManagedAPRoamingTspecsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 2, 1, 8), Counter32())
if mibBuilder.loadTexts: wsManagedAPRoamingTspecsRejected.setStatus('current')
wsManagedAPRadioTspecStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3), )
if mibBuilder.loadTexts: wsManagedAPRadioTspecStatusTable.setStatus('current')
wsManagedAPRadioTspecStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsTspecACIndex"))
if mibBuilder.loadTexts: wsManagedAPRadioTspecStatusEntry.setStatus('current')
wsManagedAPRadioTspecOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))))
if mibBuilder.loadTexts: wsManagedAPRadioTspecOperStatus.setStatus('current')
wsManagedAPRadioTspecNumActiveTrafficStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecNumActiveTrafficStreams.setStatus('current')
wsManagedAPRadioTspecNumTrafficStreamClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecNumTrafficStreamClients.setStatus('current')
wsManagedAPRadioTspecNumTrafficStreamRoamingClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 4), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecNumTrafficStreamRoamingClients.setStatus('current')
wsManagedAPRadioTspecMediumTimeAdmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 5), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecMediumTimeAdmitted.setStatus('current')
wsManagedAPRadioTspecMediumTimeUnallocated = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 6), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecMediumTimeUnallocated.setStatus('current')
wsManagedAPRadioTspecMediumTimeRoamingUnallocated = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 3, 1, 7), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPRadioTspecMediumTimeRoamingUnallocated.setStatus('current')
wsManagedAPRadioTspecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4), )
if mibBuilder.loadTexts: wsManagedAPRadioTspecStatisticsTable.setStatus('current')
wsManagedAPRadioTspecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4, 1), )
wsManagedAPRadioTspecStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioTspecStatisticsEntry"))
wsManagedAPRadioTspecStatisticsEntry.setIndexNames(*wsManagedAPRadioTspecStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPRadioTspecStatisticsEntry.setStatus('current')
wsManagedAPRadioTspecPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4, 1, 1), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioTspecPktsRecvd.setStatus('current')
wsManagedAPRadioTspecPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4, 1, 2), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioTspecPktsTransmitted.setStatus('current')
wsManagedAPRadioTspecBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4, 1, 3), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioTspecBytesRecvd.setStatus('current')
wsManagedAPRadioTspecBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 4, 1, 4), Counter64())
if mibBuilder.loadTexts: wsManagedAPRadioTspecBytesTransmitted.setStatus('current')
wsManagedAPVAPTspecStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5), )
if mibBuilder.loadTexts: wsManagedAPVAPTspecStatusTable.setStatus('current')
wsManagedAPVAPTspecStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPRadioInterface"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsManagedVAPId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsTspecACIndex"))
if mibBuilder.loadTexts: wsManagedAPVAPTspecStatusEntry.setStatus('current')
wsManagedAPVAPTspecOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))))
if mibBuilder.loadTexts: wsManagedAPVAPTspecOperStatus.setStatus('current')
wsManagedAPVAPTspecNumActiveTrafficStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecNumActiveTrafficStreams.setStatus('current')
wsManagedAPVAPTspecNumTrafficStreamClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecNumTrafficStreamClients.setStatus('current')
wsManagedAPVAPTspecNumTrafficStreamRoamingClients = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 4), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecNumTrafficStreamRoamingClients.setStatus('current')
wsManagedAPVAPTspecMediumTimeAdmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 5), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecMediumTimeAdmitted.setStatus('current')
wsManagedAPVAPTspecMediumTimeUnallocated = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 6), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecMediumTimeUnallocated.setStatus('current')
wsManagedAPVAPTspecMediumTimeRoamingUnallocated = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 5, 1, 7), Unsigned32())
if mibBuilder.loadTexts: wsManagedAPVAPTspecMediumTimeRoamingUnallocated.setStatus('current')
wsManagedAPVAPTspecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6), )
if mibBuilder.loadTexts: wsManagedAPVAPTspecStatisticsTable.setStatus('current')
wsManagedAPVAPTspecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6, 1), )
wsManagedAPVAPTspecStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsManagedAPVAPTspecStatisticsEntry"))
wsManagedAPVAPTspecStatisticsEntry.setIndexNames(*wsManagedAPVAPTspecStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsManagedAPVAPTspecStatisticsEntry.setStatus('current')
wsManagedAPVAPTspecPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6, 1, 1), Counter64())
if mibBuilder.loadTexts: wsManagedAPVAPTspecPktsRecvd.setStatus('current')
wsManagedAPVAPTspecPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6, 1, 2), Counter64())
if mibBuilder.loadTexts: wsManagedAPVAPTspecPktsTransmitted.setStatus('current')
wsManagedAPVAPTspecBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6, 1, 3), Counter64())
if mibBuilder.loadTexts: wsManagedAPVAPTspecBytesRecvd.setStatus('current')
wsManagedAPVAPTspecBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 3, 6, 1, 4), Counter64())
if mibBuilder.loadTexts: wsManagedAPVAPTspecBytesTransmitted.setStatus('current')
wsAssociatedClientTsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1), )
if mibBuilder.loadTexts: wsAssociatedClientTsStatusTable.setStatus('current')
wsAssociatedClientTsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientTsTid"))
if mibBuilder.loadTexts: wsAssociatedClientTsStatusEntry.setStatus('current')
wsAssociatedClientTsTid = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wsAssociatedClientTsTid.setStatus('current')
wsAssociatedClientTsAccessCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 2), TspecSuppAC())
if mibBuilder.loadTexts: wsAssociatedClientTsAccessCategory.setStatus('current')
wsAssociatedClientTsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uplink", 1), ("downlink", 2), ("bidirectional", 3))))
if mibBuilder.loadTexts: wsAssociatedClientTsDirection.setStatus('current')
wsAssociatedClientTsUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 4), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientTsUserPriority.setStatus('current')
wsAssociatedClientTsMediumTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 5), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientTsMediumTime.setStatus('current')
wsAssociatedClientTsExcessUsageEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 6), Unsigned32())
if mibBuilder.loadTexts: wsAssociatedClientTsExcessUsageEvents.setStatus('current')
wsAssociatedClientTsRoamingClientIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))))
if mibBuilder.loadTexts: wsAssociatedClientTsRoamingClientIndicator.setStatus('current')
wsAssociatedClientTsStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2), )
if mibBuilder.loadTexts: wsAssociatedClientTsStatisticsTable.setStatus('current')
wsAssociatedClientTsStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2, 1), )
wsAssociatedClientTsStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAssociatedClientTsStatisticsEntry"))
wsAssociatedClientTsStatisticsEntry.setIndexNames(*wsAssociatedClientTsStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAssociatedClientTsStatisticsEntry.setStatus('current')
wsAssociatedClientTsPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2, 1, 1), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientTsPktsRecvd.setStatus('current')
wsAssociatedClientTsPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2, 1, 2), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientTsPktsTransmitted.setStatus('current')
wsAssociatedClientTsBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2, 1, 3), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientTsBytesRecvd.setStatus('current')
wsAssociatedClientTsBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 17, 4, 2, 1, 4), Counter64())
if mibBuilder.loadTexts: wsAssociatedClientTsBytesTransmitted.setStatus('current')
wsAPProvisioningTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1), )
if mibBuilder.loadTexts: wsAPProvisioningTable.setStatus('current')
wsAPProvisioningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAPProvMacAddress"))
if mibBuilder.loadTexts: wsAPProvisioningEntry.setStatus('current')
wsAPProvMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsAPProvMacAddress.setStatus('current')
wsAPProvIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: wsAPProvIPAddress.setStatus('current')
wsAPProvPrimarySwitchIP = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: wsAPProvPrimarySwitchIP.setStatus('current')
wsAPProvBackupSwitchIP = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: wsAPProvBackupSwitchIP.setStatus('current')
wsAPProvMutualAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPProvMutualAuthMode.setStatus('current')
wsAPProvUnmanagedAPReprovMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPProvUnmanagedAPReprovMode.setStatus('current')
wsAPProvAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 7), TimeTicks())
if mibBuilder.loadTexts: wsAPProvAge.setStatus('current')
wsAPProvNewPrimarySwitchIP = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 8), IpAddress())
if mibBuilder.loadTexts: wsAPProvNewPrimarySwitchIP.setStatus('current')
wsAPProvNewBackupSwitchIP = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 9), IpAddress())
if mibBuilder.loadTexts: wsAPProvNewBackupSwitchIP.setStatus('current')
wsAPProvNewProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: wsAPProvNewProfileId.setStatus('current')
wsAPProvCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("initiate", 1))))
if mibBuilder.loadTexts: wsAPProvCommand.setStatus('current')
wsAPProvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("success", 3), ("in-progress", 4), ("provisioning-rejected", 5), ("timed-out", 6))))
if mibBuilder.loadTexts: wsAPProvStatus.setStatus('current')
wsAPProvCertProfileTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-started", 1), ("success", 2), ("failed", 3))))
if mibBuilder.loadTexts: wsAPProvCertProfileTxStatus.setStatus('current')
wsAPProvEntryPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPProvEntryPurge.setStatus('current')
wsAPProvisioningInitiateAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("initiate", 1))))
if mibBuilder.loadTexts: wsAPProvisioningInitiateAll.setStatus('current')
wsAPProvisioningDeleteAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAPProvisioningDeleteAll.setStatus('current')
wsNetworkExchangeCertificates = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("initiate", 1))))
if mibBuilder.loadTexts: wsNetworkExchangeCertificates.setStatus('current')
wsSwitchProvIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 5), IpAddress())
if mibBuilder.loadTexts: wsSwitchProvIPAddress.setStatus('current')
wsSwitchProvStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("in-progress", 3), ("provisioning-failed", 4), ("connection-failed", 5), ("success", 6))))
if mibBuilder.loadTexts: wsSwitchProvStatus.setStatus('current')
wsSwitchCertReqTarget = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 7), IpAddress())
if mibBuilder.loadTexts: wsSwitchCertReqTarget.setStatus('current')
wsSwitchCertReqStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("in-progress", 3), ("invalid-ip", 4), ("timed-out", 5), ("success", 6))))
if mibBuilder.loadTexts: wsSwitchCertReqStatus.setStatus('current')
wsSwitchProvisioningCommand = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("initiate", 1))))
if mibBuilder.loadTexts: wsSwitchProvisioningCommand.setStatus('current')
wsSwitchCertReqCommand = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("initiate", 1))))
if mibBuilder.loadTexts: wsSwitchCertReqCommand.setStatus('current')
wsWDSAPGroupTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1), )
if mibBuilder.loadTexts: wsWDSAPGroupTable.setStatus('current')
wsWDSAPGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"))
if mibBuilder.loadTexts: wsWDSAPGroupEntry.setStatus('current')
wsWDSAPGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupId.setStatus('current')
wsWDSAPGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupName.setStatus('current')
wsWDSAPGroupSpanningTree = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable'))
if mibBuilder.loadTexts: wsWDSAPGroupSpanningTree.setStatus('current')
wsWDSAPGroupPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupPassword.setStatus('current')
wsWDSAPGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 1, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupRowStatus.setStatus('current')
wsWDSAPGroupAPTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 2), )
if mibBuilder.loadTexts: wsWDSAPGroupAPTable.setStatus('current')
wsWDSAPGroupAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupAPMacAddress"))
if mibBuilder.loadTexts: wsWDSAPGroupAPEntry.setStatus('current')
wsWDSAPGroupAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupAPMacAddress.setStatus('current')
wsWDSAPGroupAPStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)))
if mibBuilder.loadTexts: wsWDSAPGroupAPStpPriority.setStatus('current')
wsWDSAPGroupAPEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 2, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPGroupAPEntryRowStatus.setStatus('current')
wsWDSAPLinkTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3), )
if mibBuilder.loadTexts: wsWDSAPLinkTable.setStatus('current')
wsWDSAPLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPLinkSourceMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPLinkSourceRadio"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPLinkDestMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPLinkDestRadio"))
if mibBuilder.loadTexts: wsWDSAPLinkEntry.setStatus('current')
wsWDSAPLinkSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPLinkSourceMacAddr.setStatus('current')
wsWDSAPLinkSourceRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPLinkSourceRadio.setStatus('current')
wsWDSAPLinkDestMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPLinkDestMacAddr.setStatus('current')
wsWDSAPLinkDestRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPLinkDestRadio.setStatus('current')
wsWDSAPLinkPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: wsWDSAPLinkPathCost.setStatus('current')
wsWDSAPLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 3, 1, 6), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPLinkRowStatus.setStatus('current')
wsWDSAPGroupStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4), )
if mibBuilder.loadTexts: wsWDSAPGroupStatusTable.setStatus('current')
wsWDSAPGroupStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"))
if mibBuilder.loadTexts: wsWDSAPGroupStatusEntry.setStatus('current')
wsWDSConfigAPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSConfigAPCount.setStatus('current')
wsWDSConnectedAPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSConnectedAPCount.setStatus('current')
wsWDSRootAPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSRootAPCount.setStatus('current')
wsWDSSatelliteAPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSSatelliteAPCount.setStatus('current')
wsWDSAPRootBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 5), MacAddress())
if mibBuilder.loadTexts: wsWDSAPRootBridge.setStatus('current')
wsWDSAPRootDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("root-ap", 1), ("satellite-ap", 2), ("external-device", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPRootDeviceType.setStatus('current')
wsWDSConfigWDSLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSConfigWDSLinkCount.setStatus('current')
wsWDSDetectedWDSLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSDetectedWDSLinkCount.setStatus('current')
wsWDSBlockedWDSLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSBlockedWDSLinkCount.setStatus('current')
wsWDSGroupNewPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSGroupNewPassword.setStatus('current')
wsWDSGroupChangePasswdStart = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSGroupChangePasswdStart.setStatus('current')
wsWDSGroupChangePasswdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("not-started", 1), ("requested", 2), ("success", 3), ("invalid-password", 4), ("in-progress", 5), ("timed-out", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSGroupChangePasswdStatus.setStatus('current')
wsWDSAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5), )
if mibBuilder.loadTexts: wsWDSAPStatusTable.setStatus('current')
wsWDSAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPMacAddr"))
if mibBuilder.loadTexts: wsWDSAPStatusEntry.setStatus('current')
wsWDSAPMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPMacAddr.setStatus('current')
wsWDSAPConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-connected", 0), ("connected", 1))).clone('not-connected')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPConnectionStatus.setStatus('current')
wsWDSAPSatelliteMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("wired", 1), ("satellite", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPSatelliteMode.setStatus('current')
wsWDSAPSTPRootMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-stp-root", 0), ("stp-root", 1))).clone('not-stp-root'))
if mibBuilder.loadTexts: wsWDSAPSTPRootMode.setStatus('current')
wsWDSAPSTPCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 5), Unsigned32())
if mibBuilder.loadTexts: wsWDSAPSTPCost.setStatus('current')
wsWDSAPEthPortSTPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("forwarding", 1), ("learning", 2), ("listening", 3), ("blocking", 4))).clone('disabled'))
if mibBuilder.loadTexts: wsWDSAPEthPortSTPStatus.setStatus('current')
wsWDSAPEthPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPEthPortMode.setStatus('current')
wsWDSAPEthPortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSAPEthPortLinkState.setStatus('current')
wsWDSLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6), )
if mibBuilder.loadTexts: wsWDSLinkStatusTable.setStatus('current')
wsWDSLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSAPGroupId"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSSourceMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSSourceRadio"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSDestMacAddr"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsWDSDestRadio"))
if mibBuilder.loadTexts: wsWDSLinkStatusEntry.setStatus('current')
wsWDSSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: wsWDSSourceMacAddr.setStatus('current')
wsWDSSourceRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsWDSSourceRadio.setStatus('current')
wsWDSDestMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 3), MacAddress())
if mibBuilder.loadTexts: wsWDSDestMacAddr.setStatus('current')
wsWDSDestRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wsWDSDestRadio.setStatus('current')
wsWDSLinkSourceEndPointDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-detected", 0), ("detected", 1))).clone('not-detected')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkSourceEndPointDetected.setStatus('current')
wsWDSLinkDestEndPointDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-detected", 0), ("detected", 1))).clone('not-detected')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkDestEndPointDetected.setStatus('current')
wsWDSLinkSourceSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("forwarding", 1), ("learning", 2), ("listening", 3), ("blocking", 4))).clone('disabled'))
if mibBuilder.loadTexts: wsWDSLinkSourceSTPState.setStatus('current')
wsWDSLinkDestSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("forwarding", 1), ("learning", 2), ("listening", 3), ("blocking", 4))).clone('disabled'))
if mibBuilder.loadTexts: wsWDSLinkDestSTPState.setStatus('current')
wsWDSLinkAggregationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-aggregated", 0), ("aggregated", 1))).clone('not-aggregated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkAggregationMode.setStatus('current')
wsWDSLinkStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7), )
if mibBuilder.loadTexts: wsWDSLinkStatisticsTable.setStatus('current')
wsWDSLinkStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1), )
wsWDSLinkStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsWDSLinkStatisticsEntry"))
wsWDSLinkStatisticsEntry.setIndexNames(*wsWDSLinkStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsWDSLinkStatisticsEntry.setStatus('current')
wsWDSLinkSourceAPPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkSourceAPPktsSent.setStatus('current')
wsWDSLinkSourceAPBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkSourceAPBytesSent.setStatus('current')
wsWDSLinkSourceAPPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkSourceAPPktsRcvd.setStatus('current')
wsWDSLinkSourceAPBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkSourceAPBytesRcvd.setStatus('current')
wsWDSLinkDestAPPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkDestAPPktsSent.setStatus('current')
wsWDSLinkDestAPBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkDestAPBytesSent.setStatus('current')
wsWDSLinkDestAPPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkDestAPPktsRcvd.setStatus('current')
wsWDSLinkDestAPBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSLinkDestAPBytesRcvd.setStatus('current')
wsWDSGroupConfigRequestAction = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 19, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsWDSGroupConfigRequestAction.setStatus('current')
wsDevLocBldngTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1), )
if mibBuilder.loadTexts: wsDevLocBldngTable.setStatus('current')
wsDevLocBldngEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocBldngNum"))
if mibBuilder.loadTexts: wsDevLocBldngEntry.setStatus('current')
wsDevLocBldngNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocBldngNum.setStatus('current')
wsDevLocBldngDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocBldngDesc.setStatus('current')
wsDevLocFlrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocFlrCount.setStatus('current')
wsDevLocApCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocApCount.setStatus('current')
wsDevLocBldngRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 1, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocBldngRowStatus.setStatus('current')
wsDevLocBldngFlrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2), )
if mibBuilder.loadTexts: wsDevLocBldngFlrTable.setStatus('current')
wsDevLocBldngFlrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocBldngNum"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocBldngFlrNum"))
if mibBuilder.loadTexts: wsDevLocBldngFlrEntry.setStatus('current')
wsDevLocBldngFlrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: wsDevLocBldngFlrNum.setStatus('current')
wsDevLocBldngFlrDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocBldngFlrDesc.setStatus('current')
wsDevLocBldngFlrApCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocBldngFlrApCount.setStatus('current')
wsDevLocFlrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 2, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocFlrRowStatus.setStatus('current')
wsDevLocManagedApTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3), )
if mibBuilder.loadTexts: wsDevLocManagedApTable.setStatus('current')
wsDevLocManagedApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocBldngNum"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocBldngFlrNum"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsDevLocManagedApMac"))
if mibBuilder.loadTexts: wsDevLocManagedApEntry.setStatus('current')
wsDevLocManagedApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocManagedApMac.setStatus('current')
wsDevLocMeasurementUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("meters", 1), ("feet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocMeasurementUnit.setStatus('current')
wsDevLocManagedApXCoord = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3000, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocManagedApXCoord.setStatus('current')
wsDevLocManagedApYCoord = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3000, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocManagedApYCoord.setStatus('current')
wsDevLocManagedApRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 3, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDevLocManagedApRowStatus.setStatus('current')
wsOnDemandTrigger = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4))
wsOnDemandTriggerGlobalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5))
wsOnDemandTriggerFloorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6))
wsOnDemandTriggerDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ap", 1), ("client", 2))).clone('ap')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerDeviceType.setStatus('current')
wsOnDemandTriggerDeviceMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerDeviceMACAddress.setStatus('current')
wsOnDemandTriggerBuildingNumber = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerBuildingNumber.setStatus('current')
wsOnDemandTriggerFloorNumber = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorNumber.setStatus('current')
wsOnDemandTriggerUseRadios = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sentry", 1), ("sentryAndOperational", 2))).clone('sentry')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerUseRadios.setStatus('current')
wsOnDemandTriggerStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notInProgress", 1), ("inProgress", 2))).clone('notInProgress')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerStatus.setStatus('current')
wsOnDemandTriggerNumOfAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerNumOfAPs.setStatus('current')
wsOnDemandTriggerStart = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("start", 1))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerStart.setStatus('current')
wsOnDemandTriggerGlobalStatusDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ap", 1), ("client", 2))).clone('ap')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusDeviceType.setStatus('current')
wsOnDemandTriggerGlobalStatusDeviceMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusDeviceMACAddress.setStatus('current')
wsOnDemandTriggerGlobalStatusBuildingNumber = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusBuildingNumber.setStatus('current')
wsOnDemandTriggerGlobalStatusFloorNumber = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusFloorNumber.setStatus('current')
wsOnDemandTriggerGlobalStatusUsedRadios = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sentry", 1), ("sentryAndOperational", 2))).clone('sentry')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusUsedRadios.setStatus('current')
wsOnDemandTriggerGlobalStatusCurrentStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notStarted", 1), ("inProgress", 2), ("deviceLocated", 3), ("deviceNotLocated", 4), ("noAPsAvailable", 5))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusCurrentStatus.setStatus('current')
wsOnDemandTriggerGlobalStatusSearchTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusSearchTime.setStatus('current')
wsOnDemandTriggerGlobalStatusNumOfLocatorAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusNumOfLocatorAPs.setStatus('current')
wsOnDemandTriggerGlobalStatusNumOfDetectedAPs = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusNumOfDetectedAPs.setStatus('current')
wsOnDemandTriggerGlobalStatusNumOfDetectedBuildings = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusNumOfDetectedBuildings.setStatus('current')
wsOnDemandTriggerGlobalStatusNumOfDetectedFloors = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusNumOfDetectedFloors.setStatus('current')
wsOnDemandTriggerGlobalStatusHighestSignalFoundBuilding = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusHighestSignalFoundBuilding.setStatus('current')
wsOnDemandTriggerGlobalStatusHighestSignalFoundFloor = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 5, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerGlobalStatusHighestSignalFoundFloor.setStatus('current')
wsOnDemandTriggerFloorStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1), )
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusTable.setStatus('current')
wsOnDemandTriggerFloorStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsOnDemandTriggerFloorStatusBuildingNum"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsOnDemandTriggerFloorStatusFloorNum"))
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusEntry.setStatus('current')
wsOnDemandTriggerFloorStatusBuildingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusBuildingNum.setStatus('current')
wsOnDemandTriggerFloorStatusFloorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusFloorNum.setStatus('current')
wsOnDemandTriggerFloorStatusDeviceFound = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notFound", 1), ("found", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusDeviceFound.setStatus('current')
wsOnDemandTriggerFloorStatusNumOfAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusNumOfAPs.setStatus('current')
wsOnDemandTriggerFloorStatusSolutionType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noSolution", 1), ("circle", 2), ("point", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusSolutionType.setStatus('current')
wsOnDemandTriggerFloorStatusXCoordinate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusXCoordinate.setStatus('current')
wsOnDemandTriggerFloorStatusYCoordinate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusYCoordinate.setStatus('current')
wsOnDemandTriggerFloorStatusCircleRadius = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusCircleRadius.setStatus('current')
wsOnDemandTriggerFloorStatusSigma = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOnDemandTriggerFloorStatusSigma.setStatus('current')
wsTriangulationLocStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7), )
if mibBuilder.loadTexts: wsTriangulationLocStatusTable.setStatus('current')
wsTriangulationLocStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsTriangLocMacAddress"))
if mibBuilder.loadTexts: wsTriangulationLocStatusEntry.setStatus('current')
wsTriangLocMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocMacAddress.setStatus('current')
wsTriangLocDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocDataType.setStatus('current')
wsTriangLocStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-executed", 1), ("success", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocStatus.setStatus('current')
wsTriangLocDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ap", 1), ("client", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocDeviceType.setStatus('current')
wsTriangLocAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocAge.setStatus('current')
wsTriangLocBldng = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocBldng.setStatus('current')
wsTriangLocFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocFlr.setStatus('current')
wsTriangLocXCoord = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3000, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocXCoord.setStatus('current')
wsTriangLocYCoord = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 20, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3000, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTriangLocYCoord.setStatus('current')
wsAuthenticatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1), )
if mibBuilder.loadTexts: wsAuthenticatedClientStatusTable.setStatus('current')
wsAuthenticatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientMacAddress"))
if mibBuilder.loadTexts: wsAuthenticatedClientStatusEntry.setStatus('current')
wsAuthenticatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientMacAddress.setStatus('current')
wsAuthenticatedClientTunnelIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: wsAuthenticatedClientTunnelIpAddress.setStatus('current')
wsAuthenticatedClientUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientUserName.setStatus('current')
wsAuthenticatedClientSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSSID.setStatus('current')
wsAuthenticatedClientVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientVLAN.setStatus('current')
wsAuthenticatedClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authenticated", 1), ("associated", 2), ("disassociated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientStatus.setStatus('current')
wsAuthenticatedClientTxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientTxDataRate.setStatus('current')
wsAuthenticatedClientInactivePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientInactivePeriod.setStatus('current')
wsAuthenticatedClientDisassociateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDisassociateAction.setStatus('current')
wsAuthenticatedClientAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientAge.setStatus('current')
wsAuthenticatedClientAssociatingSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local-switch", 1), ("peer-switch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientAssociatingSwitch.setStatus('current')
wsAuthenticatedClientSwitchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSwitchMacAddress.setStatus('current')
wsAuthenticatedClientSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSwitchIpAddress.setStatus('current')
wsAuthenticatedClientDot11nCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDot11nCapable.setStatus('current')
wsAuthenticatedClientStbcCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientStbcCapable.setStatus('current')
wsAuthenticatedClientDistTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDistTunnelStatus.setStatus('current')
wsAuthenticatedClientDistTunnelRoamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("associated", 0), ("home", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDistTunnelRoamStatus.setStatus('current')
wsAuthenticatedClientDistTunnelHomeAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 18), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDistTunnelHomeAPMac.setStatus('current')
wsAuthenticatedClientDistTunnelAssocAPMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 19), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDistTunnelAssocAPMac.setStatus('current')
wsAuthenticatedClientAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientAPMacAddress.setStatus('current')
wsAuthenticatedClientBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientBSSID.setStatus('current')
wsAuthenticatedClientRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientRadioInterface.setStatus('current')
wsAuthenticatedClientChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientChannel.setStatus('current')
wsAuthenticatedClientNwTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientNwTime.setStatus('current')
wsAuthenticatedClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientIpAddress.setStatus('current')
wsAuthenticatedClientNetBiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientNetBiosName.setStatus('current')
wsAuthenticatedClientRRMSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("supported", 2), ("unsupported", 3))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMSupported.setStatus('current')
wsAuthenticatedClientRRMLocationReportSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMLocationReportSupported.setStatus('current')
wsAuthenticatedClientRRMBeaconTableMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMBeaconTableMeasurementSupported.setStatus('current')
wsAuthenticatedClientRRMBeaconActiveMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMBeaconActiveMeasurementSupported.setStatus('current')
wsAuthenticatedClientRRMBeaconPassiveMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMBeaconPassiveMeasurementSupported.setStatus('current')
wsAuthenticatedClientRRMChannelLoadMeasurementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientRRMChannelLoadMeasurementSupported.setStatus('current')
wsAuthenticatedClientDot11acCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDot11acCapable.setStatus('current')
wsAuthenticatedClientStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2), )
if mibBuilder.loadTexts: wsAuthenticatedClientStatisticsTable.setStatus('current')
wsAuthenticatedClientStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1), )
wsAuthenticatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientStatisticsEntry"))
wsAuthenticatedClientStatisticsEntry.setIndexNames(*wsAuthenticatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAuthenticatedClientStatisticsEntry.setStatus('current')
wsAuthenticatedClientPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientPktsRecvd.setStatus('current')
wsAuthenticatedClientBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientBytesRecvd.setStatus('current')
wsAuthenticatedClientPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientPktsTransmitted.setStatus('current')
wsAuthenticatedClientBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientBytesTransmitted.setStatus('current')
wsAuthenticatedClientDuplicatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientDuplicatePktsRecvd.setStatus('current')
wsAuthenticatedClientFragmentedPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientFragmentedPktsRecvd.setStatus('current')
wsAuthenticatedClientFragmentedPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientFragmentedPktsTransmitted.setStatus('current')
wsAuthenticatedClientTransmitRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientTransmitRetryCount.setStatus('current')
wsAuthenticatedClientTransmitRetryFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientTransmitRetryFailedCount.setStatus('current')
wsAuthenticatedClientPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 10), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientPktsRecvDropped.setStatus('current')
wsAuthenticatedClientBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 11), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientBytesRecvDropped.setStatus('current')
wsAuthenticatedClientPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 12), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientPktsTransmitDropped.setStatus('current')
wsAuthenticatedClientBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 13), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientBytesTransmitDropped.setStatus('current')
wsAuthenticatedClientTsViolatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 14), Counter32())
if mibBuilder.loadTexts: wsAuthenticatedClientTsViolatePktsRecvd.setStatus('current')
wsAuthenticatedClientTsViolatePktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 2, 1, 15), Counter32())
if mibBuilder.loadTexts: wsAuthenticatedClientTsViolatePktsTransmitted.setStatus('current')
wsAuthenticatedClientNeighborManagedAPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3), )
if mibBuilder.loadTexts: wsAuthenticatedClientNeighborManagedAPStatusTable.setStatus('current')
wsAuthenticatedClientNeighborManagedAPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientStationMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientNeighborWSManagedAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientNeighborWSManagedAPRadioInterface"))
if mibBuilder.loadTexts: wsAuthenticatedClientNeighborManagedAPStatusEntry.setStatus('current')
wsAuthenticatedClientStationMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientStationMacAddress.setStatus('current')
wsAuthenticatedClientNeighborWSManagedAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientNeighborWSManagedAPMacAddress.setStatus('current')
wsAuthenticatedClientNeighborWSManagedAPRadioInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientNeighborWSManagedAPRadioInterface.setStatus('current')
wsAuthenticatedClientStationDiscoveryReason = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 3, 1, 4), Bits().clone(namedValues=NamedValues(("none", 0), ("rfscan-discovered", 1), ("neighbor-ap-associated", 2), ("current-ap-associated", 3), ("probe-request-discovered", 4), ("ad-hoc-rogue", 5), ("associated-to-peer-ap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientStationDiscoveryReason.setStatus('current')
wsVAPAuthenticatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 4), )
if mibBuilder.loadTexts: wsVAPAuthenticatedClientStatusTable.setStatus('current')
wsVAPAuthenticatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 4, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedVAPMacAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsVAPAuthenticatedClientMacAddress"))
if mibBuilder.loadTexts: wsVAPAuthenticatedClientStatusEntry.setStatus('current')
wsAuthenticatedVAPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedVAPMacAddress.setStatus('current')
wsVAPAuthenticatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVAPAuthenticatedClientMacAddress.setStatus('current')
wsSSIDAuthenticatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 5), )
if mibBuilder.loadTexts: wsSSIDAuthenticatedClientStatusTable.setStatus('current')
wsSSIDAuthenticatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 5, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSSIDAuthenticatedClientMacAddress"))
if mibBuilder.loadTexts: wsSSIDAuthenticatedClientStatusEntry.setStatus('current')
wsAuthenticatedSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedSSID.setStatus('current')
wsSSIDAuthenticatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSSIDAuthenticatedClientMacAddress.setStatus('current')
wsSwitchAuthenticatedClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 6), )
if mibBuilder.loadTexts: wsSwitchAuthenticatedClientStatusTable.setStatus('current')
wsSwitchAuthenticatedClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 6, 1), ).setIndexNames((0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchIPAddress"), (0, "AT-UWC-WLAN-SWITCH-MIB", "wsSwitchAuthenticatedClientMacAddress"))
if mibBuilder.loadTexts: wsSwitchAuthenticatedClientStatusEntry.setStatus('current')
wsAuthenticatedClientSwitchIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSwitchIPAddress.setStatus('current')
wsSwitchAuthenticatedClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 6, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSwitchAuthenticatedClientMacAddress.setStatus('current')
wsAuthenticatedClientQosStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7), )
if mibBuilder.loadTexts: wsAuthenticatedClientQosStatusTable.setStatus('current')
wsAuthenticatedClientQosStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1), )
wsAuthenticatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientQosStatusEntry"))
wsAuthenticatedClientQosStatusEntry.setIndexNames(*wsAuthenticatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAuthenticatedClientQosStatusEntry.setStatus('current')
wsAuthenticatedClientQosBandwidthLimitDown = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsAuthenticatedClientQosBandwidthLimitDown.setStatus('current')
wsAuthenticatedClientQosBandwidthLimitUp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsAuthenticatedClientQosBandwidthLimitUp.setStatus('current')
wsAuthenticatedClientQosAccessControlDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosAccessControlDownType.setStatus('current')
wsAuthenticatedClientQosAccessControlDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosAccessControlDownName.setStatus('current')
wsAuthenticatedClientQosAccessControlUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosAccessControlUpType.setStatus('current')
wsAuthenticatedClientQosAccessControlUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosAccessControlUpName.setStatus('current')
wsAuthenticatedClientQosDiffservPolicyDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosDiffservPolicyDownType.setStatus('current')
wsAuthenticatedClientQosDiffservPolicyDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosDiffservPolicyDownName.setStatus('current')
wsAuthenticatedClientQosDiffservPolicyUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosDiffservPolicyUpType.setStatus('current')
wsAuthenticatedClientQosDiffservPolicyUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosDiffservPolicyUpName.setStatus('current')
wsAuthenticatedClientQosOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosOperStatus.setStatus('current')
wsAuthenticatedClientSessionStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8), )
if mibBuilder.loadTexts: wsAuthenticatedClientSessionStatisticsTable.setStatus('current')
wsAuthenticatedClientSessionStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1), )
wsAuthenticatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientSessionStatisticsEntry"))
wsAuthenticatedClientSessionStatisticsEntry.setIndexNames(*wsAuthenticatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionStatisticsEntry.setStatus('current')
wsAuthenticatedClientSessionPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionPktsRecvd.setStatus('current')
wsAuthenticatedClientSessionBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionBytesRecvd.setStatus('current')
wsAuthenticatedClientSessionPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionPktsTransmitted.setStatus('current')
wsAuthenticatedClientSessionBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionBytesTransmitted.setStatus('current')
wsAuthenticatedClientSessionDuplicatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionDuplicatePktsRecvd.setStatus('current')
wsAuthenticatedClientSessionFragmentedPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionFragmentedPktsRecvd.setStatus('current')
wsAuthenticatedClientSessionFragmentedPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionFragmentedPktsTransmitted.setStatus('current')
wsAuthenticatedClientSessionTransmitRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionTransmitRetryCount.setStatus('current')
wsAuthenticatedClientSessionTransmitRetryFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientSessionTransmitRetryFailedCount.setStatus('current')
wsAuthenticatedClientSessionPktsRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 10), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionPktsRecvDropped.setStatus('current')
wsAuthenticatedClientSessionBytesRecvDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 11), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionBytesRecvDropped.setStatus('current')
wsAuthenticatedClientSessionPktsTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 12), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionPktsTransmitDropped.setStatus('current')
wsAuthenticatedClientSessionBytesTransmitDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 13), Counter64())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionBytesTransmitDropped.setStatus('current')
wsAuthenticatedClientSessionTSViolatePktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 14), Counter32())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionTSViolatePktsRecvd.setStatus('current')
wsAuthenticatedClientSessionTSViolatePktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 8, 1, 15), Counter32())
if mibBuilder.loadTexts: wsAuthenticatedClientSessionTSViolatePktsTransmitted.setStatus('current')
wsAuthenticatedClientQosCachedStatusTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9), )
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedStatusTable.setStatus('current')
wsAuthenticatedClientQosCachedStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1), )
wsAuthenticatedClientStatusEntry.registerAugmentions(("AT-UWC-WLAN-SWITCH-MIB", "wsAuthenticatedClientQosCachedStatusEntry"))
wsAuthenticatedClientQosCachedStatusEntry.setIndexNames(*wsAuthenticatedClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedStatusEntry.setStatus('current')
wsAuthenticatedClientQosCachedBandwidthLimitDown = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedBandwidthLimitDown.setStatus('current')
wsAuthenticatedClientQosCachedBandwidthLimitUp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedBandwidthLimitUp.setStatus('current')
wsAuthenticatedClientQosCachedAccessControlDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedAccessControlDownType.setStatus('current')
wsAuthenticatedClientQosCachedAccessControlDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedAccessControlDownName.setStatus('current')
wsAuthenticatedClientQosCachedAccessControlUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("ip", 2), ("mac", 3), ("ipv6", 4))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedAccessControlUpType.setStatus('current')
wsAuthenticatedClientQosCachedAccessControlUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedAccessControlUpName.setStatus('current')
wsAuthenticatedClientQosCachedDiffservPolicyDownType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedDiffservPolicyDownType.setStatus('current')
wsAuthenticatedClientQosCachedDiffservPolicyDownName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedDiffservPolicyDownName.setStatus('current')
wsAuthenticatedClientQosCachedDiffservPolicyUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("in", 2))))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedDiffservPolicyUpType.setStatus('current')
wsAuthenticatedClientQosCachedDiffservPolicyUpName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 42, 8, 34, 21, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: wsAuthenticatedClientQosCachedDiffservPolicyUpName.setStatus('current')
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", wsAPHardwareRadioCapabilityTable=wsAPHardwareRadioCapabilityTable, wsNetworkSSID=wsNetworkSSID, wsRrmChannelLoadNewRequestClientMacAddr=wsRrmChannelLoadNewRequestClientMacAddr, knownClientDatabaseRadiusServerStatus=knownClientDatabaseRadiusServerStatus, wsAPRadioLongRetryLimit=wsAPRadioLongRetryLimit, wsTotalStandaloneAPs=wsTotalStandaloneAPs, wsWDSAPSTPCost=wsWDSAPSTPCost, wsAPEDCAMinContentionWindow=wsAPEDCAMinContentionWindow, wsAPDeAuthenticationAttackStatusEntry=wsAPDeAuthenticationAttackStatusEntry, wsAPRadio2Channel=wsAPRadio2Channel, wsManagedAPRoamingTspecsRejected=wsManagedAPRoamingTspecsRejected, wsManagedAPRadioMCAStatus=wsManagedAPRadioMCAStatus, wsRrmNeighborChannel=wsRrmNeighborChannel, wsAPRadioMaxClients=wsAPRadioMaxClients, wsOnDemandTriggerGlobalStatus=wsOnDemandTriggerGlobalStatus, wsAPRogueClassificationReportingAPMac=wsAPRogueClassificationReportingAPMac, wsManagedAPAuthenticatedClients=wsManagedAPAuthenticatedClients, wsManagedAPRadioResourceMeasEnabled=wsManagedAPRadioResourceMeasEnabled, wsNeighborClientDiscoveryReason=wsNeighborClientDiscoveryReason, wsManagedAPTspecNumActiveTrafficStreams=wsManagedAPTspecNumActiveTrafficStreams, wsNetworkRedirectURL=wsNetworkRedirectURL, wsManagedAPDistTunnelRoamedClients=wsManagedAPDistTunnelRoamedClients, wsRrmChannelLoadHistoryEntryLoad=wsRrmChannelLoadHistoryEntryLoad, wsManagedAPRadioTspecMediumTimeUnallocated=wsManagedAPRadioTspecMediumTimeUnallocated, wsNetworkWEPKey4=wsNetworkWEPKey4, wsRrmNeighborSSID=wsRrmNeighborSSID, probeThresholdValue=probeThresholdValue, wsPeerConfigurationQosDiffServ=wsPeerConfigurationQosDiffServ, wsAPProvMutualAuthMode=wsAPProvMutualAuthMode, wsAuthenticatedClientPktsTransmitted=wsAuthenticatedClientPktsTransmitted, wsManagedAPCL2TunnelBytesRecvd=wsManagedAPCL2TunnelBytesRecvd, wsWDSAPStatusTable=wsWDSAPStatusTable, wsNetworkSessionKeyRefreshRate=wsNetworkSessionKeyRefreshRate, wsDetectedClientEntryCreateTime=wsDetectedClientEntryCreateTime, wsDetectedClientPreAuthenticationHistoryPurgeAll=wsDetectedClientPreAuthenticationHistoryPurgeAll, wsManagedAPLocation=wsManagedAPLocation, wsAPRadioStationIsolationMode=wsAPRadioStationIsolationMode, wsTotalWLANTspecsAccepted=wsTotalWLANTspecsAccepted, wsOnDemandTriggerNumOfAPs=wsOnDemandTriggerNumOfAPs, wsAuthenticatedClientSessionTransmitRetryFailedCount=wsAuthenticatedClientSessionTransmitRetryFailedCount, wsOnDemandTriggerGlobalStatusHighestSignalFoundFloor=wsOnDemandTriggerGlobalStatusHighestSignalFoundFloor, wsAuthenticatedClientQosCachedBandwidthLimitUp=wsAuthenticatedClientQosCachedBandwidthLimitUp, wsPeerConfigurationAPDatabase=wsPeerConfigurationAPDatabase, wsWDSAPLinkPathCost=wsWDSAPLinkPathCost, wsAllStatisticsReset=wsAllStatisticsReset, wsRFScanAPAdHoc=wsRFScanAPAdHoc, wsNetworkSecurityMode=wsNetworkSecurityMode, wsAuthenticatedClientAPMacAddress=wsAuthenticatedClientAPMacAddress, wsChannelPlanAPLocation=wsChannelPlanAPLocation, wsRFScanAPStatus=wsRFScanAPStatus, wsPowerPlanAPNumPwrDec=wsPowerPlanAPNumPwrDec, wsDetectedClientAcknowledgeAll=wsDetectedClientAcknowledgeAll, wsPowerPlanAPIsLocal=wsPowerPlanAPIsLocal, wsAPRadioTspecVoiceAcmMode=wsAPRadioTspecVoiceAcmMode, wsAssociatedClientSessionBytesRecvd=wsAssociatedClientSessionBytesRecvd, wsDetectedClientProbeReqRecorded=wsDetectedClientProbeReqRecorded, wsAPProvCertProfileTxStatus=wsAPProvCertProfileTxStatus, wsNeighborClientMacAddress=wsNeighborClientMacAddress, wsAuthenticatedClientSessionFragmentedPktsRecvd=wsAuthenticatedClientSessionFragmentedPktsRecvd, wsDevLocManagedApRowStatus=wsDevLocManagedApRowStatus, wsManagedAPDistTunnelMaxReplSetupDenials=wsManagedAPDistTunnelMaxReplSetupDenials, wsTotalUnknownAPs=wsTotalUnknownAPs, wsManagedVAPAuthenticatedClients=wsManagedVAPAuthenticatedClients, wsManagedVAPWLANBytesTransmitDropped=wsManagedVAPWLANBytesTransmitDropped, wsAssociatedClientQosCachedStatusTable=wsAssociatedClientQosCachedStatusTable, wsPowerPlanAPStrongestDetectedSignal=wsPowerPlanAPStrongestDetectedSignal, wsChannelPlanPercentageComplete=wsChannelPlanPercentageComplete, wsAPProvPrimarySwitchIP=wsAPProvPrimarySwitchIP, wsAuthenticatedClientQosCachedDiffservPolicyUpName=wsAuthenticatedClientQosCachedDiffservPolicyUpName, wsVAPAssociatedClientStatusEntry=wsVAPAssociatedClientStatusEntry, wsWidsStatusMode=wsWidsStatusMode, wsPowerManualProposedAdjustmentTable=wsPowerManualProposedAdjustmentTable, wsIPPollMode=wsIPPollMode, wsVAPMacAddress=wsVAPMacAddress, wsAuthenticatedClientQosAccessControlUpType=wsAuthenticatedClientQosAccessControlUpType, wsRrmChannelLoadNewRequestSend=wsRrmChannelLoadNewRequestSend, wsL2CentTnnlVlanId=wsL2CentTnnlVlanId, wsNetworkClientQosAccessControlDownName=wsNetworkClientQosAccessControlDownName, tspecManagedAP=tspecManagedAP, wsMaximumDetectedClientPreAuthenticationHistoryEntries=wsMaximumDetectedClientPreAuthenticationHistoryEntries, wsWDSAPGroupAPEntry=wsWDSAPGroupAPEntry, authThresholdValue=authThresholdValue, wsPowerPlanAPNumOpRadios=wsPowerPlanAPNumOpRadios, authenticatedClient=authenticatedClient, wsManagedAPTspecNumTrafficStreamRoamingClients=wsManagedAPTspecNumTrafficStreamRoamingClients, wsUseNetworkRadiusConfig=wsUseNetworkRadiusConfig, wsAPSentryTriangulationNoise=wsAPSentryTriangulationNoise, wsAPProfileId=wsAPProfileId, wsAPSentryTriangulationMacAddr=wsAPSentryTriangulationMacAddr, wsAPRadioRateLimitMode=wsAPRadioRateLimitMode, wsAPProvIPAddress=wsAPProvIPAddress, wsRogueClientsPresent=wsRogueClientsPresent, wsAuthenticatedClientQosCachedAccessControlUpType=wsAuthenticatedClientQosCachedAccessControlUpType, wsGlobalPeerConfigReceived=wsGlobalPeerConfigReceived, wsPeerSwitchAPProfileId=wsPeerSwitchAPProfileId, wsWDSLinkSourceAPPktsSent=wsWDSLinkSourceAPPktsSent, wsAssociatedClientSessionPktsTransmitDropped=wsAssociatedClientSessionPktsTransmitDropped, wsStationEDCATXOPLimit=wsStationEDCATXOPLimit, wsDetectedClientPreAuthenticationId=wsDetectedClientPreAuthenticationId, wsDetectedClientRoamVapMac=wsDetectedClientRoamVapMac, wsManagedAPRadioWLANBytesRecvd=wsManagedAPRadioWLANBytesRecvd, wsManagedAPVAPTspecStatusEntry=wsManagedAPVAPTspecStatusEntry, wsAssociatedClientRRMBeaconTableMeasurementSupported=wsAssociatedClientRRMBeaconTableMeasurementSupported, wsRrmNeighborAllPurge=wsRrmNeighborAllPurge, knownClientDatabaseRadiusServerName=knownClientDatabaseRadiusServerName, wsRFScanAPDot11acMode=wsRFScanAPDot11acMode, wsManagedAPReset=wsManagedAPReset, wsWDSAPGroupTable=wsWDSAPGroupTable, wsAdHocClientAgeTime=wsAdHocClientAgeTime, wsFailedAPAge=wsFailedAPAge, wsPollIPStatus=wsPollIPStatus, wsSwitchAuthenticatedClientStatusTable=wsSwitchAuthenticatedClientStatusTable, wsOnDemandTriggerGlobalStatusNumOfDetectedAPs=wsOnDemandTriggerGlobalStatusNumOfDetectedAPs, wsNetworkHideSSIDMode=wsNetworkHideSSIDMode, wsSwitchWLANTspecsAccepted=wsSwitchWLANTspecsAccepted, wsClientNeighborWSManagedAPMacAddress=wsClientNeighborWSManagedAPMacAddress, wsWDSAPRootBridge=wsWDSAPRootBridge, wsTotalWLANPktsRecvd=wsTotalWLANPktsRecvd, wsMaximumAssociatedClients=wsMaximumAssociatedClients, wsManagedAPNeighborAPListEntry=wsManagedAPNeighborAPListEntry, wsAuthenticatedClientRRMSupported=wsAuthenticatedClientRRMSupported, wsManagedAPRadioWLANUtilization=wsManagedAPRadioWLANUtilization, wsManagedAPIpAddress=wsManagedAPIpAddress, wsAuthenticatedClientDistTunnelHomeAPMac=wsAuthenticatedClientDistTunnelHomeAPMac, wsAPRadioRTSThreshold=wsAPRadioRTSThreshold, wsAssociatedClientAPMacAddress=wsAssociatedClientAPMacAddress, wsPowerPlanAPNumPwrInc=wsPowerPlanAPNumPwrInc, wsAPAuthenticationMode=wsAPAuthenticationMode, wsPowerPlanGlobalNumPwrDec=wsPowerPlanGlobalNumPwrDec, wsChannelPlanAPCurrentChannel=wsChannelPlanAPCurrentChannel, wsAuthenticatedClientQosCachedDiffservPolicyDownName=wsAuthenticatedClientQosCachedDiffservPolicyDownName, wsAssociatedClientTxDataRate=wsAssociatedClientTxDataRate, wsRegenerateX509CertificateStatus=wsRegenerateX509CertificateStatus, wsWDSLinkDestEndPointDetected=wsWDSLinkDestEndPointDetected, wsRegenerateX509CertificateAction=wsRegenerateX509CertificateAction, wsRadiusConfiguration=wsRadiusConfiguration, wsFailedAPAuthenticationFailureCount=wsFailedAPAuthenticationFailureCount, wsWDSAPGroupStatusTable=wsWDSAPGroupStatusTable, wsChannelPlanAPIsLocal=wsChannelPlanAPIsLocal, wsRogueAPTrapMode=wsRogueAPTrapMode, wsSwitchAPImageDownloadMode=wsSwitchAPImageDownloadMode, wsIPPollListNumOfDiscoveredEntries=wsIPPollListNumOfDiscoveredEntries, wsPeerClusterControllerIndicator=wsPeerClusterControllerIndicator, wsDetectedClientTriangulationId=wsDetectedClientTriangulationId, wsAPImageTypeFileEntry=wsAPImageTypeFileEntry, wsWDSGroupChangePasswdStatus=wsWDSGroupChangePasswdStatus, wsL2CentTnnlVlanListEntry=wsL2CentTnnlVlanListEntry, wsAuthenticatedClientUserName=wsAuthenticatedClientUserName, wsTotalRogueAPs=wsTotalRogueAPs, wsAPDeAuthenticationAttackAge=wsAPDeAuthenticationAttackAge, wsAssociatedClientSessionStatisticsTable=wsAssociatedClientSessionStatisticsTable, wsDetectedClientRoamHistoryTable=wsDetectedClientRoamHistoryTable, wsStatusTrapMode=wsStatusTrapMode, wsWDSAPConnectionStatus=wsWDSAPConnectionStatus, wsIPPollListEntry=wsIPPollListEntry, WsOui=WsOui, wsSwitchManagedAPs=wsSwitchManagedAPs, wsChannelPlanAPStrongestOldManagedAPandSignal=wsChannelPlanAPStrongestOldManagedAPandSignal, wsAPRadioMCSIndexAvailable=wsAPRadioMCSIndexAvailable, wsWDSAPMacAddr=wsWDSAPMacAddr, wsPeerConfigurationDeviceLocation=wsPeerConfigurationDeviceLocation, wsSwitchAssociatedClientMacAddress=wsSwitchAssociatedClientMacAddress, wsClientRogueClassificationTestId=wsClientRogueClassificationTestId, wsOnDemandTriggerFloorStatusEntry=wsOnDemandTriggerFloorStatusEntry, provisioning=provisioning, wsClusterController=wsClusterController, wsWDSRootAPCount=wsWDSRootAPCount, wsTriangulationLocStatusEntry=wsTriangulationLocStatusEntry, wsManagedAPVAPTspecPktsRecvd=wsManagedAPVAPTspecPktsRecvd, wsAPDeAuthenticationAttackStatusId=wsAPDeAuthenticationAttackStatusId, wsGlobalConfig=wsGlobalConfig, wsSSID=wsSSID, wsAssociatedClientStatus=wsAssociatedClientStatus, wsFailedAPMacAddress=wsFailedAPMacAddress, wsClientStationDiscoveryReason=wsClientStationDiscoveryReason, wsAPRadioSTBCMode=wsAPRadioSTBCMode, wsSwitchProvIPAddress=wsSwitchProvIPAddress, wsManagedAPRadioEligibleChannelRdrDetected=wsManagedAPRadioEligibleChannelRdrDetected, wsPeerConfigurationWdsGroup=wsPeerConfigurationWdsGroup, wsAuthenticatedSSID=wsAuthenticatedSSID, wsVAPAssociatedClientStatusTable=wsVAPAssociatedClientStatusTable, wsNeighborStatus=wsNeighborStatus, wsOuiDatabase=wsOuiDatabase, wsTriangLocXCoord=wsTriangLocXCoord, wsOnDemandTriggerFloorStatusBuildingNum=wsOnDemandTriggerFloorStatusBuildingNum, wsSSIDAssociatedClientMacAddress=wsSSIDAssociatedClientMacAddress, wsAPHardwareCapabilityEntry=wsAPHardwareCapabilityEntry, wsDetectedClientMacAddress=wsDetectedClientMacAddress, wsChannelPlanManualProposedAdjustmentTable=wsChannelPlanManualProposedAdjustmentTable, wsPowerPlanAPMacAddress=wsPowerPlanAPMacAddress, wsAuthenticatedClientSessionTSViolatePktsRecvd=wsAuthenticatedClientSessionTSViolatePktsRecvd, wsMibVersion=wsMibVersion, wsDetectedClientRoamHistoryPurgeAll=wsDetectedClientRoamHistoryPurgeAll, wsNetworkStaticWEPAuthenticationMode=wsNetworkStaticWEPAuthenticationMode, wsTotalDetectedClients=wsTotalDetectedClients, wsManagedAPLastFailingConfigElement=wsManagedAPLastFailingConfigElement, wsNtwProvisioningChanBGCompletion=wsNtwProvisioningChanBGCompletion, wsManagedAPWLANBytesRecvDropped=wsManagedAPWLANBytesRecvDropped, wsDetectedClientPreAuthenticationHistoryEntry=wsDetectedClientPreAuthenticationHistoryEntry, wsGlobalPeerConfigReceivedTimestamp=wsGlobalPeerConfigReceivedTimestamp, wsPeerConfigRequestAction=wsPeerConfigRequestAction, wsAPRogueClassificationLastTime=wsAPRogueClassificationLastTime, wsAssociatedClientQosCachedAccessControlUpType=wsAssociatedClientQosCachedAccessControlUpType, apProvisionDbAgeTime=apProvisionDbAgeTime, wsManagedAPTspecStatusTable=wsManagedAPTspecStatusTable, wsRFScanAPOUI=wsRFScanAPOUI, wsAPProvisioningDeleteAll=wsAPProvisioningDeleteAll, wsPeerConfigurationCaptivePortal=wsPeerConfigurationCaptivePortal, wsAuthenticatedClientFragmentedPktsTransmitted=wsAuthenticatedClientFragmentedPktsTransmitted, wsAssociatedClientQosCachedDiffservPolicyUpName=wsAssociatedClientQosCachedDiffservPolicyUpName, wsDetectedClientAuthNoise=wsDetectedClientAuthNoise, wsWDSLinkSourceEndPointDetected=wsWDSLinkSourceEndPointDetected, wsAPProfileRadioSupportedRatesTable=wsAPProfileRadioSupportedRatesTable, wsAPTriangulationNoise=wsAPTriangulationNoise, wsDetectedClientAuthRSSI=wsDetectedClientAuthRSSI, wsL2DiscoveryVlanListEntry=wsL2DiscoveryVlanListEntry, wsDetectedClientRoamApRadioId=wsDetectedClientRoamApRadioId, wsPeerConfigurationQosAcl=wsPeerConfigurationQosAcl, wsSSIDAuthenticatedClientStatusTable=wsSSIDAuthenticatedClientStatusTable, wsAPProfileVAPEntry=wsAPProfileVAPEntry, wsManagedAPVAPTspecNumActiveTrafficStreams=wsManagedAPVAPTspecNumActiveTrafficStreams, networkMutualAuthMode=networkMutualAuthMode, wsWDSAPGroupPassword=wsWDSAPGroupPassword, wsAssociatedClientQosStatusEntry=wsAssociatedClientQosStatusEntry, wsAssociatedClientSwitchIpAddress=wsAssociatedClientSwitchIpAddress, wsGlobalTspecConfiguration=wsGlobalTspecConfiguration, wsManagedAPVAPTspecBytesRecvd=wsManagedAPVAPTspecBytesRecvd, wsAuthenticatedClientNeighborManagedAPStatusEntry=wsAuthenticatedClientNeighborManagedAPStatusEntry, wsAPRogueClassificationStatusEntry=wsAPRogueClassificationStatusEntry, wsAssociatedClientStatisticsTable=wsAssociatedClientStatisticsTable, wsAssociatedClientQosCachedAccessControlDownType=wsAssociatedClientQosCachedAccessControlDownType, wsClientRogueClassificationDetected=wsClientRogueClassificationDetected, wsClientRogueClassificationStatusEntry=wsClientRogueClassificationStatusEntry, wsAPRadioShortGuardInterval=wsAPRadioShortGuardInterval, wsAssociatedClientQosAccessControlDownName=wsAssociatedClientQosAccessControlDownName, wsGlobalPeerConfigRequestAction=wsGlobalPeerConfigRequestAction, wsChannelPlanTable=wsChannelPlanTable, probeThresholdInterval=probeThresholdInterval, wsManagedVAPAuthenticationFailures=wsManagedVAPAuthenticationFailures, wsIPPollListNumOfConfigEntries=wsIPPollListNumOfConfigEntries, wsManagedAPRoamingTspecsAccepted=wsManagedAPRoamingTspecsAccepted, wsChannelPlanAPMacAddr=wsChannelPlanAPMacAddr, wsAuthenticatedClientRRMBeaconPassiveMeasurementSupported=wsAuthenticatedClientRRMBeaconPassiveMeasurementSupported, wsNetworkARPSuppressionMode=wsNetworkARPSuppressionMode, wsManagedAPDebugMode=wsManagedAPDebugMode, tspec=tspec, wsRrmNeighborTable=wsRrmNeighborTable, wsAPValidationMethod=wsAPValidationMethod, wsAuthenticatedClientStatisticsEntry=wsAuthenticatedClientStatisticsEntry, probeReqTransmitRate=probeReqTransmitRate, wsAuthenticatedClientSessionBytesTransmitDropped=wsAuthenticatedClientSessionBytesTransmitDropped, wsAssociatedClientTsMediumTime=wsAssociatedClientTsMediumTime, wsManagedAPDistTunnelsTotal=wsManagedAPDistTunnelsTotal, wsAssociatedClientQosAccessControlUpName=wsAssociatedClientQosAccessControlUpName)
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", apCodeDownload=apCodeDownload, wsClientRogueClassificationReportingAPMac=wsClientRogueClassificationReportingAPMac, wsAuthenticatedClientStatus=wsAuthenticatedClientStatus, wsRFScanAPStatusInitial=wsRFScanAPStatusInitial, wsAssociatedClientBytesRecvDropped=wsAssociatedClientBytesRecvDropped, wsWDSSatelliteAPCount=wsWDSSatelliteAPCount, wsAPImageTypeCapabilityEntry=wsAPImageTypeCapabilityEntry, wsTspecTotalTrafficStreamRoamingClients=wsTspecTotalTrafficStreamRoamingClients, wsIPPollRowStatus=wsIPPollRowStatus, wsL2DiscoveryVlanRowStatus=wsL2DiscoveryVlanRowStatus, wsAPRadioTxPower=wsAPRadioTxPower, wsSwitchAssociatedClientStatusEntry=wsSwitchAssociatedClientStatusEntry, wsAPHWTypeRadioBGmodeSupport=wsAPHWTypeRadioBGmodeSupport, wsSwitchWLANBytesTransmitted=wsSwitchWLANBytesTransmitted, wsDetectedClientTriangulationStrength=wsDetectedClientTriangulationStrength, wsManagedAPDistTunnelBytesReceived=wsManagedAPDistTunnelBytesReceived, wsNeighborClientAge=wsNeighborClientAge, wsManagedAPRadioFixedChannelIndicator=wsManagedAPRadioFixedChannelIndicator, wsWDSAPLinkDestMacAddr=wsWDSAPLinkDestMacAddr, wsDetectedClientRoamStatus=wsDetectedClientRoamStatus, wsAuthenticatedClientPktsTransmitDropped=wsAuthenticatedClientPktsTransmitDropped, wsDetectedClientAuthFailures=wsDetectedClientAuthFailures, wsPowerManualProposedAdjustmentAPNewTxPower=wsPowerManualProposedAdjustmentAPNewTxPower, rogueDetectedTrapIntvl=rogueDetectedTrapIntvl, wsSwitchStatusTable=wsSwitchStatusTable, wsDistTunnelMaxClients=wsDistTunnelMaxClients, wsPowerManualProposedAdjustmentAPCurrentTxPower=wsPowerManualProposedAdjustmentAPCurrentTxPower, wsPeerSwitchClientLimitExceeded=wsPeerSwitchClientLimitExceeded, wsAPProfileQOSTable=wsAPProfileQOSTable, wsAPRadioTspecVoiceAcmLimit=wsAPRadioTspecVoiceAcmLimit, wsNetworkClientQosDiffservPolicyUpName=wsNetworkClientQosDiffservPolicyUpName, wsSupportedDataRate=wsSupportedDataRate, wsPowerPlanAPStrongestDetectorSignal=wsPowerPlanAPStrongestDetectorSignal, wsManagedAPRadioEligibleChannel=wsManagedAPRadioEligibleChannel, wsChannelPlanAPStrongestNewManagedAPandSignal=wsChannelPlanAPStrongestNewManagedAPandSignal, wsAssociatedClientSessionTSViolatePktsTransmitted=wsAssociatedClientSessionTSViolatePktsTransmitted, wsPeerSoftwareVersion=wsPeerSoftwareVersion, wsIPPollListNumOfPolledEntries=wsIPPollListNumOfPolledEntries, wsWDSAPLinkDestRadio=wsWDSAPLinkDestRadio, wsOnDemandTrigger=wsOnDemandTrigger, wsManagedAPRadioWLANBytesTransmitDropped=wsManagedAPRadioWLANBytesTransmitDropped, wsAPRadioScanDuration=wsAPRadioScanDuration, wsAPRadioMCSIndexValue=wsAPRadioMCSIndexValue, wsOnDemandTriggerGlobalStatusNumOfDetectedBuildings=wsOnDemandTriggerGlobalStatusNumOfDetectedBuildings, wsPeerSwitchAPLocation=wsPeerSwitchAPLocation, wsAPRogueClassificationTestName=wsAPRogueClassificationTestName, wsChannelPlanAPChannel=wsChannelPlanAPChannel, wsManagedAPStatus=wsManagedAPStatus, wsAPHWTypeRadioID=wsAPHWTypeRadioID, wsManagedAPSysUpTime=wsManagedAPSysUpTime, wsOnDemandTriggerFloorStatusXCoordinate=wsOnDemandTriggerFloorStatusXCoordinate, wsAuthenticatedClientQosCachedStatusTable=wsAuthenticatedClientQosCachedStatusTable, wsQOSQueueId=wsQOSQueueId, wsAPRogueClassificationReportingAPRadio=wsAPRogueClassificationReportingAPRadio, wsRFScanAPAcknowledgeRogue=wsRFScanAPAcknowledgeRogue, wsTotalWLANBytesRecvd=wsTotalWLANBytesRecvd, wsSSIDAuthenticatedClientMacAddress=wsSSIDAuthenticatedClientMacAddress, wsAuthenticatedClientQosDiffservPolicyUpName=wsAuthenticatedClientQosDiffservPolicyUpName, wsAPProfileDisconnAPFwdingMode=wsAPProfileDisconnAPFwdingMode, wsNetworkMutualAuthenticationStatus=wsNetworkMutualAuthenticationStatus, wsAPEDCAMaxBurst=wsAPEDCAMaxBurst, wsNetworkClientQosDiffservPolicyDownName=wsNetworkClientQosDiffservPolicyDownName, wsRFScanAPBeaconInterval=wsRFScanAPBeaconInterval, wsChannelPlanAPChannelChangeInd=wsChannelPlanAPChannelChangeInd, wsManagedAPEthernetRecvdErrorCount=wsManagedAPEthernetRecvdErrorCount, wsManagedAPEthernetBytesRecvd=wsManagedAPEthernetBytesRecvd, wsDetectedClientStatusEntry=wsDetectedClientStatusEntry, wsManagedAPRadioFCSErrorCount=wsManagedAPRadioFCSErrorCount, wsWDSSourceRadio=wsWDSSourceRadio, wsFailedAPSoftwareVersion=wsFailedAPSoftwareVersion, wsAuthenticatedClientTsViolatePktsTransmitted=wsAuthenticatedClientTsViolatePktsTransmitted, wsDetectedClientRoamSSID=wsDetectedClientRoamSSID, wsValidAPConfigEntry=wsValidAPConfigEntry, wsManagedAPEthernetPktsRecvd=wsManagedAPEthernetPktsRecvd, peerSwitch=peerSwitch, wsManagedAPDistTunnelPacketsTransmitted=wsManagedAPDistTunnelPacketsTransmitted, wsPeerConfigurationKnownClients=wsPeerConfigurationKnownClients, wsSwitchStaticIPAddress=wsSwitchStaticIPAddress, wsManagedAPWLANBytesTransmitted=wsManagedAPWLANBytesTransmitted, wsManagedVAPWLANPktsRecvd=wsManagedVAPWLANPktsRecvd, wsFailedAPIpAddress=wsFailedAPIpAddress, wsManagedVAPWLANBytesRecvd=wsManagedVAPWLANBytesRecvd, wsPowerPlanAPNumInterferingAPs=wsPowerPlanAPNumInterferingAPs, wsGlobalTspecStatisticsTable=wsGlobalTspecStatisticsTable, wsAPImageAvailabilityEntry=wsAPImageAvailabilityEntry, wsAssociatedClientAssociatingSwitch=wsAssociatedClientAssociatingSwitch, wsAssociatedClientQosCachedBandwidthLimitUp=wsAssociatedClientQosCachedBandwidthLimitUp, wsClientRogueClassificationLastTime=wsClientRogueClassificationLastTime, wsAssociatedClientQosCachedAccessControlUpName=wsAssociatedClientQosCachedAccessControlUpName, wsOnDemandTriggerFloorStatusNumOfAPs=wsOnDemandTriggerFloorStatusNumOfAPs, wsManagedAPEthernetBytesTransmitted=wsManagedAPEthernetBytesTransmitted, wsPowerPlanPerProfileAvgNumInterferingAPs=wsPowerPlanPerProfileAvgNumInterferingAPs, wsWDSAPLinkSourceRadio=wsWDSAPLinkSourceRadio, wsManagedAPRadioTspecBytesRecvd=wsManagedAPRadioTspecBytesRecvd, wsPeerConfigSwitchIp=wsPeerConfigSwitchIp, wsManagedAPRadioTxFrameCount=wsManagedAPRadioTxFrameCount, wsAPRadioOtherChannelsScanMode=wsAPRadioOtherChannelsScanMode, wsOnDemandTriggerFloorStatusSolutionType=wsOnDemandTriggerFloorStatusSolutionType, wsAuthenticatedClientQosBandwidthLimitUp=wsAuthenticatedClientQosBandwidthLimitUp, wsRrmChannelLoadCurrentRequestStatus=wsRrmChannelLoadCurrentRequestStatus, wsWDSAPGroupId=wsWDSAPGroupId, wsAuthenticatedClientSwitchIpAddress=wsAuthenticatedClientSwitchIpAddress, wsTotalWLANTspecPktsTransmitted=wsTotalWLANTspecPktsTransmitted, wsWidsApSecurity=wsWidsApSecurity, wsAPImageAvailability=wsAPImageAvailability, wsDetectedClientRoamHistoryEntry=wsDetectedClientRoamHistoryEntry, wsSwitchWLANTspecBytesTransmitted=wsSwitchWLANTspecBytesTransmitted, wsPeerTotalPeerSwitches=wsPeerTotalPeerSwitches, wsNetworkClientQosDiffservPolicyDownType=wsNetworkClientQosDiffservPolicyDownType, wsRrmChannelLoadHistoryEntryClientMacAddr=wsRrmChannelLoadHistoryEntryClientMacAddr, wsPowerPlanPerRadioTable=wsPowerPlanPerRadioTable, wsWDSAPGroupRowStatus=wsWDSAPGroupRowStatus, switchProvisioning=switchProvisioning, wsVAPMode=wsVAPMode, wsManagedAPRadioTspecOperStatus=wsManagedAPRadioTspecOperStatus, wsDevLocFlrRowStatus=wsDevLocFlrRowStatus, wsTspecTotalTrafficStreamClients=wsTspecTotalTrafficStreamClients, wsAPRadioNoAckMode=wsAPRadioNoAckMode, wsClientAuthenticationFailure=wsClientAuthenticationFailure, wsAPImageFilePath=wsAPImageFilePath, wsChannelPlanAPStrongestOldUnmanagedAPandSignal=wsChannelPlanAPStrongestOldUnmanagedAPandSignal, wsAPProvNewProfileId=wsAPProvNewProfileId, wsAPRadioTspecApInactivityTimeout=wsAPRadioTspecApInactivityTimeout, wsSwitchAuthenticatedClients=wsSwitchAuthenticatedClients, wsAPProfileRadioEligibleChannelsTable=wsAPProfileRadioEligibleChannelsTable, wsDetectedClientSentryTriangulationSentryRadio=wsDetectedClientSentryTriangulationSentryRadio, wsOuiRowStatus=wsOuiRowStatus, wsAssociatedClientQosCachedDiffservPolicyUpType=wsAssociatedClientQosCachedDiffservPolicyUpType, wsAssociatedClientSwitchIPAddress=wsAssociatedClientSwitchIPAddress, wsAssociatedClientQosBandwidthLimitUp=wsAssociatedClientQosBandwidthLimitUp, wsAssociatedClientQosCachedDiffservPolicyDownName=wsAssociatedClientQosCachedDiffservPolicyDownName, wsNeighborMacAddress=wsNeighborMacAddress, wsNetworkAuthRadiusServerConfiguredStatus=wsNetworkAuthRadiusServerConfiguredStatus, wsDetectedClientTriangulationNonSentryStatusTable=wsDetectedClientTriangulationNonSentryStatusTable, wsManagedAPSerialNumber=wsManagedAPSerialNumber, wsManagedAPVAPTspecStatisticsTable=wsManagedAPVAPTspecStatisticsTable, wsNetworkWPACipherSuites=wsNetworkWPACipherSuites, wsManagedAPRadioFixedChannelAction=wsManagedAPRadioFixedChannelAction, wsManagedAPRadioFixedChannel=wsManagedAPRadioFixedChannel, wsDetectedClientOUI=wsDetectedClientOUI, wsAPProfileRadioSupportedChannelsEntry=wsAPProfileRadioSupportedChannelsEntry, wsAPRadioQOSEDCATemplate=wsAPRadioQOSEDCATemplate, wsFailureAPStatusEntry=wsFailureAPStatusEntry, wsRadiusAcctMode=wsRadiusAcctMode, wsSwitchTspecTotalTrafficStreamClients=wsSwitchTspecTotalTrafficStreamClients, wsAPSentryTriangulationSentryRadio=wsAPSentryTriangulationSentryRadio, wsTotalWLANTspecBytesRecvd=wsTotalWLANTspecBytesRecvd, wsAssociatedClientDistTunnelHomeAPMac=wsAssociatedClientDistTunnelHomeAPMac, wsManagedAPRadioFixedPower=wsManagedAPRadioFixedPower, wsManagedAPDistTunnelsMaxMcastRepl=wsManagedAPDistTunnelsMaxMcastRepl, wsAPRadioSentryScanMode=wsAPRadioSentryScanMode, wsAdHocClientAge=wsAdHocClientAge, wsNtwProvisioningTimeStamp=wsNtwProvisioningTimeStamp, wsAPProfileTable=wsAPProfileTable, wsAPConfigRowStatus=wsAPConfigRowStatus, wsAuthenticatedClientAssociatingSwitch=wsAuthenticatedClientAssociatingSwitch, wsManagedAPDistTunnelBytesTransmitted=wsManagedAPDistTunnelBytesTransmitted, wsDetectedClientRoamId=wsDetectedClientRoamId, wsRrmNeighborAge=wsRrmNeighborAge, wsAuthenticatedClientQosCachedStatusEntry=wsAuthenticatedClientQosCachedStatusEntry, wsAssociatedClientDot11nCapable=wsAssociatedClientDot11nCapable, wsAssociatedClientTsBytesTransmitted=wsAssociatedClientTsBytesTransmitted, wsManagedAPProfileName=wsManagedAPProfileName, wsManagedAPRadioRTSSuccessCount=wsManagedAPRadioRTSSuccessCount, wsManagedAPDistTunnelMcastPacketsReceived=wsManagedAPDistTunnelMcastPacketsReceived, wsClientRogueClassificationTestState=wsClientRogueClassificationTestState, wsAuthenticatedClientNeighborManagedAPStatusTable=wsAuthenticatedClientNeighborManagedAPStatusTable, wsManagedAPTspecsRejected=wsManagedAPTspecsRejected, wsNetworkBcastKeyRefreshRate=wsNetworkBcastKeyRefreshRate, wsAssociatedClientIpAddress=wsAssociatedClientIpAddress, wsAssociatedClientTsAccessCategory=wsAssociatedClientTsAccessCategory, wsAPRadioTspecStaInactivityTimeout=wsAPRadioTspecStaInactivityTimeout, wsManagedAPRadioACKFailureCount=wsManagedAPRadioACKFailureCount, wsManagedAPDistTunnelsMaxVlanMcastRepl=wsManagedAPDistTunnelsMaxVlanMcastRepl, wsPeerSwitchAPMacAddress=wsPeerSwitchAPMacAddress, wsAssociatedClientQosCachedAccessControlDownName=wsAssociatedClientQosCachedAccessControlDownName, wsDevLocManagedApYCoord=wsDevLocManagedApYCoord, wsRrmChannelLoadHistoryTable=wsRrmChannelLoadHistoryTable, wsAPRadioFrequency=wsAPRadioFrequency, wsAdHocClientStatusEntry=wsAdHocClientStatusEntry, wsAssociatedClientNeighborManagedAPStatusEntry=wsAssociatedClientNeighborManagedAPStatusEntry, wsAPHWTypeRadioACmodeSupport=wsAPHWTypeRadioACmodeSupport, wsManagedAPVAPTspecMediumTimeRoamingUnallocated=wsManagedAPVAPTspecMediumTimeRoamingUnallocated, wsAssociatedClientBytesTransmitted=wsAssociatedClientBytesTransmitted, wsManagedAPRadioTspecMediumTimeRoamingUnallocated=wsManagedAPRadioTspecMediumTimeRoamingUnallocated, wsNetworkWPAVersionsSupported=wsNetworkWPAVersionsSupported, wsDetectedClientStatusTable=wsDetectedClientStatusTable, wsDetectedClientPreAuthenticationStatus=wsDetectedClientPreAuthenticationStatus, wsFailureAPStatusTable=wsFailureAPStatusTable, wsPeerSwitchDiscovered=wsPeerSwitchDiscovered, at_uwc=at_uwc, wsFailedAPProtocolVersion=wsFailedAPProtocolVersion, wsAuthenticatedClientStationMacAddress=wsAuthenticatedClientStationMacAddress, deauthThresholdValue=deauthThresholdValue, wsSwitchWLANRoamingTspecsAccepted=wsSwitchWLANRoamingTspecsAccepted, wsAssociatedClientTsUserPriority=wsAssociatedClientTsUserPriority, wsDetectedClientPurgeAll=wsDetectedClientPurgeAll, wsSwitchAuthenticatedClientMacAddress=wsSwitchAuthenticatedClientMacAddress, wsFailedAPSwitchIpAddress=wsFailedAPSwitchIpAddress, wsAPMode=wsAPMode, wsAuthenticatedClientInactivePeriod=wsAuthenticatedClientInactivePeriod, wsNetworkWPA2PreAuthenticationMode=wsNetworkWPA2PreAuthenticationMode, wsAPSentryTriangulationId=wsAPSentryTriangulationId, rogueApIllegalChannel=rogueApIllegalChannel, wsAssociatedClientTsDirection=wsAssociatedClientTsDirection, wsAPTriangulationNonSentryMacAddr=wsAPTriangulationNonSentryMacAddr, wsPeerSwitchConfigurationCommandReceived=wsPeerSwitchConfigurationCommandReceived, wsAssociatedClientBytesTransmitDropped=wsAssociatedClientBytesTransmitDropped, wsClusterControllerElected=wsClusterControllerElected, wsKnownClientRowStatus=wsKnownClientRowStatus, wsAPHWTypeRadioCount=wsAPHWTypeRadioCount, wsManagedAPNeighborEntriesPurge=wsManagedAPNeighborEntriesPurge, wsAuthenticatedClientBytesTransmitted=wsAuthenticatedClientBytesTransmitted, wsAssociatedClientTsStatisticsEntry=wsAssociatedClientTsStatisticsEntry, wsClusterControllerIndicator=wsClusterControllerIndicator, wsAPProfileRadioTable=wsAPProfileRadioTable, wsMaximumProvisioningAPs=wsMaximumProvisioningAPs, wsManagedAPRadioWLANPktsTransmitDropped=wsManagedAPRadioWLANPktsTransmitDropped, wsPeerProtocolVersion=wsPeerProtocolVersion, wsTotalDetectedClientRoamHistoryEntries=wsTotalDetectedClientRoamHistoryEntries, wsL2DiscoveryMode=wsL2DiscoveryMode, wsDevLocMeasurementUnit=wsDevLocMeasurementUnit, wsAPTriangulationNonSentryStatusEntry=wsAPTriangulationNonSentryStatusEntry, wsAssociatedClientTsStatisticsTable=wsAssociatedClientTsStatisticsTable, wsAPAuthenticationFailure=wsAPAuthenticationFailure, wsAssociatedClientQosCachedBandwidthLimitDown=wsAssociatedClientQosCachedBandwidthLimitDown, wsNtwProvisioningChanACompletion=wsNtwProvisioningChanACompletion, wsChannelPlanHistoryEntry=wsChannelPlanHistoryEntry, wsAuthenticatedClientDot11nCapable=wsAuthenticatedClientDot11nCapable, wsManagedAPUnknownProtocol=wsManagedAPUnknownProtocol, wsSwitchWLANTspecBytesRecvd=wsSwitchWLANTspecBytesRecvd, wsKnownClientTable=wsKnownClientTable, wsManagedAPRadioTspecStatusEntry=wsManagedAPRadioTspecStatusEntry, wsManagedAPTspecStatusEntry=wsManagedAPTspecStatusEntry, wsManagedAPVAPStatisticsEntry=wsManagedAPVAPStatisticsEntry, wsAuthenticatedClientStatusTable=wsAuthenticatedClientStatusTable, wsWDSDetectedWDSLinkCount=wsWDSDetectedWDSLinkCount, wsPeerSwitchAPProfileName=wsPeerSwitchAPProfileName, wsAPRadioMulticastTxRate=wsAPRadioMulticastTxRate, wsDetectedClientHighestNumDeAuthMsgs=wsDetectedClientHighestNumDeAuthMsgs, wsAssociatedClientQosDiffservPolicyUpName=wsAssociatedClientQosDiffservPolicyUpName, wsManagedAPVAPStatisticsTable=wsManagedAPVAPStatisticsTable, wsChannelPlanEstimatedTimeOfCompletion=wsChannelPlanEstimatedTimeOfCompletion, wsIPPollListNumOfDiscoveredFailedEntries=wsIPPollListNumOfDiscoveredFailedEntries, wsWDSDestRadio=wsWDSDestRadio, wsWDSAPEthPortLinkState=wsWDSAPEthPortLinkState, wsWLANBandwidthUtilizationExceeded=wsWLANBandwidthUtilizationExceeded, wsDevLocManagedApTable=wsDevLocManagedApTable, wsManagedAPSwitchIpAddress=wsManagedAPSwitchIpAddress, wsAssociatedClientQosCachedDiffservPolicyDownType=wsAssociatedClientQosCachedDiffservPolicyDownType, wsWDSAPGroupEntry=wsWDSAPGroupEntry, wsRFScanAPBSSID=wsRFScanAPBSSID, deauthThresholdInterval=deauthThresholdInterval, wsNetworkRedirectMode=wsNetworkRedirectMode)
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", wsManagedAPRadioWLANPktsRecvDropped=wsManagedAPRadioWLANPktsRecvDropped, wsClientRoamDetected=wsClientRoamDetected, wsNtwProvisioningOperatingStatus=wsNtwProvisioningOperatingStatus, wsAssociatedClientDistTunnelAssocAPMac=wsAssociatedClientDistTunnelAssocAPMac, wsRFScanTrapMode=wsRFScanTrapMode, wsAPProfileRadioEntry=wsAPProfileRadioEntry, wsAPImageAvailabilityTable=wsAPImageAvailabilityTable, wsAPAutoUpgradeMode=wsAPAutoUpgradeMode, wsWDSLinkDestAPPktsSent=wsWDSLinkDestAPPktsSent, wsTotalWLANBytesRecvDropped=wsTotalWLANBytesRecvDropped, wsManagedAPVAPStatusTable=wsManagedAPVAPStatusTable, wsClientRogueClassificationTestName=wsClientRogueClassificationTestName, wsCountryCode=wsCountryCode, wsIPPollListMaxNumOfEntries=wsIPPollListMaxNumOfEntries, wsSwitchStatusEntry=wsSwitchStatusEntry, wsAPProvisioningEntry=wsAPProvisioningEntry, wsAPRadioBeaconInterval=wsAPRadioBeaconInterval, wsSwitchProvStatus=wsSwitchProvStatus, wsAuthenticatedClientAge=wsAuthenticatedClientAge, wsManagedAPRadioFixedPowerAction=wsManagedAPRadioFixedPowerAction, wsRrmChannelLoadHistoryEntryApMacAddr=wsRrmChannelLoadHistoryEntryApMacAddr, wsRrmChannelLoadNewRequest=wsRrmChannelLoadNewRequest, wsPowerPlanPerProfileAvgNumInterferingVAPs=wsPowerPlanPerProfileAvgNumInterferingVAPs, wsDetectedClientBcastSSIDProbes=wsDetectedClientBcastSSIDProbes, wsTraps=wsTraps, authWithUnknownAP=authWithUnknownAP, wsAssociatedClientSessionFragmentedPktsRecvd=wsAssociatedClientSessionFragmentedPktsRecvd, wsChannelPlanAPReasonCode=wsChannelPlanAPReasonCode, wsAssociatedClientDistTunnelStatus=wsAssociatedClientDistTunnelStatus, wsManagedAPDiscovered=wsManagedAPDiscovered, wsChannelPlanHistory=wsChannelPlanHistory, wsPowerPlanProfileId=wsPowerPlanProfileId, wsAPRogueClassificationDetected=wsAPRogueClassificationDetected, wsAPHWTypeRadioNmodeSupport=wsAPHWTypeRadioNmodeSupport, wsRrmNeighborRSSI=wsRrmNeighborRSSI, wsTotalProvisioningAPs=wsTotalProvisioningAPs, wsAssociatedClientTsPktsRecvd=wsAssociatedClientTsPktsRecvd, wsAPHardwareRadioCapabilityEntry=wsAPHardwareRadioCapabilityEntry, wsDetectedClientTriangulationRssi=wsDetectedClientTriangulationRssi, wsSwitchTspecTotalTrafficStreamRoamingClients=wsSwitchTspecTotalTrafficStreamRoamingClients, wsTotalWLANRoamingTspecsAccepted=wsTotalWLANRoamingTspecsAccepted, wsAPSentryTriangulationSentryMacAddr=wsAPSentryTriangulationSentryMacAddr, wsNtwProvisoningAction=wsNtwProvisoningAction, wsAPProvAge=wsAPProvAge, wsTotalWLANDistTunnelRoamedClients=wsTotalWLANDistTunnelRoamedClients, wsAPDeAuthenticationAttackBSSID=wsAPDeAuthenticationAttackBSSID, wsDetectedClientTriangulationSentryStatusTable=wsDetectedClientTriangulationSentryStatusTable, wsWDSAPLinkSourceMacAddr=wsWDSAPLinkSourceMacAddr, wsAuthenticatedClientDistTunnelRoamStatus=wsAuthenticatedClientDistTunnelRoamStatus, wsAPProfileAeroScoutSupportMode=wsAPProfileAeroScoutSupportMode, wsSwitchWLANBytesReceived=wsSwitchWLANBytesReceived, wsMode=wsMode, wsManagedAPTspecNumTrafficStreamClients=wsManagedAPTspecNumTrafficStreamClients, wsRrmChannelLoadHistoryEntryDuration=wsRrmChannelLoadHistoryEntryDuration, wsAPRogueClassificationFirstTime=wsAPRogueClassificationFirstTime, wsVAPAuthenticatedClientStatusTable=wsVAPAuthenticatedClientStatusTable, wsAPRadioTspecRoamReserveLimit=wsAPRadioTspecRoamReserveLimit, wsChannelPlanNumOfRadiosChangedToOrigChannel=wsChannelPlanNumOfRadiosChangedToOrigChannel, wsSwitchTspecStatisticsTable=wsSwitchTspecStatisticsTable, wsAssociatedClientTransmitRetryCount=wsAssociatedClientTransmitRetryCount, wsTotalWLANPktsRecvDropped=wsTotalWLANPktsRecvDropped, wsDetectedClientRoamMacAddr=wsDetectedClientRoamMacAddr, wsAllStatisticsResetStatus=wsAllStatisticsResetStatus, wsDetectedClientRoamApMac=wsDetectedClientRoamApMac, wsPowerPlanPerProfileTable=wsPowerPlanPerProfileTable, wsManagedAPCL2TunnelPktsRecvd=wsManagedAPCL2TunnelPktsRecvd, wsAuthenticatedClientQosAccessControlDownName=wsAuthenticatedClientQosAccessControlDownName, wsManagedAPEthernetPktsTransmitted=wsManagedAPEthernetPktsTransmitted, wsOnDemandTriggerFloorStatus=wsOnDemandTriggerFloorStatus, wsAPLocation=wsAPLocation, wsAuthenticatedClientSessionPktsTransmitted=wsAuthenticatedClientSessionPktsTransmitted, wsAPTriangulationStrength=wsAPTriangulationStrength, wsSwitchDistTunnelClients=wsSwitchDistTunnelClients, wsManagedAPProfileId=wsManagedAPProfileId, wsManagedVAPWLANPktsTransmitDropped=wsManagedVAPWLANPktsTransmitDropped, wsAPRadioInterface=wsAPRadioInterface, wsAPRadioTspecVideoAcmMode=wsAPRadioTspecVideoAcmMode, wsManagedVAPWLANBytesRecvDropped=wsManagedVAPWLANBytesRecvDropped, wsAPImageTypeDescription=wsAPImageTypeDescription, wsPowerPlanTimeSinceLastPowerPLan=wsPowerPlanTimeSinceLastPowerPLan, wsSwitchTspecStatisticsEntry=wsSwitchTspecStatisticsEntry, wsDetectedClientSentryTriangulationStrength=wsDetectedClientSentryTriangulationStrength, wsClientStateTrapMode=wsClientStateTrapMode, wsWDSAPGroupName=wsWDSAPGroupName, wsAPProfileVAPTable=wsAPProfileVAPTable, wsManagedAPVAPTspecStatusTable=wsManagedAPVAPTspecStatusTable, wsAssociatedClientStbcCapable=wsAssociatedClientStbcCapable, wsNetworkTable=wsNetworkTable, wsWDSLinkStatusEntry=wsWDSLinkStatusEntry, wsAPRadio2TxPower=wsAPRadio2TxPower, wsTriangLocBldng=wsTriangLocBldng, wsTriangLocMacAddress=wsTriangLocMacAddress, wsCapability=wsCapability, wsManagedAPRadioTspecPktsRecvd=wsManagedAPRadioTspecPktsRecvd, wsPowerPlanNumPwrInc=wsPowerPlanNumPwrInc, wsClientAssociationDatabaseFull=wsClientAssociationDatabaseFull, wsRFScanAPTxRate=wsRFScanAPTxRate, wsManagedAPRadioFixedPowerIndicator=wsManagedAPRadioFixedPowerIndicator, wsAPDeAuthenticationAttackTime=wsAPDeAuthenticationAttackTime, wsManagedAPStatisticsEntry=wsManagedAPStatisticsEntry, wsAuthenticatedClientTxDataRate=wsAuthenticatedClientTxDataRate, wsAuthenticatedClientDistTunnelStatus=wsAuthenticatedClientDistTunnelStatus, wsAuthenticatedClientBytesTransmitDropped=wsAuthenticatedClientBytesTransmitDropped, wsClusterMaxAPExceeded=wsClusterMaxAPExceeded, wsPowerPlanAPStrongestDetectorAP=wsPowerPlanAPStrongestDetectorAP, wsChannelPlanTime=wsChannelPlanTime, wsRFScanAPEntriesPurge=wsRFScanAPEntriesPurge, wsL2CentTnnlVlanRowStatus=wsL2CentTnnlVlanRowStatus, wsAPProfileName=wsAPProfileName, wsManagedAPSoftwareVersion=wsManagedAPSoftwareVersion, wsAssociatedClientSSID=wsAssociatedClientSSID, wsAssociatedClientSwitchMacAddress=wsAssociatedClientSwitchMacAddress, wsAPProvUnmanagedAPReprovMode=wsAPProvUnmanagedAPReprovMode, wsAssociatedClientQosCachedStatusEntry=wsAssociatedClientQosCachedStatusEntry, wsAssociatedClientQosDiffservPolicyDownType=wsAssociatedClientQosDiffservPolicyDownType, wsAPProfileDisconnAPMgmtMode=wsAPProfileDisconnAPMgmtMode, wsManagedAPRadioWLANBytesTransmitted=wsManagedAPRadioWLANBytesTransmitted, wsAssociatedClientSessionTSViolatePktsRecvd=wsAssociatedClientSessionTSViolatePktsRecvd, wsGlobalPeerConfigRequestStatus=wsGlobalPeerConfigRequestStatus, wsDetectedClientSentryTriangulationAge=wsDetectedClientSentryTriangulationAge, wsDevLocApCount=wsDevLocApCount, wsAuthenticatedClientQosAccessControlDownType=wsAuthenticatedClientQosAccessControlDownType, wsAPRadioSentryScanChannel=wsAPRadioSentryScanChannel, wsAuthenticatedClientQosCachedDiffservPolicyDownType=wsAuthenticatedClientQosCachedDiffservPolicyDownType, wsAPProfileRadioEligibleChannelsEntry=wsAPProfileRadioEligibleChannelsEntry, wsDetectedClientName=wsDetectedClientName, wsWDSAPGroupSpanningTree=wsWDSAPGroupSpanningTree, wsRrmChannelLoadCurrentRequestChannel=wsRrmChannelLoadCurrentRequestChannel, wsManagedAPRadioTspecMediumTimeAdmitted=wsManagedAPRadioTspecMediumTimeAdmitted, apProfile=apProfile, wsManagedAPDistTunnelMaxClientLimitSetupDenials=wsManagedAPDistTunnelMaxClientLimitSetupDenials, wsManagedAPDistTunnelPacketsReceived=wsManagedAPDistTunnelPacketsReceived, wsWDSAPGroupStatusEntry=wsWDSAPGroupStatusEntry, wsDetectedClientTriangulationAge=wsDetectedClientTriangulationAge, wsWDSAPRootDeviceType=wsWDSAPRootDeviceType, rogueUnknownApManagedSsid=rogueUnknownApManagedSsid, wsManagedAPVendorId=wsManagedAPVendorId, wsDetectedClientEntryAcknowledge=wsDetectedClientEntryAcknowledge, wsAPCodeDownloadServerIP=wsAPCodeDownloadServerIP, wsModeEnabled=wsModeEnabled, wsRrmNeighborEntry=wsRrmNeighborEntry, wsAPStandaloneExpectedWired=wsAPStandaloneExpectedWired, tspecGlobal=tspecGlobal, wsAPTriangulationAge=wsAPTriangulationAge, fastPathWLANSwitch=fastPathWLANSwitch, wsAPRadioAutoPowerMode=wsAPRadioAutoPowerMode, wsPeerConfigurationAPProfiles=wsPeerConfigurationAPProfiles, wsAssociatedClientDuplicatePktsRecvd=wsAssociatedClientDuplicatePktsRecvd, wsDetectedClientPreAuthenticationHistoryTable=wsDetectedClientPreAuthenticationHistoryTable, wsAPProvStatus=wsAPProvStatus, wsDetectedClientThreatMitigationStatus=wsDetectedClientThreatMitigationStatus, wsAssociatedClientVLAN=wsAssociatedClientVLAN, wsManagedVAPId=wsManagedVAPId, wsManagedAPVAPTspecOperStatus=wsManagedAPVAPTspecOperStatus, wsRFScanAPSSID=wsRFScanAPSSID, wsPeerVendorId=wsPeerVendorId, wsRrmChannelLoadCurrentRequestApMacAddr=wsRrmChannelLoadCurrentRequestApMacAddr, wsChannelPlan=wsChannelPlan, wsOnDemandTriggerGlobalStatusSearchTime=wsOnDemandTriggerGlobalStatusSearchTime, wsGlobalPeerConfigReceiveStatus=wsGlobalPeerConfigReceiveStatus, wsNetworkClientQosBandwidthLimitUp=wsNetworkClientQosBandwidthLimitUp, wsOnDemandTriggerGlobalStatusCurrentStatus=wsOnDemandTriggerGlobalStatusCurrentStatus, wsPeerGroupId=wsPeerGroupId, wsVAPNetworkId=wsVAPNetworkId, wsWidsClientSecurity=wsWidsClientSecurity, knownClientDatabaseTest=knownClientDatabaseTest, wsStationEDCAMaxContentionWindow=wsStationEDCAMaxContentionWindow, wsRFScanAPBaseMacAddress=wsRFScanAPBaseMacAddress, wsRrmChannelLoadHistoryEntryId=wsRrmChannelLoadHistoryEntryId, wsNetworkWEPKey3=wsNetworkWEPKey3, wsAuthenticatedClientBSSID=wsAuthenticatedClientBSSID, wsDevLocBldngFlrTable=wsDevLocBldngFlrTable, wsWidsSecurity=wsWidsSecurity, wsAssociatedClientTsTid=wsAssociatedClientTsTid, wsStationEDCAMinContentionWindow=wsStationEDCAMinContentionWindow, wsAuthenticatedClientSessionStatisticsEntry=wsAuthenticatedClientSessionStatisticsEntry, wsAPEDCAMaxContentionWindow=wsAPEDCAMaxContentionWindow, wsClientAssociationFailure=wsClientAssociationFailure, wsManagedAPCodeDownloadStatus=wsManagedAPCodeDownloadStatus, wsManagedAPWLANPktsRecvDropped=wsManagedAPWLANPktsRecvDropped, wsDetectedClientTriangulationNonSentryStatusEntry=wsDetectedClientTriangulationNonSentryStatusEntry, wsAuthenticatedClientQosDiffservPolicyDownName=wsAuthenticatedClientQosDiffservPolicyDownName, TspecSuppAC=TspecSuppAC, wsAPProvEntryPurge=wsAPProvEntryPurge, wsManagedAPFailedEntriesPurge=wsManagedAPFailedEntriesPurge, wsAPDeAuthenticationAttackChannel=wsAPDeAuthenticationAttackChannel, wsAssociatedClientStatusTable=wsAssociatedClientStatusTable, wsPowerPlanOperatingStatus=wsPowerPlanOperatingStatus, wsAuthenticatedClientDistTunnelAssocAPMac=wsAuthenticatedClientDistTunnelAssocAPMac, wsChannelPlanChangeThresholdAdj=wsChannelPlanChangeThresholdAdj, wsOnDemandTriggerGlobalStatusHighestSignalFoundBuilding=wsOnDemandTriggerGlobalStatusHighestSignalFoundBuilding, associatedClient=associatedClient, managedAP=managedAP, wsWDSConnectedAPCount=wsWDSConnectedAPCount, wsAPMacAddress=wsAPMacAddress, wsNetworkAcctRadiusServerName=wsNetworkAcctRadiusServerName, wiredNetworkDetectionInterval=wiredNetworkDetectionInterval, wsNeighborRSSI=wsNeighborRSSI, wsManagedAPTspecStatisticsEntry=wsManagedAPTspecStatisticsEntry, deviceLocation=deviceLocation, authFailureThreshold=authFailureThreshold, wsNetworkClientQosEntry=wsNetworkClientQosEntry, wsAuthenticatedClientSwitchIPAddress=wsAuthenticatedClientSwitchIPAddress, wsPeerDiscoveryReason=wsPeerDiscoveryReason, wsFailedAPVendorId=wsFailedAPVendorId, wsNetworkWPAKeyType=wsNetworkWPAKeyType, wsRFScanRogueAPDetected=wsRFScanRogueAPDetected, wsSwitchWLANBytesTransmitDropped=wsSwitchWLANBytesTransmitDropped, wsTotalWLANBytesTransmitted=wsTotalWLANBytesTransmitted, wsDistTunnelIdleTimeout=wsDistTunnelIdleTimeout, wsPeerSwitchAPHardwareType=wsPeerSwitchAPHardwareType, wsVAPAuthenticatedClientMacAddress=wsVAPAuthenticatedClientMacAddress, wsGlobalTspecStatus=wsGlobalTspecStatus, wsAPImageTypeFileTable=wsAPImageTypeFileTable, wsManagedAPRadioTxPower=wsManagedAPRadioTxPower, wsOnDemandTriggerFloorStatusFloorNum=wsOnDemandTriggerFloorStatusFloorNum, wsManagedAPRadioMcastTxFrameCount=wsManagedAPRadioMcastTxFrameCount, wsSwitchWLANPktsTransmitDropped=wsSwitchWLANPktsTransmitDropped, wsNetworkUseWEPTransferKeyIndex=wsNetworkUseWEPTransferKeyIndex, wsAPTriangulationRssi=wsAPTriangulationRssi, wsManagedAPVAPTspecPktsTransmitted=wsManagedAPVAPTspecPktsTransmitted, wsAPImageFileName=wsAPImageFileName, wsRFScanAPDot11nMode=wsRFScanAPDot11nMode, wsDevLocBldngFlrNum=wsDevLocBldngFlrNum, wsPowerPlanGlobalNumPwrChanges=wsPowerPlanGlobalNumPwrChanges, wsAuthenticatedClientStatisticsTable=wsAuthenticatedClientStatisticsTable, wsFailedAPSwitchMacAddress=wsFailedAPSwitchMacAddress, wsClientRogueClassificationMacAddr=wsClientRogueClassificationMacAddr, wsAuthenticatedClientSessionBytesTransmitted=wsAuthenticatedClientSessionBytesTransmitted, wsManagedAPWLANPktsTransmitDropped=wsManagedAPWLANPktsTransmitDropped, rogueUnexpectedWdsDevice=rogueUnexpectedWdsDevice, rrmNeighbor=rrmNeighbor, wsAPRadioUtilization=wsAPRadioUtilization, wsManagedAPNeighborAPListTable=wsManagedAPNeighborAPListTable, wsIPPollListNumOfNotPolledEntries=wsIPPollListNumOfNotPolledEntries, wsAPTriangulationId=wsAPTriangulationId, wsManagedAPRadioRecvdFragmentCount=wsManagedAPRadioRecvdFragmentCount, wsOnDemandTriggerStatus=wsOnDemandTriggerStatus, wsNetworkAcctRadiusServerConfiguredStatus=wsNetworkAcctRadiusServerConfiguredStatus, wsChannelPlanLastIterationStatus=wsChannelPlanLastIterationStatus, wsRFScanAPDetected=wsRFScanAPDetected, wsOnDemandTriggerGlobalStatusDeviceMACAddress=wsOnDemandTriggerGlobalStatusDeviceMACAddress, wsRFScanAPDiscoveredAge=wsRFScanAPDiscoveredAge, wsDetectedAPRadioInterface=wsDetectedAPRadioInterface, wsManagedAPRadioWLANBytesRecvDropped=wsManagedAPRadioWLANBytesRecvDropped, wsRrmNeighborVapPurge=wsRrmNeighborVapPurge, wsAPCodeDownloadImageType=wsAPCodeDownloadImageType, wsDetectedClientTriangulationNoise=wsDetectedClientTriangulationNoise, wsRFScanAPSecurityMode=wsRFScanAPSecurityMode, wsDetectedClientDeAuthCollectionIntvl=wsDetectedClientDeAuthCollectionIntvl, wsDetectedClientSentryTriangulationMacAddr=wsDetectedClientSentryTriangulationMacAddr, wsManagedAPWLANPktsTransmitted=wsManagedAPWLANPktsTransmitted, wsNeighborSSID=wsNeighborSSID, wsChannelPlanIgnoreUnamangedAPs=wsChannelPlanIgnoreUnamangedAPs)
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", wsWDSAPLinkRowStatus=wsWDSAPLinkRowStatus, wsManagedAPRadioStatusEntry=wsManagedAPRadioStatusEntry, wsAPRadioWMMMode=wsAPRadioWMMMode, wsDevLocBldngDesc=wsDevLocBldngDesc, wsPeerConfigurationDiscovery=wsPeerConfigurationDiscovery, wsAssociatedClientSessionFragmentedPktsTransmitted=wsAssociatedClientSessionFragmentedPktsTransmitted, wsWDSAPLinkEntry=wsWDSAPLinkEntry, wsAuthenticatedClientSessionTSViolatePktsTransmitted=wsAuthenticatedClientSessionTSViolatePktsTransmitted, wsManagedAPCL2TunnelMcastRecvd=wsManagedAPCL2TunnelMcastRecvd, wsPowerPlanPerProfileEntry=wsPowerPlanPerProfileEntry, wsAuthenticatedClientQosAccessControlUpName=wsAuthenticatedClientQosAccessControlUpName, unmanagedAPReprovisioning=unmanagedAPReprovisioning, wsAPProvNewPrimarySwitchIP=wsAPProvNewPrimarySwitchIP, wsManagedAPRadioTspecPktsTransmitted=wsManagedAPRadioTspecPktsTransmitted, wsPeerConfiguration=wsPeerConfiguration, wsAPFailureAgeTime=wsAPFailureAgeTime, wsManagedAPPartNumber=wsManagedAPPartNumber, wsRrmChannelLoadHistoryEntryChannel=wsRrmChannelLoadHistoryEntryChannel, wsAuthenticatedClientQosBandwidthLimitDown=wsAuthenticatedClientQosBandwidthLimitDown, wsManagedAPARPReqsFromBcastToUcast=wsManagedAPARPReqsFromBcastToUcast, wsAuthenticatedClientRRMLocationReportSupported=wsAuthenticatedClientRRMLocationReportSupported, wsAuthenticatedClientDisassociateAction=wsAuthenticatedClientDisassociateAction, wsOnDemandTriggerUseRadios=wsOnDemandTriggerUseRadios, authReqTransmitRate=authReqTransmitRate, wsPeerConfigReceived=wsPeerConfigReceived, wsAuthRadiusServerConfiguredStatus=wsAuthRadiusServerConfiguredStatus, wsAssociatedClientTsBytesRecvd=wsAssociatedClientTsBytesRecvd, wsAPHWTypeRadioNum=wsAPHWTypeRadioNum, wsAssociatedClientFragmentedPktsRecvd=wsAssociatedClientFragmentedPktsRecvd, wsNetworkDefaultVLANId=wsNetworkDefaultVLANId, wsAdHocClientDetected=wsAdHocClientDetected, wsAssociatedClientTunnelIpAddress=wsAssociatedClientTunnelIpAddress, wsAdHocClientMacAddress=wsAdHocClientMacAddress, wsPeerSwitchFailed=wsPeerSwitchFailed, wsPeerSwitchUnknownProtocol=wsPeerSwitchUnknownProtocol, wsAssociatedClientSessionBytesTransmitted=wsAssociatedClientSessionBytesTransmitted, wsNeighborAge=wsNeighborAge, wsRrmChannelLoadNewRequestChannel=wsRrmChannelLoadNewRequestChannel, wsManagedAPNeighborClientListFull=wsManagedAPNeighborClientListFull, wsIPAddress=wsIPAddress, wsAPCodeDownloadFailureCount=wsAPCodeDownloadFailureCount, wsRogueAPMitigationCount=wsRogueAPMitigationCount, wsDetectedAPMacAddress=wsDetectedAPMacAddress, wsClientDisassociationDetected=wsClientDisassociationDetected, wsAPTriangulationSentryStatusTable=wsAPTriangulationSentryStatusTable, wsPowerPlanAPStrongestDetectorRadio=wsPowerPlanAPStrongestDetectorRadio, wsAssociatedClientUserName=wsAssociatedClientUserName, wsNetworkWEPKey1=wsNetworkWEPKey1, wsAssociatedClientRRMSupported=wsAssociatedClientRRMSupported, wsManagedAPRadioAuthenticatedClients=wsManagedAPRadioAuthenticatedClients, wsSSIDAssociatedClientStatusTable=wsSSIDAssociatedClientStatusTable, wsAPProvCommand=wsAPProvCommand, wsPeerSwitchAPIPAddress=wsPeerSwitchAPIPAddress, wsManagedAPResetAll=wsManagedAPResetAll, wsAPCodeDownloadSuccessCount=wsAPCodeDownloadSuccessCount, wsChannelPlanPerRadioPerBandTable=wsChannelPlanPerRadioPerBandTable, wsAPProfileRadioBasicRatesEntry=wsAPProfileRadioBasicRatesEntry, apDeauthenticationAttack=apDeauthenticationAttack, wsSwitchTspecTotalVoiceTrafficStreams=wsSwitchTspecTotalVoiceTrafficStreams, wsAuthenticatedClientChannel=wsAuthenticatedClientChannel, wsAuthenticatedClientSessionPktsRecvd=wsAuthenticatedClientSessionPktsRecvd, wsAuthRadiusServerName=wsAuthRadiusServerName, wsChannelPlanOperatingStatus=wsChannelPlanOperatingStatus, wsTspecViolationReportInterval=wsTspecViolationReportInterval, maxFailingAuthentication=maxFailingAuthentication, wsDetectedClientLastNonBcastBSSID=wsDetectedClientLastNonBcastBSSID, wsTriangLocFlr=wsTriangLocFlr, wsSwitchCertReqTarget=wsSwitchCertReqTarget, wsUseAPProfileId=wsUseAPProfileId, wsAuthenticatedClientSessionBytesRecvd=wsAuthenticatedClientSessionBytesRecvd, wsAuthenticatedClientBytesRecvd=wsAuthenticatedClientBytesRecvd, tspecSwitch=tspecSwitch, wsMibInfo=wsMibInfo, wsNtwProvisioningPowerPlanCnt=wsNtwProvisioningPowerPlanCnt, wsAdHocClientDetectionMode=wsAdHocClientDetectionMode, wsPowerPlanNumPwrChanges=wsPowerPlanNumPwrChanges, wsAuthenticatedClientQosCachedAccessControlUpName=wsAuthenticatedClientQosCachedAccessControlUpName, wsTspecACIndex=wsTspecACIndex, wsManagedAPTspecBytesRecvd=wsManagedAPTspecBytesRecvd, wsChannelPlanAPRadioInterface=wsChannelPlanAPRadioInterface, deauthReqTransmitRate=deauthReqTransmitRate, wsPeerConfigReceivedTimestamp=wsPeerConfigReceivedTimestamp, wsChannelPlanChangeThreshold=wsChannelPlanChangeThreshold, wsWDSGroupChangePasswdStart=wsWDSGroupChangePasswdStart, wsTotalAuthenticatedClients=wsTotalAuthenticatedClients, wsAssociatedClientNeighborManagedAPStatusTable=wsAssociatedClientNeighborManagedAPStatusTable, wsAPProfileRadioBasicRatesTable=wsAPProfileRadioBasicRatesTable, wsChannelPlanManualNewChannel=wsChannelPlanManualNewChannel, wsManagedAPRadioMPAStatus=wsManagedAPRadioMPAStatus, wsOnDemandTriggerGlobalStatusNumOfDetectedFloors=wsOnDemandTriggerGlobalStatusNumOfDetectedFloors, wsAPSentryTriangulationStrength=wsAPSentryTriangulationStrength, wsAuthenticatedClientSessionPktsRecvDropped=wsAuthenticatedClientSessionPktsRecvDropped, wsOnDemandTriggerFloorStatusTable=wsOnDemandTriggerFloorStatusTable, wsAuthenticatedClientQosCachedBandwidthLimitDown=wsAuthenticatedClientQosCachedBandwidthLimitDown, rogueManagedSsidInvalidSecurity=rogueManagedSsidInvalidSecurity, wsWDSAPGroupAPStpPriority=wsWDSAPGroupAPStpPriority, wsAPEDCAAIFS=wsAPEDCAAIFS, wsRFScanAPPeerManaged=wsRFScanAPPeerManaged, wsDetectedClientAuthCollectionIntvl=wsDetectedClientAuthCollectionIntvl, wsRrmNeighborMacAddr=wsRrmNeighborMacAddr, wsAuthenticatedClientPktsRecvd=wsAuthenticatedClientPktsRecvd, wsManagedAPStatisticsTable=wsManagedAPStatisticsTable, wsDetectedClientEntryLastUpdatedAt=wsDetectedClientEntryLastUpdatedAt, wsDevLocManagedApXCoord=wsDevLocManagedApXCoord, wsAuthenticatedClientStatusEntry=wsAuthenticatedClientStatusEntry, wsManagedVAPWLANBytesTransmitted=wsManagedVAPWLANBytesTransmitted, wsAssociatedClientSessionDuplicatePktsRecvd=wsAssociatedClientSessionDuplicatePktsRecvd, wsChannelPlanPerRadioPerBandEntry=wsChannelPlanPerRadioPerBandEntry, wsAssociatedClientRadioInterface=wsAssociatedClientRadioInterface, wsSwitchWLANPktsRecvDropped=wsSwitchWLANPktsRecvDropped, wsAPImageTypeCapabilityTable=wsAPImageTypeCapabilityTable, wsDetectedClientSentryTriangulationSentryMacAddr=wsDetectedClientSentryTriangulationSentryMacAddr, wsTotalConnectionFailedAPs=wsTotalConnectionFailedAPs, wsGlobalTspecStatisticsEntry=wsGlobalTspecStatisticsEntry, wsClientRogueClassificationFirstTime=wsClientRogueClassificationFirstTime, wsOnDemandTriggerStart=wsOnDemandTriggerStart, wsAssociatedClientSessionPktsRecvd=wsAssociatedClientSessionPktsRecvd, wsRrmChannelLoadNewRequestDuration=wsRrmChannelLoadNewRequestDuration, wsManagedVAPMacAddress=wsManagedVAPMacAddress, wsOnDemandTriggerGlobalStatusFloorNumber=wsOnDemandTriggerGlobalStatusFloorNumber, wsManagedAPIpMask=wsManagedAPIpMask, wsAssociatedClientRRMBeaconPassiveMeasurementSupported=wsAssociatedClientRRMBeaconPassiveMeasurementSupported, wsDetectedClientSentryTriangulationRssi=wsDetectedClientSentryTriangulationRssi, wsRFScanAPRogueMitigation=wsRFScanAPRogueMitigation, wsIfNumber=wsIfNumber, PYSNMP_MODULE_ID=fastPathWLANSwitch, wsChannelPlanManualProposedAdjustmentEntry=wsChannelPlanManualProposedAdjustmentEntry, wsManagedAPRadioRTSFailureCount=wsManagedAPRadioRTSFailureCount, wsMaximumManagedAPsInPeerGroup=wsMaximumManagedAPsInPeerGroup, wsManagedAPVAPStatusEntry=wsManagedAPVAPStatusEntry, wsPowerManualProposedAdjustmentAction=wsPowerManualProposedAdjustmentAction, wsOnDemandTriggerFloorStatusYCoordinate=wsOnDemandTriggerFloorStatusYCoordinate, wsPeerConfigurationRadiusClient=wsPeerConfigurationRadiusClient, wsWDSLinkSourceSTPState=wsWDSLinkSourceSTPState, wsChannelPlanNumOfRadios=wsChannelPlanNumOfRadios, wsOnDemandTriggerGlobalStatusNumOfLocatorAPs=wsOnDemandTriggerGlobalStatusNumOfLocatorAPs, wsPowerPlanAvgNumInterferingAPs=wsPowerPlanAvgNumInterferingAPs, wsSwitchTotalAPs=wsSwitchTotalAPs, wsWDSLinkSourceAPBytesRcvd=wsWDSLinkSourceAPBytesRcvd, wsTotalWLANBytesTransmitDropped=wsTotalWLANBytesTransmitDropped, wsDetectedClientPreAuthenticationAge=wsDetectedClientPreAuthenticationAge, wsAdHocClientStatusTable=wsAdHocClientStatusTable, wsManagedAPDiscoveryReason=wsManagedAPDiscoveryReason, wsTotalWLANRoamingTspecsRejected=wsTotalWLANRoamingTspecsRejected, wsNetworkClientQosAccessControlUpName=wsNetworkClientQosAccessControlUpName, wsTotalWLANPktsTransmitted=wsTotalWLANPktsTransmitted, wsAPWiredDetectionVlanId=wsAPWiredDetectionVlanId, wsAPHWTypeID=wsAPHWTypeID, wsDetectedClientStatus=wsDetectedClientStatus, wsAPRogueClassificationTestState=wsAPRogueClassificationTestState, wsDevLocBldngRowStatus=wsDevLocBldngRowStatus, wsTspecTotalVideoTrafficStreams=wsTspecTotalVideoTrafficStreams, wsL2DiscoveryVlanId=wsL2DiscoveryVlanId, wsAssociatedClientMacAddress=wsAssociatedClientMacAddress, wsManagedAPRadioTspecNumActiveTrafficStreams=wsManagedAPRadioTspecNumActiveTrafficStreams, wsTriangLocDeviceType=wsTriangLocDeviceType, wsPeerAge=wsPeerAge, wsPowerPlanPerRadioEntry=wsPowerPlanPerRadioEntry, wsVAPId=wsVAPId, wsPeerSwitchManagedAPEntry=wsPeerSwitchManagedAPEntry, wsManualPowerAdjustmentStatus=wsManualPowerAdjustmentStatus, wsManagedAPNeighborClientListTable=wsManagedAPNeighborClientListTable, wsManagedAPRadioMultipleRetryCount=wsManagedAPRadioMultipleRetryCount, clientThreatMitigation=clientThreatMitigation, wsManagedAPRadioTspecNumTrafficStreamClients=wsManagedAPRadioTspecNumTrafficStreamClients, wsAPHWTypeRadioDescription=wsAPHWTypeRadioDescription, wsWDSAPLinkTable=wsWDSAPLinkTable, wsChannelPlanAPRadioIntf=wsChannelPlanAPRadioIntf, wsRrmNeighborApMacAddr=wsRrmNeighborApMacAddr, wsWDSLinkStatisticsEntry=wsWDSLinkStatisticsEntry, wsNetworkClientQosAccessControlDownType=wsNetworkClientQosAccessControlDownType, wsAuthenticatedClientQosCachedAccessControlDownType=wsAuthenticatedClientQosCachedAccessControlDownType, wsPowerPlanAPNumPwrCycles=wsPowerPlanAPNumPwrCycles, rogueManagedApInvalidSsid=rogueManagedApInvalidSsid, wsAdHocClientEntriesPurge=wsAdHocClientEntriesPurge, wsAssociatedClientQosBandwidthLimitDown=wsAssociatedClientQosBandwidthLimitDown, wsWDSLinkSourceAPPktsRcvd=wsWDSLinkSourceAPPktsRcvd, wsLocallyManagedAPLimitExceeded=wsLocallyManagedAPLimitExceeded, wsTotalWLANDistTunnelPktsTransmitted=wsTotalWLANDistTunnelPktsTransmitted, wsManagedAPTspecPktsRecvd=wsManagedAPTspecPktsRecvd, wsAPProfileRadioSupportedChannelsTable=wsAPProfileRadioSupportedChannelsTable, wsManagedAPCL2TunnelMcastTransmitted=wsManagedAPCL2TunnelMcastTransmitted, wsAPFailureEntriesPurge=wsAPFailureEntriesPurge, wsKnownClientEntry=wsKnownClientEntry, wsTotalWLANTspecBytesTransmitted=wsTotalWLANTspecBytesTransmitted, wsChannelPlanAPTimeSinceLastChannelChange=wsChannelPlanAPTimeSinceLastChannelChange, wsNetworkRadiusAccountingMode=wsNetworkRadiusAccountingMode, wsOnDemandTriggerBuildingNumber=wsOnDemandTriggerBuildingNumber, wsVAPAuthenticatedClientStatusEntry=wsVAPAuthenticatedClientStatusEntry, wsNetworkWPA2PreAuthenticationLimit=wsNetworkWPA2PreAuthenticationLimit, wsEligibleChannel=wsEligibleChannel, wsChannelPlanType=wsChannelPlanType, wsManagedAPRadioMacAddress=wsManagedAPRadioMacAddress, wsPowerPlanAPLastPwrAdjStatus=wsPowerPlanAPLastPwrAdjStatus, wsManagedAPRadioMcastRecvdFrameCount=wsManagedAPRadioMcastRecvdFrameCount, wsRFScanAPChannel=wsRFScanAPChannel, wsEligibleChannelRowStatus=wsEligibleChannelRowStatus, wsChannelPlanAPHistoryIteration=wsChannelPlanAPHistoryIteration, wsAuthenticatedClientRRMChannelLoadMeasurementSupported=wsAuthenticatedClientRRMChannelLoadMeasurementSupported, wsPowerPlanAPNumPwrChanges=wsPowerPlanAPNumPwrChanges, wsDevLocBldngTable=wsDevLocBldngTable, wsGlobalStatus=wsGlobalStatus, wsPowerAdjustmentMode=wsPowerAdjustmentMode, wsManagedAPNeighborAPListFull=wsManagedAPNeighborAPListFull, wsAPRogueClassificationStatusTable=wsAPRogueClassificationStatusTable, wsDevLocBldngFlrEntry=wsDevLocBldngFlrEntry, wsTriangulationLocStatusTable=wsTriangulationLocStatusTable, wsMaximumDetectedClients=wsMaximumDetectedClients, wsSwitchMaximumManagedAPs=wsSwitchMaximumManagedAPs, wsAssociatedClientQosAccessControlUpType=wsAssociatedClientQosAccessControlUpType, wsAPProfileRadioMCSIndexEntry=wsAPProfileRadioMCSIndexEntry, wsPowerManualProposedAdjustmentEntry=wsPowerManualProposedAdjustmentEntry, wsTotalWLANPktsTransmitDropped=wsTotalWLANPktsTransmitDropped, wsDetectedClientAuthSignal=wsDetectedClientAuthSignal, wsAPRadioOtherChannelsScanInterval=wsAPRadioOtherChannelsScanInterval, wsOnDemandTriggerFloorStatusCircleRadius=wsOnDemandTriggerFloorStatusCircleRadius, wsDetectedClientSentryTriangulationId=wsDetectedClientSentryTriangulationId, wsAssociatedClientSessionTransmitRetryCount=wsAssociatedClientSessionTransmitRetryCount, wsAssociatedClientSessionTransmitRetryFailedCount=wsAssociatedClientSessionTransmitRetryFailedCount, wsManagedAPRadioTxFragmentCount=wsManagedAPRadioTxFragmentCount, wsManagedAPCL2TunnelBytesTransmitted=wsManagedAPCL2TunnelBytesTransmitted, wsNetworkWPAKey=wsNetworkWPAKey, wsSwitchWLANUtilization=wsSwitchWLANUtilization, wsManagedVAPAssociationFailures=wsManagedVAPAssociationFailures, wsAssociatedClientSessionBytesRecvDropped=wsAssociatedClientSessionBytesRecvDropped, wsAuthenticatedClientRRMBeaconActiveMeasurementSupported=wsAuthenticatedClientRRMBeaconActiveMeasurementSupported, wsSwitchCertReqStatus=wsSwitchCertReqStatus, wsDetectedClientProbesDetected=wsDetectedClientProbesDetected, wsAuthenticatedVAPMacAddress=wsAuthenticatedVAPMacAddress, wsSwitchWLANPktsReceived=wsSwitchWLANPktsReceived, wsPowerPlanAPChannel=wsPowerPlanAPChannel, wsAPRadio1Channel=wsAPRadio1Channel, wsAPRadioMaxReceiveLifetime=wsAPRadioMaxReceiveLifetime, wsAPRadioTspecLegacyWmmQueueMapMode=wsAPRadioTspecLegacyWmmQueueMapMode, wsAPCodeDownloadAbortCount=wsAPCodeDownloadAbortCount, wsAuthenticatedClientVLAN=wsAuthenticatedClientVLAN, wsAPProvMacAddress=wsAPProvMacAddress, wsAPFailureTrapMode=wsAPFailureTrapMode, wsAPCodeDownloadGroupSize=wsAPCodeDownloadGroupSize, wsAuthenticatedClientStbcCapable=wsAuthenticatedClientStbcCapable, wsRFScanAPAge=wsRFScanAPAge, wsChannelPlanNumOfRadiosChanged=wsChannelPlanNumOfRadiosChanged, wsL2DiscoveryVlanListTable=wsL2DiscoveryVlanListTable, wsAuthenticatedClientNeighborWSManagedAPRadioInterface=wsAuthenticatedClientNeighborWSManagedAPRadioInterface, wsRFScanAPStatusEntry=wsRFScanAPStatusEntry, wsAssociatedClientBytesRecvd=wsAssociatedClientBytesRecvd, wsManagedAPDistTunnelRoamedClientsIdleTimedOut=wsManagedAPDistTunnelRoamedClientsIdleTimedOut, wsAssociatedClientRRMBeaconActiveMeasurementSupported=wsAssociatedClientRRMBeaconActiveMeasurementSupported, wsNeighborClientRSSI=wsNeighborClientRSSI, wsPollIpAddress=wsPollIpAddress, discovery=discovery, wsAPHWDualBootSuppport=wsAPHWDualBootSuppport, wsOuiValue=wsOuiValue, rfManagement=rfManagement)
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", wsRFScanAPListFull=wsRFScanAPListFull, wsDetectedClientPreAuthenticationSSID=wsDetectedClientPreAuthenticationSSID, wsRFScanAPHighRate=wsRFScanAPHighRate, wsOnDemandTriggerDeviceMACAddress=wsOnDemandTriggerDeviceMACAddress, wsNetworkWPA2RoambackKeyCacheHoldtime=wsNetworkWPA2RoambackKeyCacheHoldtime, wsManagedAPAge=wsManagedAPAge, wsManagedAPEthernetMcastPktsRecvd=wsManagedAPEthernetMcastPktsRecvd, wsAssociatedClientTsStatusEntry=wsAssociatedClientTsStatusEntry, wsAcctRadiusServerName=wsAcctRadiusServerName, wsManagedAPDistTunnelAssocAPClients=wsManagedAPDistTunnelAssocAPClients, wsRFScanAPRRMSupported=wsRFScanAPRRMSupported, wsOnDemandTriggerFloorStatusDeviceFound=wsOnDemandTriggerFloorStatusDeviceFound, wsOperationalStatus=wsOperationalStatus, wsChannelPlanEntry=wsChannelPlanEntry, wsNetworkIdRowStatus=wsNetworkIdRowStatus, wsAuthenticatedClientSessionStatisticsTable=wsAuthenticatedClientSessionStatisticsTable, wsKnownClientName=wsKnownClientName, wsWDSAPSatelliteMode=wsWDSAPSatelliteMode, wsOnDemandTriggerGlobalStatusDeviceType=wsOnDemandTriggerGlobalStatusDeviceType, wsRFScanAPMacAddress=wsRFScanAPMacAddress, wsPowerAdjustmentStrength=wsPowerAdjustmentStrength, wsManagedAPDebugPassword=wsManagedAPDebugPassword, wsManagedAPRadioTspecStatisticsTable=wsManagedAPRadioTspecStatisticsTable, wsRFScanAPRadioInterface=wsRFScanAPRadioInterface, wsTotalPeerSwitches=wsTotalPeerSwitches, wsAPSentryTriangulationAge=wsAPSentryTriangulationAge, wsNetworkId=wsNetworkId, wsChannelPlanAPStrongestOldSignal=wsChannelPlanAPStrongestOldSignal, wsPeerStatusTable=wsPeerStatusTable, wsWDSAPEthPortMode=wsWDSAPEthPortMode, wsAPHWTypeDescription=wsAPHWTypeDescription, wsRrmChannelLoadCurrentRequestClientMacAddr=wsRrmChannelLoadCurrentRequestClientMacAddr, wsChannelPlanManagedAPFailureInterval=wsChannelPlanManagedAPFailureInterval, wsAPProfileRadioBasicDataMode=wsAPProfileRadioBasicDataMode, wsManagedVAPWLANPktsTransmitted=wsManagedVAPWLANPktsTransmitted, wsWDSLinkStatisticsTable=wsWDSLinkStatisticsTable, wsFailedAPValidationFailureCount=wsFailedAPValidationFailureCount, wsDetectedClientAuthStatus=wsDetectedClientAuthStatus, wsPowerManualProposedAdjustmentAPMacAddress=wsPowerManualProposedAdjustmentAPMacAddress, wsPowerPlanAPNumInterferingVAPs=wsPowerPlanAPNumInterferingVAPs, wsDetectedClientTriangulationMacAddr=wsDetectedClientTriangulationMacAddr, wsNetworkWEPKeyLength=wsNetworkWEPKeyLength, wsDetectedClientPreAuthenticationApMac=wsDetectedClientPreAuthenticationApMac, wsManagedAPDebugStatus=wsManagedAPDebugStatus, wsChannelPlanManualAction=wsChannelPlanManualAction, wsManagedAPFilteredARPRequest=wsManagedAPFilteredARPRequest, wsWDSLinkDestAPBytesRcvd=wsWDSLinkDestAPBytesRcvd, wsWDSLinkAggregationMode=wsWDSLinkAggregationMode, wsChannelPlanManual=wsChannelPlanManual, wsAuthenticatedClientQosCachedAccessControlDownName=wsAuthenticatedClientQosCachedAccessControlDownName, wsSwitchWLANRoamingTspecsRejected=wsSwitchWLANRoamingTspecsRejected, wsManagedAPWLANPktsRecvd=wsManagedAPWLANPktsRecvd, wsAssociatedClientSessionBytesTransmitDropped=wsAssociatedClientSessionBytesTransmitDropped, wsManagedAPTspecStatisticsTable=wsManagedAPTspecStatisticsTable, wsClusterPriority=wsClusterPriority, wsAssociatedClientQosAccessControlDownType=wsAssociatedClientQosAccessControlDownType, wsManagedAPBroadcastedARPRequests=wsManagedAPBroadcastedARPRequests, wsRrmChannelLoadCurrentRequestAbort=wsRrmChannelLoadCurrentRequestAbort, wsDetectedClientTriangulationNonSentryMacAddr=wsDetectedClientTriangulationNonSentryMacAddr, wsNetworkExchangeCertificates=wsNetworkExchangeCertificates, wsNetworkClientQosBandwidthLimitDown=wsNetworkClientQosBandwidthLimitDown, wsManagedAPRadioStatisticsEntry=wsManagedAPRadioStatisticsEntry, wsAPStandaloneExpectedChannel=wsAPStandaloneExpectedChannel, wsAuthenticatedClientQosOperStatus=wsAuthenticatedClientQosOperStatus, wsAPRadioRateLimitBurst=wsAPRadioRateLimitBurst, wsAssociatedClientPktsRecvd=wsAssociatedClientPktsRecvd, wsAcctRadiusServerConfiguredStatus=wsAcctRadiusServerConfiguredStatus, wsChannelPlanInterval=wsChannelPlanInterval, wsSupportedChannel=wsSupportedChannel, wsManagedAPVAPTspecNumTrafficStreamClients=wsManagedAPVAPTspecNumTrafficStreamClients, rogueManagedApNoSsid=rogueManagedApNoSsid, wsManagedAPStatusEntry=wsManagedAPStatusEntry, wsWDSLinkDestAPPktsRcvd=wsWDSLinkDestAPPktsRcvd, wsTriangLocDataType=wsTriangLocDataType, wsAuthenticatedClientDot11acCapable=wsAuthenticatedClientDot11acCapable, wsNetworkWEPKey2=wsNetworkWEPKey2, wsModeDisabled=wsModeDisabled, wsAssociatedClientTsViolatePktsTransmitted=wsAssociatedClientTsViolatePktsTransmitted, wsStationEDCAAIFS=wsStationEDCAAIFS, wsNeighborClientChannel=wsNeighborClientChannel, wsAPRadio1TxPower=wsAPRadio1TxPower, wsMaximumDetectedClientRoamHistoryEntries=wsMaximumDetectedClientRoamHistoryEntries, wsRrmChannelLoadCurrentRequestDuration=wsRrmChannelLoadCurrentRequestDuration, wsNetworkMACAuthenticationMode=wsNetworkMACAuthenticationMode, wsSwitchConnectionFailedAPs=wsSwitchConnectionFailedAPs, wsManagedAPRadioStatusTable=wsManagedAPRadioStatusTable, wsTotalClients=wsTotalClients, wsSSIDAssociatedClientStatusEntry=wsSSIDAssociatedClientStatusEntry, wsSwitchIPAddress=wsSwitchIPAddress, wsChannelPlanAPStrongestNewUnmanagedAPandSignal=wsChannelPlanAPStrongestNewUnmanagedAPandSignal, wsRFScanAPPhysicalMode=wsRFScanAPPhysicalMode, wsNetworkAuthRadiusServerName=wsNetworkAuthRadiusServerName, wsKnownClientAuthAction=wsKnownClientAuthAction, wsDetectedClientProbeCollectionIntvl=wsDetectedClientProbeCollectionIntvl, wsPeerSwitchIpAddress=wsPeerSwitchIpAddress, wsDetectedClientLastNonBcastSSID=wsDetectedClientLastNonBcastSSID, wsAssociatedClientAge=wsAssociatedClientAge, rrmChannelLoad=rrmChannelLoad, wsAuthenticatedClientNwTime=wsAuthenticatedClientNwTime, wsAPRadioDTIMPeriod=wsAPRadioDTIMPeriod, wsChannelPlanHistoryTable=wsChannelPlanHistoryTable, wsNetworkClientQosDiffservPolicyUpType=wsNetworkClientQosDiffservPolicyUpType, wsSSIDAuthenticatedClientStatusEntry=wsSSIDAuthenticatedClientStatusEntry, wsAPCodeDownloadStatus=wsAPCodeDownloadStatus, wsAssociatedClientQosDiffservPolicyDownName=wsAssociatedClientQosDiffservPolicyDownName, wsWDSLinkStatusTable=wsWDSLinkStatusTable, wsAssociatedClientQosDiffservPolicyUpType=wsAssociatedClientQosDiffservPolicyUpType, wsAPRogueClassificationMacAddr=wsAPRogueClassificationMacAddr, wsNetworkDistTunnelMode=wsNetworkDistTunnelMode, wsChannelPlanManualCurrentChannel=wsChannelPlanManualCurrentChannel, wsClientRogueClassificationReportingAPRadio=wsClientRogueClassificationReportingAPRadio, wsAPTriangulationNonSentryStatusTable=wsAPTriangulationNonSentryStatusTable, wsPowerPlanAlgoComplete=wsPowerPlanAlgoComplete, wsAssociatedClientSessionPktsTransmitted=wsAssociatedClientSessionPktsTransmitted, wsPeerSwitchManagedAPLimitExceeded=wsPeerSwitchManagedAPLimitExceeded, wsChannelPlanManualStatus=wsChannelPlanManualStatus, wsTriangLocAge=wsTriangLocAge, wsManagedAPRadioFrameDuplicateCount=wsManagedAPRadioFrameDuplicateCount, wsAPProfileRadioMCSIndexTable=wsAPProfileRadioMCSIndexTable, wsOnDemandTriggerFloorStatusSigma=wsOnDemandTriggerFloorStatusSigma, wsChannelPlanManualMacAddress=wsChannelPlanManualMacAddress, wsNetworkDenyBcastMode=wsNetworkDenyBcastMode, wsClientFailureTrapMode=wsClientFailureTrapMode, wsRFScanAgeTime=wsRFScanAgeTime, wsAuthenticatedClientMacAddress=wsAuthenticatedClientMacAddress, wsManagedAPResetStatus=wsManagedAPResetStatus, wsWDSLinkDestAPBytesSent=wsWDSLinkDestAPBytesSent, wsAPTriangulationNonSentryRadio=wsAPTriangulationNonSentryRadio, wsAPProfileRadioTspecTable=wsAPProfileRadioTspecTable, wsOuiEntry=wsOuiEntry, wsDetectedClientPreAuthenticationApRadioId=wsDetectedClientPreAuthenticationApRadioId, wsRogueAPMitigationLimit=wsRogueAPMitigationLimit, wsAuthenticatedClientSessionTransmitRetryCount=wsAuthenticatedClientSessionTransmitRetryCount, wsAdHocClientListFull=wsAdHocClientListFull, wsSwitchAssociatedClientStatusTable=wsSwitchAssociatedClientStatusTable, wsOuiDescription=wsOuiDescription, wsAPHWTypeRadioVapCount=wsAPHWTypeRadioVapCount, wsWDSLinkDestSTPState=wsWDSLinkDestSTPState, wsAPProvisioningInitiateAll=wsAPProvisioningInitiateAll, wsIPPollListTable=wsIPPollListTable, wsAssociatedClientTsExcessUsageEvents=wsAssociatedClientTsExcessUsageEvents, wsTriangLocStatus=wsTriangLocStatus, wsAPStandaloneExpectedSsid=wsAPStandaloneExpectedSsid, wsOnDemandTriggerFloorNumber=wsOnDemandTriggerFloorNumber, wsAssociatedClientTransmitRetryFailedCount=wsAssociatedClientTransmitRetryFailedCount, wsSwitchWLANTspecPktsTransmitted=wsSwitchWLANTspecPktsTransmitted, wsManagedAPDistTunnelHomeAPClients=wsManagedAPDistTunnelHomeAPClients, wsManagedAPRadioWLANPktsTransmitted=wsManagedAPRadioWLANPktsTransmitted, wsAPHardwareTypeID=wsAPHardwareTypeID, wsManagedAPSwitchMacAddress=wsManagedAPSwitchMacAddress, wsManagedAPRadioTspecNumTrafficStreamRoamingClients=wsManagedAPRadioTspecNumTrafficStreamRoamingClients, wsManagedAPWLANBytesRecvd=wsManagedAPWLANBytesRecvd, wsAPRogueClassificationTestResult=wsAPRogueClassificationTestResult, wsMACAuthenticationMode=wsMACAuthenticationMode, wsDetectedClientAuthMsgsRecorded=wsDetectedClientAuthMsgsRecorded, wsManagedAPRadioChannel=wsManagedAPRadioChannel, wsPowerPlanGlobalNumPwrInc=wsPowerPlanGlobalNumPwrInc, wsChannelPlanManualAPRadioInterface=wsChannelPlanManualAPRadioInterface, wsAPRadioAPSDMode=wsAPRadioAPSDMode, wsAPRadioFragmentationThreshold=wsAPRadioFragmentationThreshold, knownClientDatabaseLocation=knownClientDatabaseLocation, authThresholdInterval=authThresholdInterval, wsDetectedClientEntryPurge=wsDetectedClientEntryPurge, wsClientNeighborWSManagedAPRadioInterface=wsClientNeighborWSManagedAPRadioInterface, wsAssociatedClientFragmentedPktsTransmitted=wsAssociatedClientFragmentedPktsTransmitted, wsChannelPlanNumOfRadiosScanned=wsChannelPlanNumOfRadiosScanned, wsManagedAPCL2TunnelPktsTransmitted=wsManagedAPCL2TunnelPktsTransmitted, devLocMeasurementSys=devLocMeasurementSys, wsAPCodeDownloadMACAddress=wsAPCodeDownloadMACAddress, wsAssociatedClientSessionStatisticsEntry=wsAssociatedClientSessionStatisticsEntry, rogueUnmanagedApWiredNetwork=rogueUnmanagedApWiredNetwork, wsManagedAPRadioRetryCount=wsManagedAPRadioRetryCount, wsManagedAPManagingSwitch=wsManagedAPManagingSwitch, wsDevLocBldngNum=wsDevLocBldngNum, wsManagedAPTspecPktsTransmitted=wsManagedAPTspecPktsTransmitted, wsManagedAPHWType=wsManagedAPHWType, wsDetectedClientChannel=wsDetectedClientChannel, wsOnDemandTriggerGlobalStatusUsedRadios=wsOnDemandTriggerGlobalStatusUsedRadios, wsAPProfileRadioTspecEntry=wsAPProfileRadioTspecEntry, wsPowerPlanAPTxPower=wsPowerPlanAPTxPower, wsManagedVAPWLANPktsRecvDropped=wsManagedVAPWLANPktsRecvDropped, wsAPRadioAdminMode=wsAPRadioAdminMode, wsDetectedClientHighestNumAuthMsgs=wsDetectedClientHighestNumAuthMsgs, wsManagedAPFailedEntryPurge=wsManagedAPFailedEntryPurge, wsManagedAPVAPTspecNumTrafficStreamRoamingClients=wsManagedAPVAPTspecNumTrafficStreamRoamingClients, devLocRfScanLocMode=devLocRfScanLocMode, wsAPProfileApply=wsAPProfileApply, wsSwitchWLANPktsTransmitted=wsSwitchWLANPktsTransmitted, wsWDSAPGroupAPTable=wsWDSAPGroupAPTable, wsRogueAPAcknowledgeAll=wsRogueAPAcknowledgeAll, wsAuthenticatedClientTransmitRetryFailedCount=wsAuthenticatedClientTransmitRetryFailedCount, notInOUIDatabase=notInOUIDatabase, wsManagedAPTspecBytesTransmitted=wsManagedAPTspecBytesTransmitted, wsRFScanAPStatusTable=wsRFScanAPStatusTable, wsAPProvisioningTable=wsAPProvisioningTable, wsAssociatedClientQosStatusTable=wsAssociatedClientQosStatusTable, wsDetectedClientPreAuthenticationVapMac=wsDetectedClientPreAuthenticationVapMac, wsWDSAPGroupAPMacAddress=wsWDSAPGroupAPMacAddress, wsRrmChannelLoadHistoryEntry=wsRrmChannelLoadHistoryEntry, wsAPRadioChannelBandwidth=wsAPRadioChannelBandwidth, wsAPClientQosMode=wsAPClientQosMode, wsDevLocBldngFlrDesc=wsDevLocBldngFlrDesc, wsManagedAPRadioEligibleChannelListEntry=wsManagedAPRadioEligibleChannelListEntry, wsManagedAPRadioNeighborCount=wsManagedAPRadioNeighborCount, wsManagedAPRadioEligibleChannelListTable=wsManagedAPRadioEligibleChannelListTable, wsAPProfileEntry=wsAPProfileEntry, wsSwitchTspecStatusTable=wsSwitchTspecStatusTable, wsRrmNeighborApPurge=wsRrmNeighborApPurge, wsAPFailureListFull=wsAPFailureListFull, wsOperationalStatusDisableReason=wsOperationalStatusDisableReason, wsDevLocBldngFlrApCount=wsDevLocBldngFlrApCount, wsChannelPlanAPStrongestNewSignal=wsChannelPlanAPStrongestNewSignal, wsAPRadioAutoChannelMode=wsAPRadioAutoChannelMode, wsWDSAPStatusEntry=wsWDSAPStatusEntry, wsAPRadioLoadBalancingMode=wsAPRadioLoadBalancingMode, wsAssociatedClientRRMChannelLoadMeasurementSupported=wsAssociatedClientRRMChannelLoadMeasurementSupported, wsAPStandaloneExpectedSecurity=wsAPStandaloneExpectedSecurity, wsAPProvBackupSwitchIP=wsAPProvBackupSwitchIP, l2centTunnel=l2centTunnel, wsDetectedClientBcastBSSIDProbes=wsDetectedClientBcastBSSIDProbes, wsClientRoamAgeTime=wsClientRoamAgeTime, wsManagedAPVAPTspecMediumTimeUnallocated=wsManagedAPVAPTspecMediumTimeUnallocated, wsFailedAPReportingSwitch=wsFailedAPReportingSwitch, wsManagedAPTspecsAccepted=wsManagedAPTspecsAccepted, wsAPImageTypeID=wsAPImageTypeID, wsTotalWLANDistTunnelClientDenials=wsTotalWLANDistTunnelClientDenials, wsTotalWLANTspecsRejected=wsTotalWLANTspecsRejected, wsAssociatedClientPktsTransmitted=wsAssociatedClientPktsTransmitted, wsAuthenticatedClientPktsRecvDropped=wsAuthenticatedClientPktsRecvDropped, wsChannelPlanAPLastChanScanDuration=wsChannelPlanAPLastChanScanDuration, wsAssociatedClientStatusEntry=wsAssociatedClientStatusEntry, wsNetworkClientQosAccessControlUpType=wsNetworkClientQosAccessControlUpType, wsDetectedClientDeAuthMsgsRecorded=wsDetectedClientDeAuthMsgsRecorded, wsAPRadioShortRetryLimit=wsAPRadioShortRetryLimit, wsSwitchWLANBytesRecvDropped=wsSwitchWLANBytesRecvDropped, wsPeerSwitchManagedAPTable=wsPeerSwitchManagedAPTable, wsAssociatedClientPktsRecvDropped=wsAssociatedClientPktsRecvDropped, wsAPRadioMaxTransmitLifetime=wsAPRadioMaxTransmitLifetime, wsManagedAPRadioWEPUndecryptableCount=wsManagedAPRadioWEPUndecryptableCount, wsChannelPlanAlgoComplete=wsChannelPlanAlgoComplete, wsWDSAPEthPortSTPStatus=wsWDSAPEthPortSTPStatus, wsAuthenticatedClientIpAddress=wsAuthenticatedClientIpAddress, wsClientAssociationDetected=wsClientAssociationDetected, wsWDSGroupConfigRequestAction=wsWDSGroupConfigRequestAction, wsManagedVAPSSID=wsManagedVAPSSID, wsGlobalStatusRegulatoryDomainFor2GHz=wsGlobalStatusRegulatoryDomainFor2GHz, wsChannelPlanAPMacAddress=wsChannelPlanAPMacAddress, rogueAdminConfig=rogueAdminConfig, wsAssociatedClientStatisticsEntry=wsAssociatedClientStatisticsEntry, wsAssociatedClientChannel=wsAssociatedClientChannel, wsPowerPlanAvgNumInterferingVAPs=wsPowerPlanAvgNumInterferingVAPs, wsPeerConfigurationChannelPower=wsPeerConfigurationChannelPower, wsDetectedClientSentryTriangulationNoise=wsDetectedClientSentryTriangulationNoise, wsClientRogueClassificationTestResult=wsClientRogueClassificationTestResult)
mibBuilder.exportSymbols("AT-UWC-WLAN-SWITCH-MIB", rogueDetectedTrapInterval=rogueDetectedTrapInterval, wsAssociatedClientTsViolatePktsRecvd=wsAssociatedClientTsViolatePktsRecvd, wsAuthenticatedClientStationDiscoveryReason=wsAuthenticatedClientStationDiscoveryReason, wsAuthenticatedClientBytesRecvDropped=wsAuthenticatedClientBytesRecvDropped, wsAPHWTypeRadioAmodeSupport=wsAPHWTypeRadioAmodeSupport, wsTotalWLANTspecPktsRecvd=wsTotalWLANTspecPktsRecvd, wsNetworkWEPKeyType=wsNetworkWEPKeyType, wsAssociatedClientNwTime=wsAssociatedClientNwTime, wsSwitchCertReqCommand=wsSwitchCertReqCommand, wsAPStateTrapMode=wsAPStateTrapMode, wsDevLocBldngEntry=wsDevLocBldngEntry, wsChannelPlanLastAlgorithmTime=wsChannelPlanLastAlgorithmTime, wsDetectedClientHighestNumProbes=wsDetectedClientHighestNumProbes, wsWDSAPSTPRootMode=wsWDSAPSTPRootMode, wsDetectedClientSpecificSSIDProbes=wsDetectedClientSpecificSSIDProbes, wsSwitchWLANTspecsRejected=wsSwitchWLANTspecsRejected, wsWDSSourceMacAddr=wsWDSSourceMacAddr, intrusionDetection=intrusionDetection, wsFailedAPFailureType=wsFailedAPFailureType, wsManagedAPRadioTspecBytesTransmitted=wsManagedAPRadioTspecBytesTransmitted, wsAuthenticatedClientNetBiosName=wsAuthenticatedClientNetBiosName, wsManagedAPVAPTspecBytesTransmitted=wsManagedAPVAPTspecBytesTransmitted, wsChannelPlanMode=wsChannelPlanMode, wsWDSGroupNewPassword=wsWDSGroupNewPassword, wsAPProvNewBackupSwitchIP=wsAPProvNewBackupSwitchIP, wsAuthenticatedClientSessionFragmentedPktsTransmitted=wsAuthenticatedClientSessionFragmentedPktsTransmitted, wsAuthenticatedClientRRMBeaconTableMeasurementSupported=wsAuthenticatedClientRRMBeaconTableMeasurementSupported, wsGlobalStatistics=wsGlobalStatistics, wsClientStationMacAddress=wsClientStationMacAddress, wsAPHardwareCapabilityTable=wsAPHardwareCapabilityTable, wsAPStandaloneExpectedWds=wsAPStandaloneExpectedWds, wsAPRadioTspecMode=wsAPRadioTspecMode, wsAPCodeDownloadAbort=wsAPCodeDownloadAbort, wsPowerPlanNumPwrDec=wsPowerPlanNumPwrDec, wsDetectedClientThreatMitigationSent=wsDetectedClientThreatMitigationSent, wsDevLocFlrCount=wsDevLocFlrCount, wsAPSentryTriangulationRssi=wsAPSentryTriangulationRssi, wsAPRadioRateLimit=wsAPRadioRateLimit, wsDevLocManagedApEntry=wsDevLocManagedApEntry, wsL2CentTnnlVlanListTable=wsL2CentTnnlVlanListTable, wsAuthenticatedClientQosDiffservPolicyUpType=wsAuthenticatedClientQosDiffservPolicyUpType, wsPeerConfigurationGlobal=wsPeerConfigurationGlobal, wsRrmChannelLoadCurrentRequestTimeRemaining=wsRrmChannelLoadCurrentRequestTimeRemaining, wsAuthenticatedClientSSID=wsAuthenticatedClientSSID, wsAuthenticatedClientSessionDuplicatePktsRecvd=wsAuthenticatedClientSessionDuplicatePktsRecvd, wsAPTriangulationMacAddr=wsAPTriangulationMacAddr, wsAssociatedClientInactivePeriod=wsAssociatedClientInactivePeriod, wsManagedAPVAPTspecMediumTimeAdmitted=wsManagedAPVAPTspecMediumTimeAdmitted, wsTriangLocYCoord=wsTriangLocYCoord, wsManagedAPProtocolVersion=wsManagedAPProtocolVersion, wsTspecTotalVoiceTrafficStreams=wsTspecTotalVoiceTrafficStreams, wsAutoIPAssignMode=wsAutoIPAssignMode, wdsManagedAP=wdsManagedAP, wsAPRadioPrimaryChannel=wsAPRadioPrimaryChannel, wsAssociatedClientSessionPktsRecvDropped=wsAssociatedClientSessionPktsRecvDropped, wsAuthenticatedClientNeighborWSManagedAPMacAddress=wsAuthenticatedClientNeighborWSManagedAPMacAddress, wsValidAPConfigTable=wsValidAPConfigTable, wsWDSAPGroupAPEntryRowStatus=wsWDSAPGroupAPEntryRowStatus, rogueManagedApInvalidChannel=rogueManagedApInvalidChannel, wsSwitchTspecTotalVideoTrafficStreams=wsSwitchTspecTotalVideoTrafficStreams, wsSwitchProvisioningCommand=wsSwitchProvisioningCommand, wsAuthenticatedClientFragmentedPktsRecvd=wsAuthenticatedClientFragmentedPktsRecvd, wsClearNetworkEntry=wsClearNetworkEntry, wsDetectedClientRoamAge=wsDetectedClientRoamAge, wsCopyAPProfileToProfileId=wsCopyAPProfileToProfileId, wsManagedAPFailed=wsManagedAPFailed, wsDetectedClientPreAuthenticationMacAddr=wsDetectedClientPreAuthenticationMacAddr, wsSwitchTspecStatusEntry=wsSwitchTspecStatusEntry, wsAssociatedClientTsStatusTable=wsAssociatedClientTsStatusTable, wsAuthenticatedClientQosCachedDiffservPolicyUpType=wsAuthenticatedClientQosCachedDiffservPolicyUpType, wsAuthenticatedClientRadioInterface=wsAuthenticatedClientRadioInterface, wsSwitchClusterPriority=wsSwitchClusterPriority, wsManagedAPDatabaseFull=wsManagedAPDatabaseFull, wsDevLocManagedApMac=wsDevLocManagedApMac, wsPeerConfigRequestStatus=wsPeerConfigRequestStatus, wsManagedAPDistTunnelRoamedClientsAgeTimedOut=wsManagedAPDistTunnelRoamedClientsAgeTimedOut, wsWDSDestMacAddr=wsWDSDestMacAddr, wsDetectedClientAgeTime=wsDetectedClientAgeTime, wsDistTunnelMaxMcastRepl=wsDistTunnelMaxMcastRepl, wsTotalManagedAPs=wsTotalManagedAPs, wsManagedAPStatusTable=wsManagedAPStatusTable, wsAssociatedClientBSSID=wsAssociatedClientBSSID, wsGlobalStatusRegulatoryDomainFor5GHz=wsGlobalStatusRegulatoryDomainFor5GHz, wsAPAuthenticationPasswd=wsAPAuthenticationPasswd, wsAPRadioMinTxPower=wsAPRadioMinTxPower, wsManagedAPRadioEligibleChannelRdrDetRequired=wsManagedAPRadioEligibleChannelRdrDetRequired, wsWDSConfigAPCount=wsWDSConfigAPCount, wsAssociatedClientRRMLocationReportSupported=wsAssociatedClientRRMLocationReportSupported, wsDetectedClientSpecificBSSIDProbes=wsDetectedClientSpecificBSSIDProbes, wsAssociatedClientNetBiosName=wsAssociatedClientNetBiosName, wsAPRadioResourceMeasEnabled=wsAPRadioResourceMeasEnabled, wsAPCodeDownloadTotalCount=wsAPCodeDownloadTotalCount, wsAssociatedClientTsRoamingClientIndicator=wsAssociatedClientTsRoamingClientIndicator, wsPowerManualProposedAdjustmentAPRadioInterface=wsPowerManualProposedAdjustmentAPRadioInterface, wsPowerPlanAPStrongestDetectedNeighbor=wsPowerPlanAPStrongestDetectedNeighbor, wsNetworkClientQosTable=wsNetworkClientQosTable, wsAssociatedClientTsPktsTransmitted=wsAssociatedClientTsPktsTransmitted, rogueFakeManagedApManagedSsid=rogueFakeManagedApManagedSsid, wsAPProfileRadioSupportedRatesEntry=wsAPProfileRadioSupportedRatesEntry, wsRrmNeighborVapMacAddr=wsRrmNeighborVapMacAddr, wsWDSBlockedWDSLinkCount=wsWDSBlockedWDSLinkCount, wsAPRadioTspecVideoAcmLimit=wsAPRadioTspecVideoAcmLimit, wsFailedAPHWType=wsFailedAPHWType, wsPeerIpAddress=wsPeerIpAddress, wsAuthenticatedClientSessionPktsTransmitDropped=wsAuthenticatedClientSessionPktsTransmitDropped, wsSwitchDiscoveredAPs=wsSwitchDiscoveredAPs, wsTotalAPs=wsTotalAPs, wsAPProfileRadioSupportedDataMode=wsAPProfileRadioSupportedDataMode, tspecClient=tspecClient, wsAssociatedClientPktsTransmitDropped=wsAssociatedClientPktsTransmitDropped, wsNetworkBandSteerMode=wsNetworkBandSteerMode, wsSwitchStatisticsTable=wsSwitchStatisticsTable, wsManagedAPConfigFailureErrMsg=wsManagedAPConfigFailureErrMsg, wsWDSConfigWDSLinkCount=wsWDSConfigWDSLinkCount, wsManagedAPMacAddress=wsManagedAPMacAddress, wsManagedAPRadioStatisticsTable=wsManagedAPRadioStatisticsTable, wsPeerManagedAPCount=wsPeerManagedAPCount, wsAuthenticatedClientTsViolatePktsRecvd=wsAuthenticatedClientTsViolatePktsRecvd, wsAuthenticatedClientQosDiffservPolicyDownType=wsAuthenticatedClientQosDiffservPolicyDownType, wsManagedAPVAPTspecStatisticsEntry=wsManagedAPVAPTspecStatisticsEntry, wsSwitchTotalClients=wsSwitchTotalClients, wsOnDemandTriggerGlobalStatusBuildingNumber=wsOnDemandTriggerGlobalStatusBuildingNumber, wsWDSLinkSourceAPBytesSent=wsWDSLinkSourceAPBytesSent, wsDetectedClientThreatDetectedStatus=wsDetectedClientThreatDetectedStatus, wsManagedAPRadioInterface=wsManagedAPRadioInterface, wsPowerPlanAPRadioInterface=wsPowerPlanAPRadioInterface, wsPowerPlanAPLastPwrAdjReasonCode=wsPowerPlanAPLastPwrAdjReasonCode, wsAuthenticatedClientSwitchMacAddress=wsAuthenticatedClientSwitchMacAddress, wsManagedAPRadioTspecStatusTable=wsManagedAPRadioTspecStatusTable, wsAssociatedClientQosOperStatus=wsAssociatedClientQosOperStatus, wsDetectedClientListFull=wsDetectedClientListFull, wsAuthenticatedClientQosStatusTable=wsAuthenticatedClientQosStatusTable, wsManagedAPNeighborClientListEntry=wsManagedAPNeighborClientListEntry, wsManagedAPRadioFailedCount=wsManagedAPRadioFailedCount, wsSwitchWLANTspecPktsRecvd=wsSwitchWLANTspecPktsRecvd, wsManagedAPWLANBytesTransmitDropped=wsManagedAPWLANBytesTransmitDropped, wsBasicDataRate=wsBasicDataRate, wsRrmChannelLoadHistoryEntryAge=wsRrmChannelLoadHistoryEntryAge, wsVAPAssociatedClientMacAddress=wsVAPAssociatedClientMacAddress, wsAuthenticatedClientTransmitRetryCount=wsAuthenticatedClientTransmitRetryCount, wsWLANUtilization=wsWLANUtilization, wsOuiTable=wsOuiTable, wsAPRadioProtectionMode=wsAPRadioProtectionMode, rogueStandaloneApInvalidConfig=rogueStandaloneApInvalidConfig, wsManagedAPRadioTspecStatisticsEntry=wsManagedAPRadioTspecStatisticsEntry, wsChannelPlanNumOfRadiosAnalysed=wsChannelPlanNumOfRadiosAnalysed, wsManagedAPRadioWLANPktsRecvd=wsManagedAPRadioWLANPktsRecvd, wsAuthenticatedClientQosStatusEntry=wsAuthenticatedClientQosStatusEntry, wsAPTriangulationSentryStatusEntry=wsAPTriangulationSentryStatusEntry, wsManagedAPDistTunnelMcastPacketsTransmitted=wsManagedAPDistTunnelMcastPacketsTransmitted, wsChannelPlanRunOnManagedApFailure=wsChannelPlanRunOnManagedApFailure, wsRFScanNewClientDetected=wsRFScanNewClientDetected, devLocRfScanLocInterval=devLocRfScanLocInterval, wsAuthenticatedClientSessionBytesRecvDropped=wsAuthenticatedClientSessionBytesRecvDropped, wsManagedAPRadioEligibleChannelLastRdrDetTime=wsManagedAPRadioEligibleChannelLastRdrDetTime, wsDetectedClientTriangulationNonSentryRadio=wsDetectedClientTriangulationNonSentryRadio, wsChannelPlanAPOldChannel=wsChannelPlanAPOldChannel, wsKnownClientMacAddress=wsKnownClientMacAddress, wsTotalDetectedClientPreAuthenticationHistoryEntries=wsTotalDetectedClientPreAuthenticationHistoryEntries, wsGlobalRadiusConfiguration=wsGlobalRadiusConfiguration, wsAPDeAuthenticationAttackStatusTable=wsAPDeAuthenticationAttackStatusTable, wsGlobalPeerConfigSwitchIp=wsGlobalPeerConfigSwitchIp, wsNetworkClientQosMode=wsNetworkClientQosMode, wsAPProfileRowStatus=wsAPProfileRowStatus, wsTspecTrapMode=wsTspecTrapMode, wsSwitchStatisticsEntry=wsSwitchStatisticsEntry, wsAuthenticatedClientTunnelIpAddress=wsAuthenticatedClientTunnelIpAddress, wsAPProfileQOSEntry=wsAPProfileQOSEntry, wsAPProfileState=wsAPProfileState, wsAuthenticatedClientDuplicatePktsRecvd=wsAuthenticatedClientDuplicatePktsRecvd, wsManagedAPEthernetTransmitErrorCount=wsManagedAPEthernetTransmitErrorCount, wsRoguesPresent=wsRoguesPresent, wsRrmChannelLoadCurrentRequest=wsRrmChannelLoadCurrentRequest, wsTotalDiscoveredAPs=wsTotalDiscoveredAPs, wsSwitchAuthenticatedClientStatusEntry=wsSwitchAuthenticatedClientStatusEntry, wsClientRogueClassificationStatusTable=wsClientRogueClassificationStatusTable, wsIpBasePort=wsIpBasePort, wsOnDemandTriggerDeviceType=wsOnDemandTriggerDeviceType, wsManagedAPRadioBandwidth=wsManagedAPRadioBandwidth, wsAssociatedClientDisassociateAction=wsAssociatedClientDisassociateAction, snmpTrapsConfig=snmpTrapsConfig, wsAPAssociationFailure=wsAPAssociationFailure, wsDistTunnelMaxTimeout=wsDistTunnelMaxTimeout, wsNetworkEntry=wsNetworkEntry, wsDetectedClientTriangulationSentryStatusEntry=wsDetectedClientTriangulationSentryStatusEntry, wsPeerWSTrapMode=wsPeerWSTrapMode, wsAssociatedClientDistTunnelRoamStatus=wsAssociatedClientDistTunnelRoamStatus, wsChannelPlanHistoryDepth=wsChannelPlanHistoryDepth, wsAPRogueClassificationTestId=wsAPRogueClassificationTestId, wsPeerStatusEntry=wsPeerStatusEntry)
