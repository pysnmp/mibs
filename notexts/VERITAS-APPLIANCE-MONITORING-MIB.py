#
# PySNMP MIB module VERITAS-APPLIANCE-MONITORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/veritas/VERITAS-APPLIANCE-MONITORING-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 09:41:53 2024
# On host fv-az1110-714 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Counter32, Bits, enterprises, IpAddress, NotificationType, Integer32, iso, mib_2, TimeTicks, Gauge32, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Counter32", "Bits", "enterprises", "IpAddress", "NotificationType", "Integer32", "iso", "mib-2", "TimeTicks", "Gauge32", "MibIdentifier", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
applianceMonitoringMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 48328, 3, 9))
applianceMonitoringMib.setRevisions(('2016-09-06 00:00',))
if mibBuilder.loadTexts: applianceMonitoringMib.setLastUpdated('2016083000Z')
if mibBuilder.loadTexts: applianceMonitoringMib.setOrganization('Veritas Technologies LLC')
veritassoftware = MibIdentifier((1, 3, 6, 1, 4, 1, 48328))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 48328, 3))
systems = MibIdentifier((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2))
vrtssystemName = MibScalar((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrtssystemName.setStatus('current')
vrtsfanTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 3)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsfanTrap.setStatus('current')
vrtspowerTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 4)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtspowerTrap.setStatus('current')
vrtsfibrechannelTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 5)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsfibrechannelTrap.setStatus('current')
vrtstemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 6)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtstemperatureTrap.setStatus('current')
vrtscpuTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 7)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtscpuTrap.setStatus('current')
vrtsdiskTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 8)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsdiskTrap.setStatus('current')
vrtsraidgroupTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 9)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsraidgroupTrap.setStatus('current')
vrtsenclosurefanTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 10)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsenclosurefanTrap.setStatus('current')
vrtsenclosurepowerTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 11)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsenclosurepowerTrap.setStatus('current')
vrtsenclosuretemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 12)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsenclosuretemperatureTrap.setStatus('current')
vrtsenclosurediskTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 13)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsenclosurediskTrap.setStatus('current')
vrtsadapterTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 14)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsadapterTrap.setStatus('current')
vrtsfirmwareTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 15)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsfirmwareTrap.setStatus('current')
vrtspciTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 16)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtspciTrap.setStatus('current')
vrtsnetworkcardTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 17)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsnetworkcardTrap.setStatus('current')
vrtsvolumeTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 18)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsvolumeTrap.setStatus('current')
vrtsbbuTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 19)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsbbuTrap.setStatus('current')
vrtsconnectionTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 20)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsconnectionTrap.setStatus('current')
vrtspartitionTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 21)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtspartitionTrap.setStatus('current')
vrtsstoragestatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 22)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsstoragestatusTrap.setStatus('current')
vrtsdimmTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 23)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsdimmTrap.setStatus('current')
vrtsiscsiTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 24)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsiscsiTrap.setStatus('current')
vrtsethernetTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 1, 25)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsethernetTrap.setStatus('current')
vrtsfailedJobsTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 1)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsfailedJobsTrap.setStatus('current')
vrtsprocessTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 2)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsprocessTrap.setStatus('current')
vrtsdiskSpaceTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 3)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsdiskSpaceTrap.setStatus('current')
vrtssoftwareUpdateSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 4)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtssoftwareUpdateSuccessTrap.setStatus('current')
vrtssoftwareUpdateFailedRollbackSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 5)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtssoftwareUpdateFailedRollbackSuccessTrap.setStatus('current')
vrtssoftwareUpdateFailedRollbackFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 6)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtssoftwareUpdateFailedRollbackFailedTrap.setStatus('current')
vrtsrollbackSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 7)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsrollbackSuccessTrap.setStatus('current')
vrtsrollbackFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 8)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsrollbackFailedTrap.setStatus('current')
vrtsclusterStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 9)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsclusterStateTrap.setStatus('current')
vrtsdiskPerfTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 10)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsdiskPerfTrap.setStatus('current')
vrtscollectorserviceTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 11)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtscollectorserviceTrap.setStatus('current')
vrtsassetTagTrap = NotificationType((1, 3, 6, 1, 4, 1, 48328, 3, 9, 2, 12)).setObjects(("VERITAS-APPLIANCE-MONITORING-MIB", "vrtssystemName"))
if mibBuilder.loadTexts: vrtsassetTagTrap.setStatus('current')
mibBuilder.exportSymbols("VERITAS-APPLIANCE-MONITORING-MIB", vrtssystemName=vrtssystemName, vrtsnetworkcardTrap=vrtsnetworkcardTrap, vrtssoftwareUpdateFailedRollbackSuccessTrap=vrtssoftwareUpdateFailedRollbackSuccessTrap, vrtsrollbackSuccessTrap=vrtsrollbackSuccessTrap, vrtscollectorserviceTrap=vrtscollectorserviceTrap, vrtsethernetTrap=vrtsethernetTrap, vrtsiscsiTrap=vrtsiscsiTrap, vrtsfibrechannelTrap=vrtsfibrechannelTrap, vrtssoftwareUpdateSuccessTrap=vrtssoftwareUpdateSuccessTrap, vrtsbbuTrap=vrtsbbuTrap, vrtsraidgroupTrap=vrtsraidgroupTrap, vrtsclusterStateTrap=vrtsclusterStateTrap, veritassoftware=veritassoftware, vrtsconnectionTrap=vrtsconnectionTrap, vrtscpuTrap=vrtscpuTrap, vrtspciTrap=vrtspciTrap, vrtsenclosuretemperatureTrap=vrtsenclosuretemperatureTrap, vrtsrollbackFailedTrap=vrtsrollbackFailedTrap, vrtsdiskSpaceTrap=vrtsdiskSpaceTrap, vrtsprocessTrap=vrtsprocessTrap, vrtsdimmTrap=vrtsdimmTrap, vrtsassetTagTrap=vrtsassetTagTrap, vrtsadapterTrap=vrtsadapterTrap, vrtsdiskPerfTrap=vrtsdiskPerfTrap, systems=systems, vrtsfirmwareTrap=vrtsfirmwareTrap, vrtspowerTrap=vrtspowerTrap, software=software, vrtsenclosurefanTrap=vrtsenclosurefanTrap, vrtstemperatureTrap=vrtstemperatureTrap, vrtsenclosurediskTrap=vrtsenclosurediskTrap, vrtsenclosurepowerTrap=vrtsenclosurepowerTrap, PYSNMP_MODULE_ID=applianceMonitoringMib, vrtspartitionTrap=vrtspartitionTrap, vrtsdiskTrap=vrtsdiskTrap, vrtssoftwareUpdateFailedRollbackFailedTrap=vrtssoftwareUpdateFailedRollbackFailedTrap, applianceMonitoringMib=applianceMonitoringMib, vrtsfailedJobsTrap=vrtsfailedJobsTrap, vrtsvolumeTrap=vrtsvolumeTrap, vrtsstoragestatusTrap=vrtsstoragestatusTrap, vrtsfanTrap=vrtsfanTrap, products=products)
